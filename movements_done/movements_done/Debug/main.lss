
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000013f0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000002  00800100  00800100  00001464  2**0
                  ALLOC
  2 .comment      00000030  00000000  00000000  00001464  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000258  00000000  00000000  00001494  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00004b32  00000000  00000000  000016ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000885  00000000  00000000  0000621e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000018b5  00000000  00000000  00006aa3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000528  00000000  00000000  00008358  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000598  00000000  00000000  00008880  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000e5e  00000000  00000000  00008e18  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000001e8  00000000  00000000  00009c76  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	4c c0       	rjmp	.+152    	; 0x9a <__ctors_end>
       2:	00 00       	nop
       4:	5b c0       	rjmp	.+182    	; 0xbc <__bad_interrupt>
       6:	00 00       	nop
       8:	59 c0       	rjmp	.+178    	; 0xbc <__bad_interrupt>
       a:	00 00       	nop
       c:	57 c0       	rjmp	.+174    	; 0xbc <__bad_interrupt>
       e:	00 00       	nop
      10:	55 c0       	rjmp	.+170    	; 0xbc <__bad_interrupt>
      12:	00 00       	nop
      14:	53 c0       	rjmp	.+166    	; 0xbc <__bad_interrupt>
      16:	00 00       	nop
      18:	51 c0       	rjmp	.+162    	; 0xbc <__bad_interrupt>
      1a:	00 00       	nop
      1c:	4f c0       	rjmp	.+158    	; 0xbc <__bad_interrupt>
      1e:	00 00       	nop
      20:	4d c0       	rjmp	.+154    	; 0xbc <__bad_interrupt>
      22:	00 00       	nop
      24:	4b c0       	rjmp	.+150    	; 0xbc <__bad_interrupt>
      26:	00 00       	nop
      28:	49 c0       	rjmp	.+146    	; 0xbc <__bad_interrupt>
      2a:	00 00       	nop
      2c:	47 c0       	rjmp	.+142    	; 0xbc <__bad_interrupt>
      2e:	00 00       	nop
      30:	45 c0       	rjmp	.+138    	; 0xbc <__bad_interrupt>
      32:	00 00       	nop
      34:	43 c0       	rjmp	.+134    	; 0xbc <__bad_interrupt>
      36:	00 00       	nop
      38:	41 c0       	rjmp	.+130    	; 0xbc <__bad_interrupt>
      3a:	00 00       	nop
      3c:	3f c0       	rjmp	.+126    	; 0xbc <__bad_interrupt>
      3e:	00 00       	nop
      40:	3d c0       	rjmp	.+122    	; 0xbc <__bad_interrupt>
      42:	00 00       	nop
      44:	3b c0       	rjmp	.+118    	; 0xbc <__bad_interrupt>
      46:	00 00       	nop
      48:	39 c0       	rjmp	.+114    	; 0xbc <__bad_interrupt>
      4a:	00 00       	nop
      4c:	0c 94 e2 08 	jmp	0x11c4	; 0x11c4 <__vector_19>
      50:	35 c0       	rjmp	.+106    	; 0xbc <__bad_interrupt>
      52:	00 00       	nop
      54:	33 c0       	rjmp	.+102    	; 0xbc <__bad_interrupt>
      56:	00 00       	nop
      58:	31 c0       	rjmp	.+98     	; 0xbc <__bad_interrupt>
      5a:	00 00       	nop
      5c:	2f c0       	rjmp	.+94     	; 0xbc <__bad_interrupt>
      5e:	00 00       	nop
      60:	2d c0       	rjmp	.+90     	; 0xbc <__bad_interrupt>
      62:	00 00       	nop
      64:	2b c0       	rjmp	.+86     	; 0xbc <__bad_interrupt>
      66:	00 00       	nop
      68:	29 c0       	rjmp	.+82     	; 0xbc <__bad_interrupt>
      6a:	00 00       	nop
      6c:	27 c0       	rjmp	.+78     	; 0xbc <__bad_interrupt>
      6e:	00 00       	nop
      70:	25 c0       	rjmp	.+74     	; 0xbc <__bad_interrupt>
      72:	00 00       	nop
      74:	23 c0       	rjmp	.+70     	; 0xbc <__bad_interrupt>
      76:	00 00       	nop
      78:	21 c0       	rjmp	.+66     	; 0xbc <__bad_interrupt>
      7a:	00 00       	nop
      7c:	1f c0       	rjmp	.+62     	; 0xbc <__bad_interrupt>
      7e:	00 00       	nop
      80:	1d c0       	rjmp	.+58     	; 0xbc <__bad_interrupt>
      82:	00 00       	nop
      84:	1b c0       	rjmp	.+54     	; 0xbc <__bad_interrupt>
      86:	00 00       	nop
      88:	19 c0       	rjmp	.+50     	; 0xbc <__bad_interrupt>
      8a:	00 00       	nop
      8c:	ae 08       	sbc	r10, r14
      8e:	b5 08       	sbc	r11, r5
      90:	bc 08       	sbc	r11, r12
      92:	c3 08       	sbc	r12, r3
      94:	ca 08       	sbc	r12, r10
      96:	d1 08       	sbc	r13, r1
      98:	d8 08       	sbc	r13, r8

0000009a <__ctors_end>:
      9a:	11 24       	eor	r1, r1
      9c:	1f be       	out	0x3f, r1	; 63
      9e:	cf ef       	ldi	r28, 0xFF	; 255
      a0:	d0 e4       	ldi	r29, 0x40	; 64
      a2:	de bf       	out	0x3e, r29	; 62
      a4:	cd bf       	out	0x3d, r28	; 61

000000a6 <__do_clear_bss>:
      a6:	21 e0       	ldi	r18, 0x01	; 1
      a8:	a0 e0       	ldi	r26, 0x00	; 0
      aa:	b1 e0       	ldi	r27, 0x01	; 1
      ac:	01 c0       	rjmp	.+2      	; 0xb0 <.do_clear_bss_start>

000000ae <.do_clear_bss_loop>:
      ae:	1d 92       	st	X+, r1

000000b0 <.do_clear_bss_start>:
      b0:	a2 30       	cpi	r26, 0x02	; 2
      b2:	b2 07       	cpc	r27, r18
      b4:	e1 f7       	brne	.-8      	; 0xae <.do_clear_bss_loop>
      b6:	98 d0       	rcall	.+304    	; 0x1e8 <main>
      b8:	0c 94 f6 09 	jmp	0x13ec	; 0x13ec <_exit>

000000bc <__bad_interrupt>:
      bc:	a1 cf       	rjmp	.-190    	; 0x0 <__vectors>

000000be <LCD_Command>:
	if (row == 0 && pos<16)
	LCD_Command((pos & 0x0F)|0x80);		/* Command of first row and required position<16 */
	else if (row == 1 && pos<16)
	LCD_Command((pos & 0x0F)|0xC0);		/* Command of first row and required position<16 */
	LCD_String(str);					/* Call LCD string function */
}
      be:	92 b1       	in	r25, 0x02	; 2
      c0:	28 2f       	mov	r18, r24
      c2:	20 7f       	andi	r18, 0xF0	; 240
      c4:	9f 70       	andi	r25, 0x0F	; 15
      c6:	92 2b       	or	r25, r18
      c8:	92 b9       	out	0x02, r25	; 2
      ca:	13 98       	cbi	0x02, 3	; 2
      cc:	12 9a       	sbi	0x02, 2	; 2
      ce:	35 e0       	ldi	r19, 0x05	; 5
      d0:	3a 95       	dec	r19
      d2:	f1 f7       	brne	.-4      	; 0xd0 <LCD_Command+0x12>
      d4:	00 00       	nop
      d6:	12 98       	cbi	0x02, 2	; 2
      d8:	ef e1       	ldi	r30, 0x1F	; 31
      da:	f3 e0       	ldi	r31, 0x03	; 3
      dc:	31 97       	sbiw	r30, 0x01	; 1
      de:	f1 f7       	brne	.-4      	; 0xdc <LCD_Command+0x1e>
      e0:	00 c0       	rjmp	.+0      	; 0xe2 <LCD_Command+0x24>
      e2:	00 00       	nop
      e4:	22 b1       	in	r18, 0x02	; 2
      e6:	f0 e1       	ldi	r31, 0x10	; 16
      e8:	8f 9f       	mul	r24, r31
      ea:	c0 01       	movw	r24, r0
      ec:	11 24       	eor	r1, r1
      ee:	92 2f       	mov	r25, r18
      f0:	9f 70       	andi	r25, 0x0F	; 15
      f2:	89 2b       	or	r24, r25
      f4:	82 b9       	out	0x02, r24	; 2
      f6:	12 9a       	sbi	0x02, 2	; 2
      f8:	35 e0       	ldi	r19, 0x05	; 5
      fa:	3a 95       	dec	r19
      fc:	f1 f7       	brne	.-4      	; 0xfa <LCD_Command+0x3c>
      fe:	00 00       	nop
     100:	12 98       	cbi	0x02, 2	; 2
     102:	8f e3       	ldi	r24, 0x3F	; 63
     104:	9f e1       	ldi	r25, 0x1F	; 31
     106:	01 97       	sbiw	r24, 0x01	; 1
     108:	f1 f7       	brne	.-4      	; 0x106 <LCD_Command+0x48>
     10a:	00 c0       	rjmp	.+0      	; 0x10c <LCD_Command+0x4e>
     10c:	00 00       	nop
     10e:	08 95       	ret

00000110 <LCD_Init>:
     110:	8f ef       	ldi	r24, 0xFF	; 255
     112:	81 b9       	out	0x01, r24	; 1
     114:	2f ef       	ldi	r18, 0xFF	; 255
     116:	89 ef       	ldi	r24, 0xF9	; 249
     118:	90 e0       	ldi	r25, 0x00	; 0
     11a:	21 50       	subi	r18, 0x01	; 1
     11c:	80 40       	sbci	r24, 0x00	; 0
     11e:	90 40       	sbci	r25, 0x00	; 0
     120:	e1 f7       	brne	.-8      	; 0x11a <LCD_Init+0xa>
     122:	00 c0       	rjmp	.+0      	; 0x124 <LCD_Init+0x14>
     124:	00 00       	nop
     126:	83 e3       	ldi	r24, 0x33	; 51
     128:	ca df       	rcall	.-108    	; 0xbe <LCD_Command>
     12a:	82 e3       	ldi	r24, 0x32	; 50
     12c:	c8 df       	rcall	.-112    	; 0xbe <LCD_Command>
     12e:	88 e2       	ldi	r24, 0x28	; 40
     130:	c6 df       	rcall	.-116    	; 0xbe <LCD_Command>
     132:	8c e0       	ldi	r24, 0x0C	; 12
     134:	c4 df       	rcall	.-120    	; 0xbe <LCD_Command>
     136:	86 e0       	ldi	r24, 0x06	; 6
     138:	c2 df       	rcall	.-124    	; 0xbe <LCD_Command>
     13a:	81 e0       	ldi	r24, 0x01	; 1
     13c:	c0 df       	rcall	.-128    	; 0xbe <LCD_Command>
     13e:	8f e3       	ldi	r24, 0x3F	; 63
     140:	9f e1       	ldi	r25, 0x1F	; 31
     142:	01 97       	sbiw	r24, 0x01	; 1
     144:	f1 f7       	brne	.-4      	; 0x142 <LCD_Init+0x32>
     146:	00 c0       	rjmp	.+0      	; 0x148 <LCD_Init+0x38>
     148:	00 00       	nop
     14a:	80 e8       	ldi	r24, 0x80	; 128
     14c:	b8 cf       	rjmp	.-144    	; 0xbe <LCD_Command>
     14e:	08 95       	ret

00000150 <LCD_Clear>:

void LCD_Clear()
{
	LCD_Command (0x01);					/* Clear display */
     150:	81 e0       	ldi	r24, 0x01	; 1
     152:	b5 df       	rcall	.-150    	; 0xbe <LCD_Command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     154:	8f e3       	ldi	r24, 0x3F	; 63
     156:	9f e1       	ldi	r25, 0x1F	; 31
     158:	01 97       	sbiw	r24, 0x01	; 1
     15a:	f1 f7       	brne	.-4      	; 0x158 <LCD_Clear+0x8>
     15c:	00 c0       	rjmp	.+0      	; 0x15e <LCD_Clear+0xe>
     15e:	00 00       	nop
	_delay_ms(2);
	LCD_Command (0x80);					/* Cursor 1st row 0th position */
     160:	80 e8       	ldi	r24, 0x80	; 128
     162:	ad cf       	rjmp	.-166    	; 0xbe <LCD_Command>
     164:	08 95       	ret

00000166 <led_blink_red>:
#include "led.h"

void led_blink_red (uint16_t i)
{
	//Blink LED "i" number of times
	for (; i>0; --i)
     166:	00 97       	sbiw	r24, 0x00	; 0
     168:	b9 f0       	breq	.+46     	; 0x198 <led_blink_red+0x32>
	{
		PORTB|=(1<<0);
     16a:	28 9a       	sbi	0x05, 0	; 5
     16c:	2f ef       	ldi	r18, 0xFF	; 255
     16e:	39 e6       	ldi	r19, 0x69	; 105
     170:	48 e1       	ldi	r20, 0x18	; 24
     172:	21 50       	subi	r18, 0x01	; 1
     174:	30 40       	sbci	r19, 0x00	; 0
     176:	40 40       	sbci	r20, 0x00	; 0
     178:	e1 f7       	brne	.-8      	; 0x172 <led_blink_red+0xc>
     17a:	00 c0       	rjmp	.+0      	; 0x17c <led_blink_red+0x16>
     17c:	00 00       	nop
		_delay_ms(500);
		PORTB=(0<<0);
     17e:	15 b8       	out	0x05, r1	; 5
     180:	2f ef       	ldi	r18, 0xFF	; 255
     182:	39 e6       	ldi	r19, 0x69	; 105
     184:	48 e1       	ldi	r20, 0x18	; 24
     186:	21 50       	subi	r18, 0x01	; 1
     188:	30 40       	sbci	r19, 0x00	; 0
     18a:	40 40       	sbci	r20, 0x00	; 0
     18c:	e1 f7       	brne	.-8      	; 0x186 <led_blink_red+0x20>
     18e:	00 c0       	rjmp	.+0      	; 0x190 <led_blink_red+0x2a>
     190:	00 00       	nop
#include "led.h"

void led_blink_red (uint16_t i)
{
	//Blink LED "i" number of times
	for (; i>0; --i)
     192:	01 97       	sbiw	r24, 0x01	; 1
     194:	00 97       	sbiw	r24, 0x00	; 0
     196:	49 f7       	brne	.-46     	; 0x16a <led_blink_red+0x4>
     198:	08 95       	ret

0000019a <led_blink_green>:
}

void led_blink_green (uint16_t i)
{
	//Blink LED "i" number of times
	for (; i>0; --i)
     19a:	00 97       	sbiw	r24, 0x00	; 0
     19c:	b9 f0       	breq	.+46     	; 0x1cc <led_blink_green+0x32>
	{
		PORTB|=(1<<1);
     19e:	29 9a       	sbi	0x05, 1	; 5
     1a0:	2f ef       	ldi	r18, 0xFF	; 255
     1a2:	39 e6       	ldi	r19, 0x69	; 105
     1a4:	48 e1       	ldi	r20, 0x18	; 24
     1a6:	21 50       	subi	r18, 0x01	; 1
     1a8:	30 40       	sbci	r19, 0x00	; 0
     1aa:	40 40       	sbci	r20, 0x00	; 0
     1ac:	e1 f7       	brne	.-8      	; 0x1a6 <led_blink_green+0xc>
     1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <led_blink_green+0x16>
     1b0:	00 00       	nop
		_delay_ms(500);
		PORTB=(0<<1);
     1b2:	15 b8       	out	0x05, r1	; 5
     1b4:	2f ef       	ldi	r18, 0xFF	; 255
     1b6:	39 e6       	ldi	r19, 0x69	; 105
     1b8:	48 e1       	ldi	r20, 0x18	; 24
     1ba:	21 50       	subi	r18, 0x01	; 1
     1bc:	30 40       	sbci	r19, 0x00	; 0
     1be:	40 40       	sbci	r20, 0x00	; 0
     1c0:	e1 f7       	brne	.-8      	; 0x1ba <led_blink_green+0x20>
     1c2:	00 c0       	rjmp	.+0      	; 0x1c4 <led_blink_green+0x2a>
     1c4:	00 00       	nop
}

void led_blink_green (uint16_t i)
{
	//Blink LED "i" number of times
	for (; i>0; --i)
     1c6:	01 97       	sbiw	r24, 0x01	; 1
     1c8:	00 97       	sbiw	r24, 0x00	; 0
     1ca:	49 f7       	brne	.-46     	; 0x19e <led_blink_green+0x4>
     1cc:	08 95       	ret

000001ce <main_init>:
#include "led.h"


void main_init(void)
{
	DDRB |= 0x03;
     1ce:	84 b1       	in	r24, 0x04	; 4
     1d0:	83 60       	ori	r24, 0x03	; 3
     1d2:	84 b9       	out	0x04, r24	; 4
	uart_init();
     1d4:	ec d0       	rcall	.+472    	; 0x3ae <uart_init>
	LCD_Init();
     1d6:	9c df       	rcall	.-200    	; 0x110 <LCD_Init>
	LCD_Clear();
     1d8:	bb df       	rcall	.-138    	; 0x150 <LCD_Clear>
	servo_init();
     1da:	cf d0       	rcall	.+414    	; 0x37a <servo_init>
	sei();
     1dc:	78 94       	sei
	stand();
     1de:	fb d0       	rcall	.+502    	; 0x3d6 <stand>
	led_blink_red(3);
     1e0:	83 e0       	ldi	r24, 0x03	; 3
     1e2:	90 e0       	ldi	r25, 0x00	; 0
     1e4:	c0 cf       	rjmp	.-128    	; 0x166 <led_blink_red>
     1e6:	08 95       	ret

000001e8 <main>:
************************************************  HUVUDFUNKTION  ********************************************
************************************************************************************************************/

int main(void)
{
	main_init();
     1e8:	f2 df       	rcall	.-28     	; 0x1ce <main_init>
     1ea:	2f ef       	ldi	r18, 0xFF	; 255
     1ec:	87 ea       	ldi	r24, 0xA7	; 167
     1ee:	91 e6       	ldi	r25, 0x61	; 97
     1f0:	21 50       	subi	r18, 0x01	; 1
     1f2:	80 40       	sbci	r24, 0x00	; 0
     1f4:	90 40       	sbci	r25, 0x00	; 0
     1f6:	e1 f7       	brne	.-8      	; 0x1f0 <main+0x8>
     1f8:	00 c0       	rjmp	.+0      	; 0x1fa <main+0x12>
     1fa:	00 00       	nop
	_delay_ms(2000);
	
	while(1)
	{
		led_blink_green(1);
     1fc:	81 e0       	ldi	r24, 0x01	; 1
     1fe:	90 e0       	ldi	r25, 0x00	; 0
     200:	cc df       	rcall	.-104    	; 0x19a <led_blink_green>
     202:	fc cf       	rjmp	.-8      	; 0x1fc <main+0x14>

00000204 <send_servo_command>:

	const uint8_t highByte2 = (uint8_t)((higherLimit >> 8) & 0xff);
	const uint8_t lowByte2 = (uint8_t)(higherLimit & 0xff);
	const uint8_t params2[3] = {HIGHER_ANGLE_LIMIT, lowByte2, highByte2};
	send_servo_command(servoId, WRITE, 3, params2);
}
     204:	df 92       	push	r13
     206:	ef 92       	push	r14
     208:	ff 92       	push	r15
     20a:	0f 93       	push	r16
     20c:	1f 93       	push	r17
     20e:	cf 93       	push	r28
     210:	df 93       	push	r29
     212:	c8 2f       	mov	r28, r24
     214:	e6 2e       	mov	r14, r22
     216:	d4 2e       	mov	r13, r20
     218:	02 2f       	mov	r16, r18
     21a:	13 2f       	mov	r17, r19
     21c:	c4 d0       	rcall	.+392    	; 0x3a6 <send_mode>
     21e:	e0 ec       	ldi	r30, 0xC0	; 192
     220:	f0 e0       	ldi	r31, 0x00	; 0
     222:	80 81       	ld	r24, Z
     224:	80 83       	st	Z, r24
     226:	8f ef       	ldi	r24, 0xFF	; 255
     228:	90 e0       	ldi	r25, 0x00	; 0
     22a:	cd d0       	rcall	.+410    	; 0x3c6 <uart_transmit>
     22c:	8f ef       	ldi	r24, 0xFF	; 255
     22e:	90 e0       	ldi	r25, 0x00	; 0
     230:	ca d0       	rcall	.+404    	; 0x3c6 <uart_transmit>
     232:	8c 2f       	mov	r24, r28
     234:	90 e0       	ldi	r25, 0x00	; 0
     236:	c7 d0       	rcall	.+398    	; 0x3c6 <uart_transmit>
     238:	8d 2d       	mov	r24, r13
     23a:	90 e0       	ldi	r25, 0x00	; 0
     23c:	02 96       	adiw	r24, 0x02	; 2
     23e:	c3 d0       	rcall	.+390    	; 0x3c6 <uart_transmit>
     240:	8e 2d       	mov	r24, r14
     242:	90 e0       	ldi	r25, 0x00	; 0
     244:	c0 d0       	rcall	.+384    	; 0x3c6 <uart_transmit>
     246:	e3 94       	inc	r14
     248:	e3 94       	inc	r14
     24a:	ed 0c       	add	r14, r13
     24c:	ec 0e       	add	r14, r28
     24e:	dd 20       	and	r13, r13
     250:	69 f0       	breq	.+26     	; 0x26c <send_servo_command+0x68>
     252:	c0 2f       	mov	r28, r16
     254:	d1 2f       	mov	r29, r17
     256:	f1 2c       	mov	r15, r1
     258:	8e 01       	movw	r16, r28
     25a:	89 91       	ld	r24, Y+
     25c:	90 e0       	ldi	r25, 0x00	; 0
     25e:	b3 d0       	rcall	.+358    	; 0x3c6 <uart_transmit>
     260:	f8 01       	movw	r30, r16
     262:	80 81       	ld	r24, Z
     264:	e8 0e       	add	r14, r24
     266:	f3 94       	inc	r15
     268:	fd 10       	cpse	r15, r13
     26a:	f6 cf       	rjmp	.-20     	; 0x258 <send_servo_command+0x54>
     26c:	f8 94       	cli
     26e:	8e 2d       	mov	r24, r14
     270:	90 e0       	ldi	r25, 0x00	; 0
     272:	80 95       	com	r24
     274:	90 95       	com	r25
     276:	a7 d0       	rcall	.+334    	; 0x3c6 <uart_transmit>
     278:	e0 ec       	ldi	r30, 0xC0	; 192
     27a:	f0 e0       	ldi	r31, 0x00	; 0
     27c:	80 81       	ld	r24, Z
     27e:	86 ff       	sbrs	r24, 6
     280:	fd cf       	rjmp	.-6      	; 0x27c <send_servo_command+0x78>
     282:	8d d0       	rcall	.+282    	; 0x39e <recieve_mode>
     284:	78 94       	sei
     286:	df 91       	pop	r29
     288:	cf 91       	pop	r28
     28a:	1f 91       	pop	r17
     28c:	0f 91       	pop	r16
     28e:	ff 90       	pop	r15
     290:	ef 90       	pop	r14
     292:	df 90       	pop	r13
     294:	08 95       	ret

00000296 <set_servo_status_return_level>:
     296:	cf 93       	push	r28
     298:	df 93       	push	r29
     29a:	00 d0       	rcall	.+0      	; 0x29c <set_servo_status_return_level+0x6>
     29c:	cd b7       	in	r28, 0x3d	; 61
     29e:	de b7       	in	r29, 0x3e	; 62
     2a0:	90 e1       	ldi	r25, 0x10	; 16
     2a2:	99 83       	std	Y+1, r25	; 0x01
     2a4:	6a 83       	std	Y+2, r22	; 0x02
     2a6:	9e 01       	movw	r18, r28
     2a8:	2f 5f       	subi	r18, 0xFF	; 255
     2aa:	3f 4f       	sbci	r19, 0xFF	; 255
     2ac:	42 e0       	ldi	r20, 0x02	; 2
     2ae:	63 e0       	ldi	r22, 0x03	; 3
     2b0:	a9 df       	rcall	.-174    	; 0x204 <send_servo_command>
     2b2:	0f 90       	pop	r0
     2b4:	0f 90       	pop	r0
     2b6:	df 91       	pop	r29
     2b8:	cf 91       	pop	r28
     2ba:	08 95       	ret

000002bc <set_servo_max_speed>:
     2bc:	cf 93       	push	r28
     2be:	df 93       	push	r29
     2c0:	00 d0       	rcall	.+0      	; 0x2c2 <set_servo_max_speed+0x6>
     2c2:	1f 92       	push	r1
     2c4:	cd b7       	in	r28, 0x3d	; 61
     2c6:	de b7       	in	r29, 0x3e	; 62
     2c8:	90 e2       	ldi	r25, 0x20	; 32
     2ca:	99 83       	std	Y+1, r25	; 0x01
     2cc:	6a 83       	std	Y+2, r22	; 0x02
     2ce:	7b 83       	std	Y+3, r23	; 0x03
     2d0:	9e 01       	movw	r18, r28
     2d2:	2f 5f       	subi	r18, 0xFF	; 255
     2d4:	3f 4f       	sbci	r19, 0xFF	; 255
     2d6:	43 e0       	ldi	r20, 0x03	; 3
     2d8:	63 e0       	ldi	r22, 0x03	; 3
     2da:	94 df       	rcall	.-216    	; 0x204 <send_servo_command>
     2dc:	0f 90       	pop	r0
     2de:	0f 90       	pop	r0
     2e0:	0f 90       	pop	r0
     2e2:	df 91       	pop	r29
     2e4:	cf 91       	pop	r28
     2e6:	08 95       	ret

000002e8 <set_servo_torque>:
     2e8:	cf 93       	push	r28
     2ea:	df 93       	push	r29
     2ec:	00 d0       	rcall	.+0      	; 0x2ee <set_servo_torque+0x6>
     2ee:	1f 92       	push	r1
     2f0:	cd b7       	in	r28, 0x3d	; 61
     2f2:	de b7       	in	r29, 0x3e	; 62
     2f4:	92 e2       	ldi	r25, 0x22	; 34
     2f6:	99 83       	std	Y+1, r25	; 0x01
     2f8:	6a 83       	std	Y+2, r22	; 0x02
     2fa:	7b 83       	std	Y+3, r23	; 0x03
     2fc:	9e 01       	movw	r18, r28
     2fe:	2f 5f       	subi	r18, 0xFF	; 255
     300:	3f 4f       	sbci	r19, 0xFF	; 255
     302:	43 e0       	ldi	r20, 0x03	; 3
     304:	63 e0       	ldi	r22, 0x03	; 3
     306:	7e df       	rcall	.-260    	; 0x204 <send_servo_command>
     308:	0f 90       	pop	r0
     30a:	0f 90       	pop	r0
     30c:	0f 90       	pop	r0
     30e:	df 91       	pop	r29
     310:	cf 91       	pop	r28
     312:	08 95       	ret

00000314 <reg_servo_angle>:

//Laddar ett servo med en vinkel
void reg_servo_angle (const uint8_t servoId, const float angle)
{
     314:	1f 93       	push	r17
     316:	cf 93       	push	r28
     318:	df 93       	push	r29
     31a:	00 d0       	rcall	.+0      	; 0x31c <reg_servo_angle+0x8>
     31c:	1f 92       	push	r1
     31e:	cd b7       	in	r28, 0x3d	; 61
     320:	de b7       	in	r29, 0x3e	; 62
     322:	18 2f       	mov	r17, r24
     324:	cb 01       	movw	r24, r22
     326:	ba 01       	movw	r22, r20
	const uint16_t angleValue = (uint16_t)(angle * (1023.0 / 300.0));
     328:	21 e7       	ldi	r18, 0x71	; 113
     32a:	3d e3       	ldi	r19, 0x3D	; 61
     32c:	4a e5       	ldi	r20, 0x5A	; 90
     32e:	50 e4       	ldi	r21, 0x40	; 64
     330:	cc d7       	rcall	.+3992   	; 0x12ca <__mulsf3>
     332:	76 d7       	rcall	.+3820   	; 0x1220 <__fixunssfsi>
	const uint8_t highByte = (uint8_t)((angleValue >> 8) & 0xff);
	const uint8_t lowByte = (uint8_t)(angleValue & 0xff);
	const uint8_t params[3] = {GOAL_ANGLE, lowByte, highByte};
     334:	8e e1       	ldi	r24, 0x1E	; 30
     336:	89 83       	std	Y+1, r24	; 0x01
//Laddar ett servo med en vinkel
void reg_servo_angle (const uint8_t servoId, const float angle)
{
	const uint16_t angleValue = (uint16_t)(angle * (1023.0 / 300.0));
	const uint8_t highByte = (uint8_t)((angleValue >> 8) & 0xff);
	const uint8_t lowByte = (uint8_t)(angleValue & 0xff);
     338:	6a 83       	std	Y+2, r22	; 0x02

//Laddar ett servo med en vinkel
void reg_servo_angle (const uint8_t servoId, const float angle)
{
	const uint16_t angleValue = (uint16_t)(angle * (1023.0 / 300.0));
	const uint8_t highByte = (uint8_t)((angleValue >> 8) & 0xff);
     33a:	7b 83       	std	Y+3, r23	; 0x03
	const uint8_t lowByte = (uint8_t)(angleValue & 0xff);
	const uint8_t params[3] = {GOAL_ANGLE, lowByte, highByte};
	send_servo_command (servoId, REG, 3, params);
     33c:	9e 01       	movw	r18, r28
     33e:	2f 5f       	subi	r18, 0xFF	; 255
     340:	3f 4f       	sbci	r19, 0xFF	; 255
     342:	43 e0       	ldi	r20, 0x03	; 3
     344:	64 e0       	ldi	r22, 0x04	; 4
     346:	81 2f       	mov	r24, r17
     348:	5d df       	rcall	.-326    	; 0x204 <send_servo_command>
}
     34a:	0f 90       	pop	r0
     34c:	0f 90       	pop	r0
     34e:	0f 90       	pop	r0
     350:	df 91       	pop	r29
     352:	cf 91       	pop	r28
     354:	1f 91       	pop	r17
     356:	08 95       	ret

00000358 <action>:

//Utför de instruktioner som servona har laddats med
void action(void)
{
     358:	cf 93       	push	r28
     35a:	df 93       	push	r29
     35c:	1f 92       	push	r1
     35e:	cd b7       	in	r28, 0x3d	; 61
     360:	de b7       	in	r29, 0x3e	; 62
	const uint8_t params[1] = {0};
     362:	19 82       	std	Y+1, r1	; 0x01
	send_servo_command (0xfe, ACTION, 0, params);
     364:	9e 01       	movw	r18, r28
     366:	2f 5f       	subi	r18, 0xFF	; 255
     368:	3f 4f       	sbci	r19, 0xFF	; 255
     36a:	40 e0       	ldi	r20, 0x00	; 0
     36c:	65 e0       	ldi	r22, 0x05	; 5
     36e:	8e ef       	ldi	r24, 0xFE	; 254
     370:	49 df       	rcall	.-366    	; 0x204 <send_servo_command>
}
     372:	0f 90       	pop	r0
     374:	df 91       	pop	r29
     376:	cf 91       	pop	r28
     378:	08 95       	ret

0000037a <servo_init>:
************************************************************************************************************/

//Initiera standardinställningar för servona
void servo_init(void)
{
	set_servo_status_return_level(0xfe, 0x01);
     37a:	61 e0       	ldi	r22, 0x01	; 1
     37c:	8e ef       	ldi	r24, 0xFE	; 254
     37e:	8b df       	rcall	.-234    	; 0x296 <set_servo_status_return_level>
	set_servo_torque(0xfe, 1023);
     380:	6f ef       	ldi	r22, 0xFF	; 255
     382:	73 e0       	ldi	r23, 0x03	; 3
     384:	8e ef       	ldi	r24, 0xFE	; 254
     386:	b0 df       	rcall	.-160    	; 0x2e8 <set_servo_torque>
	set_servo_max_speed(0xfe, 150);
     388:	66 e9       	ldi	r22, 0x96	; 150
     38a:	70 e0       	ldi	r23, 0x00	; 0
     38c:	8e ef       	ldi	r24, 0xFE	; 254
     38e:	96 cf       	rjmp	.-212    	; 0x2bc <set_servo_max_speed>
     390:	08 95       	ret

00000392 <spi_tranceiver>:
}

//Function to send and receive data
unsigned char spi_tranceiver (unsigned char indata)
{	
	SPDR = indata;											//Load data into buffer
     392:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF)));							//Wait until transmission complete
     394:	0d b4       	in	r0, 0x2d	; 45
     396:	07 fe       	sbrs	r0, 7
     398:	fd cf       	rjmp	.-6      	; 0x394 <spi_tranceiver+0x2>
	return SPDR;											//Return received data
     39a:	8e b5       	in	r24, 0x2e	; 46
}
     39c:	08 95       	ret

0000039e <recieve_mode>:


//Startar Recieve Mode
void recieve_mode(void)
{
	UCSR0B = (0<<TXEN0)|(1<<RXEN0);
     39e:	80 e1       	ldi	r24, 0x10	; 16
     3a0:	80 93 c1 00 	sts	0x00C1, r24
     3a4:	08 95       	ret

000003a6 <send_mode>:
}

//Startar Send Mode
void send_mode(void)
{
	UCSR0B = (1<<TXEN0)|(0<<RXEN0);
     3a6:	88 e0       	ldi	r24, 0x08	; 8
     3a8:	80 93 c1 00 	sts	0x00C1, r24
     3ac:	08 95       	ret

000003ae <uart_init>:
}

//Initiera UART
void uart_init(void)
{
	UBRR0H = (unsigned char)(BAUDRATE>>8);							//Skifta registret 8 bitar åt höger
     3ae:	8f ef       	ldi	r24, 0xFF	; 255
     3b0:	80 93 c5 00 	sts	0x00C5, r24
	UBRR0L = (unsigned char)BAUDRATE;								//Sätt baudrate
     3b4:	80 93 c4 00 	sts	0x00C4, r24
	UCSR0C = (0<<USBS0)|(1<<UCSZ00)|(1<<UCSZ01)|(0<<UPM01);			//Sätter 1 stoppbit, samt 8-bitars dataformat
     3b8:	86 e0       	ldi	r24, 0x06	; 6
     3ba:	80 93 c2 00 	sts	0x00C2, r24


//Startar Recieve Mode
void recieve_mode(void)
{
	UCSR0B = (0<<TXEN0)|(1<<RXEN0);
     3be:	80 e1       	ldi	r24, 0x10	; 16
     3c0:	80 93 c1 00 	sts	0x00C1, r24
     3c4:	08 95       	ret

000003c6 <uart_transmit>:
}

//Skicka med UART
void uart_transmit(unsigned char data)
{
	while(!(UCSR0A & (1<<UDRE0)));									//Väntar på att "transmit-buffern" ska bli tom genom att kolla UDREn-flaggan
     3c6:	e0 ec       	ldi	r30, 0xC0	; 192
     3c8:	f0 e0       	ldi	r31, 0x00	; 0
     3ca:	90 81       	ld	r25, Z
     3cc:	95 ff       	sbrs	r25, 5
     3ce:	fd cf       	rjmp	.-6      	; 0x3ca <uart_transmit+0x4>
	UDR0 = data;												    //Ladda in datan i registret (UDR = Uart Data Register)
     3d0:	80 93 c6 00 	sts	0x00C6, r24
     3d4:	08 95       	ret

000003d6 <stand>:
************************************************************************************************************/

//Funktion för att roboten ska ställa sig upp
void stand(void)
{
	reg_servo_angle(0, STAND_DEG_00);
     3d6:	66 e9       	ldi	r22, 0x96	; 150
     3d8:	70 e0       	ldi	r23, 0x00	; 0
     3da:	80 e0       	ldi	r24, 0x00	; 0
     3dc:	90 e0       	ldi	r25, 0x00	; 0
     3de:	9a df       	rcall	.-204    	; 0x314 <reg_servo_angle>
	reg_servo_angle(3, STAND_DEG_03);
     3e0:	66 e9       	ldi	r22, 0x96	; 150
     3e2:	70 e0       	ldi	r23, 0x00	; 0
     3e4:	83 e0       	ldi	r24, 0x03	; 3
     3e6:	90 e0       	ldi	r25, 0x00	; 0
     3e8:	95 df       	rcall	.-214    	; 0x314 <reg_servo_angle>
	reg_servo_angle(6, STAND_DEG_06);
     3ea:	66 e9       	ldi	r22, 0x96	; 150
     3ec:	70 e0       	ldi	r23, 0x00	; 0
     3ee:	86 e0       	ldi	r24, 0x06	; 6
     3f0:	90 e0       	ldi	r25, 0x00	; 0
     3f2:	90 df       	rcall	.-224    	; 0x314 <reg_servo_angle>
	reg_servo_angle(9, STAND_DEG_09);
     3f4:	66 e9       	ldi	r22, 0x96	; 150
     3f6:	70 e0       	ldi	r23, 0x00	; 0
     3f8:	89 e0       	ldi	r24, 0x09	; 9
     3fa:	90 e0       	ldi	r25, 0x00	; 0
     3fc:	8b df       	rcall	.-234    	; 0x314 <reg_servo_angle>
	reg_servo_angle(12, STAND_DEG_12);
     3fe:	66 e9       	ldi	r22, 0x96	; 150
     400:	70 e0       	ldi	r23, 0x00	; 0
     402:	8c e0       	ldi	r24, 0x0C	; 12
     404:	90 e0       	ldi	r25, 0x00	; 0
     406:	86 df       	rcall	.-244    	; 0x314 <reg_servo_angle>
	reg_servo_angle(15, STAND_DEG_15);
     408:	66 e9       	ldi	r22, 0x96	; 150
     40a:	70 e0       	ldi	r23, 0x00	; 0
     40c:	8f e0       	ldi	r24, 0x0F	; 15
     40e:	90 e0       	ldi	r25, 0x00	; 0
     410:	81 df       	rcall	.-254    	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(1, STAND_DEG_01);
     412:	6a e5       	ldi	r22, 0x5A	; 90
     414:	70 e0       	ldi	r23, 0x00	; 0
     416:	81 e0       	ldi	r24, 0x01	; 1
     418:	90 e0       	ldi	r25, 0x00	; 0
     41a:	7c df       	rcall	.-264    	; 0x314 <reg_servo_angle>
	reg_servo_angle(4, STAND_DEG_04);
     41c:	6a e5       	ldi	r22, 0x5A	; 90
     41e:	70 e0       	ldi	r23, 0x00	; 0
     420:	84 e0       	ldi	r24, 0x04	; 4
     422:	90 e0       	ldi	r25, 0x00	; 0
     424:	77 df       	rcall	.-274    	; 0x314 <reg_servo_angle>
	reg_servo_angle(7, STAND_DEG_07);
     426:	6a e5       	ldi	r22, 0x5A	; 90
     428:	70 e0       	ldi	r23, 0x00	; 0
     42a:	87 e0       	ldi	r24, 0x07	; 7
     42c:	90 e0       	ldi	r25, 0x00	; 0
     42e:	72 df       	rcall	.-284    	; 0x314 <reg_servo_angle>
	reg_servo_angle(10, STAND_DEG_10);
     430:	62 ed       	ldi	r22, 0xD2	; 210
     432:	70 e0       	ldi	r23, 0x00	; 0
     434:	8a e0       	ldi	r24, 0x0A	; 10
     436:	90 e0       	ldi	r25, 0x00	; 0
     438:	6d df       	rcall	.-294    	; 0x314 <reg_servo_angle>
	reg_servo_angle(13, STAND_DEG_13);
     43a:	62 ed       	ldi	r22, 0xD2	; 210
     43c:	70 e0       	ldi	r23, 0x00	; 0
     43e:	8d e0       	ldi	r24, 0x0D	; 13
     440:	90 e0       	ldi	r25, 0x00	; 0
     442:	68 df       	rcall	.-304    	; 0x314 <reg_servo_angle>
	reg_servo_angle(16, STAND_DEG_16);
     444:	62 ed       	ldi	r22, 0xD2	; 210
     446:	70 e0       	ldi	r23, 0x00	; 0
     448:	80 e1       	ldi	r24, 0x10	; 16
     44a:	90 e0       	ldi	r25, 0x00	; 0
     44c:	63 df       	rcall	.-314    	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(2, STAND_DEG_02);
     44e:	66 ee       	ldi	r22, 0xE6	; 230
     450:	70 e0       	ldi	r23, 0x00	; 0
     452:	82 e0       	ldi	r24, 0x02	; 2
     454:	90 e0       	ldi	r25, 0x00	; 0
     456:	5e df       	rcall	.-324    	; 0x314 <reg_servo_angle>
	reg_servo_angle(5, STAND_DEG_05);
     458:	66 ee       	ldi	r22, 0xE6	; 230
     45a:	70 e0       	ldi	r23, 0x00	; 0
     45c:	85 e0       	ldi	r24, 0x05	; 5
     45e:	90 e0       	ldi	r25, 0x00	; 0
     460:	59 df       	rcall	.-334    	; 0x314 <reg_servo_angle>
	reg_servo_angle(8, STAND_DEG_08);
     462:	66 ee       	ldi	r22, 0xE6	; 230
     464:	70 e0       	ldi	r23, 0x00	; 0
     466:	88 e0       	ldi	r24, 0x08	; 8
     468:	90 e0       	ldi	r25, 0x00	; 0
     46a:	54 df       	rcall	.-344    	; 0x314 <reg_servo_angle>
	reg_servo_angle(11, STAND_DEG_11);
     46c:	66 e4       	ldi	r22, 0x46	; 70
     46e:	70 e0       	ldi	r23, 0x00	; 0
     470:	8b e0       	ldi	r24, 0x0B	; 11
     472:	90 e0       	ldi	r25, 0x00	; 0
     474:	4f df       	rcall	.-354    	; 0x314 <reg_servo_angle>
	reg_servo_angle(14, STAND_DEG_14);
     476:	66 e4       	ldi	r22, 0x46	; 70
     478:	70 e0       	ldi	r23, 0x00	; 0
     47a:	8e e0       	ldi	r24, 0x0E	; 14
     47c:	90 e0       	ldi	r25, 0x00	; 0
     47e:	4a df       	rcall	.-364    	; 0x314 <reg_servo_angle>
	reg_servo_angle(17, STAND_DEG_17);
     480:	66 e4       	ldi	r22, 0x46	; 70
     482:	70 e0       	ldi	r23, 0x00	; 0
     484:	81 e1       	ldi	r24, 0x11	; 17
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	45 df       	rcall	.-374    	; 0x314 <reg_servo_angle>
	action();
     48a:	66 cf       	rjmp	.-308    	; 0x358 <action>
     48c:	08 95       	ret

0000048e <one>:
//Funktioner som utgör gångstilarna för rörelse framåt och bakåt
void one(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 153);
     48e:	69 e9       	ldi	r22, 0x99	; 153
     490:	70 e0       	ldi	r23, 0x00	; 0
     492:	86 e0       	ldi	r24, 0x06	; 6
     494:	90 e0       	ldi	r25, 0x00	; 0
     496:	3e df       	rcall	.-388    	; 0x314 <reg_servo_angle>
	reg_servo_angle(7, 92);
     498:	6c e5       	ldi	r22, 0x5C	; 92
     49a:	70 e0       	ldi	r23, 0x00	; 0
     49c:	87 e0       	ldi	r24, 0x07	; 7
     49e:	90 e0       	ldi	r25, 0x00	; 0
     4a0:	39 df       	rcall	.-398    	; 0x314 <reg_servo_angle>
	reg_servo_angle(8, 227);
     4a2:	63 ee       	ldi	r22, 0xE3	; 227
     4a4:	70 e0       	ldi	r23, 0x00	; 0
     4a6:	88 e0       	ldi	r24, 0x08	; 8
     4a8:	90 e0       	ldi	r25, 0x00	; 0
     4aa:	34 df       	rcall	.-408    	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(9, 147);
     4ac:	63 e9       	ldi	r22, 0x93	; 147
     4ae:	70 e0       	ldi	r23, 0x00	; 0
     4b0:	89 e0       	ldi	r24, 0x09	; 9
     4b2:	90 e0       	ldi	r25, 0x00	; 0
     4b4:	2f df       	rcall	.-418    	; 0x314 <reg_servo_angle>
	reg_servo_angle(10, 240);
     4b6:	60 ef       	ldi	r22, 0xF0	; 240
     4b8:	70 e0       	ldi	r23, 0x00	; 0
     4ba:	8a e0       	ldi	r24, 0x0A	; 10
     4bc:	90 e0       	ldi	r25, 0x00	; 0
     4be:	2a df       	rcall	.-428    	; 0x314 <reg_servo_angle>
	reg_servo_angle(11, 62);
     4c0:	6e e3       	ldi	r22, 0x3E	; 62
     4c2:	70 e0       	ldi	r23, 0x00	; 0
     4c4:	8b e0       	ldi	r24, 0x0B	; 11
     4c6:	90 e0       	ldi	r25, 0x00	; 0
     4c8:	25 df       	rcall	.-438    	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(3, 150);
     4ca:	66 e9       	ldi	r22, 0x96	; 150
     4cc:	70 e0       	ldi	r23, 0x00	; 0
     4ce:	83 e0       	ldi	r24, 0x03	; 3
     4d0:	90 e0       	ldi	r25, 0x00	; 0
     4d2:	20 df       	rcall	.-448    	; 0x314 <reg_servo_angle>
	reg_servo_angle(4, 64);
     4d4:	60 e4       	ldi	r22, 0x40	; 64
     4d6:	70 e0       	ldi	r23, 0x00	; 0
     4d8:	84 e0       	ldi	r24, 0x04	; 4
     4da:	90 e0       	ldi	r25, 0x00	; 0
     4dc:	1b df       	rcall	.-458    	; 0x314 <reg_servo_angle>
	reg_servo_angle(5, 237);
     4de:	6d ee       	ldi	r22, 0xED	; 237
     4e0:	70 e0       	ldi	r23, 0x00	; 0
     4e2:	85 e0       	ldi	r24, 0x05	; 5
     4e4:	90 e0       	ldi	r25, 0x00	; 0
     4e6:	16 df       	rcall	.-468    	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(12, 150);
     4e8:	66 e9       	ldi	r22, 0x96	; 150
     4ea:	70 e0       	ldi	r23, 0x00	; 0
     4ec:	8c e0       	ldi	r24, 0x0C	; 12
     4ee:	90 e0       	ldi	r25, 0x00	; 0
     4f0:	11 df       	rcall	.-478    	; 0x314 <reg_servo_angle>
	reg_servo_angle(13, 208);
     4f2:	60 ed       	ldi	r22, 0xD0	; 208
     4f4:	70 e0       	ldi	r23, 0x00	; 0
     4f6:	8d e0       	ldi	r24, 0x0D	; 13
     4f8:	90 e0       	ldi	r25, 0x00	; 0
     4fa:	0c df       	rcall	.-488    	; 0x314 <reg_servo_angle>
	reg_servo_angle(14, 73);
     4fc:	69 e4       	ldi	r22, 0x49	; 73
     4fe:	70 e0       	ldi	r23, 0x00	; 0
     500:	8e e0       	ldi	r24, 0x0E	; 14
     502:	90 e0       	ldi	r25, 0x00	; 0
     504:	07 df       	rcall	.-498    	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(0, 147);
     506:	63 e9       	ldi	r22, 0x93	; 147
     508:	70 e0       	ldi	r23, 0x00	; 0
     50a:	80 e0       	ldi	r24, 0x00	; 0
     50c:	90 e0       	ldi	r25, 0x00	; 0
     50e:	02 df       	rcall	.-508    	; 0x314 <reg_servo_angle>
	reg_servo_angle(1, 92);
     510:	6c e5       	ldi	r22, 0x5C	; 92
     512:	70 e0       	ldi	r23, 0x00	; 0
     514:	81 e0       	ldi	r24, 0x01	; 1
     516:	90 e0       	ldi	r25, 0x00	; 0
     518:	fd de       	rcall	.-518    	; 0x314 <reg_servo_angle>
	reg_servo_angle(2, 227);
     51a:	63 ee       	ldi	r22, 0xE3	; 227
     51c:	70 e0       	ldi	r23, 0x00	; 0
     51e:	82 e0       	ldi	r24, 0x02	; 2
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	f8 de       	rcall	.-528    	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(15, 153);
     524:	69 e9       	ldi	r22, 0x99	; 153
     526:	70 e0       	ldi	r23, 0x00	; 0
     528:	8f e0       	ldi	r24, 0x0F	; 15
     52a:	90 e0       	ldi	r25, 0x00	; 0
     52c:	f3 de       	rcall	.-538    	; 0x314 <reg_servo_angle>
	reg_servo_angle(16, 240);
     52e:	60 ef       	ldi	r22, 0xF0	; 240
     530:	70 e0       	ldi	r23, 0x00	; 0
     532:	80 e1       	ldi	r24, 0x10	; 16
     534:	90 e0       	ldi	r25, 0x00	; 0
     536:	ee de       	rcall	.-548    	; 0x314 <reg_servo_angle>
	reg_servo_angle(17, 62);
     538:	6e e3       	ldi	r22, 0x3E	; 62
     53a:	70 e0       	ldi	r23, 0x00	; 0
     53c:	81 e1       	ldi	r24, 0x11	; 17
     53e:	90 e0       	ldi	r25, 0x00	; 0
     540:	e9 de       	rcall	.-558    	; 0x314 <reg_servo_angle>
     542:	8b e7       	ldi	r24, 0x7B	; 123
     544:	92 e9       	ldi	r25, 0x92	; 146
     546:	01 97       	sbiw	r24, 0x01	; 1
     548:	f1 f7       	brne	.-4      	; 0x546 <one+0xb8>
     54a:	00 c0       	rjmp	.+0      	; 0x54c <one+0xbe>
     54c:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     54e:	04 cf       	rjmp	.-504    	; 0x358 <action>
     550:	08 95       	ret

00000552 <two>:

void two(void)
{
	int scale = 3;

	reg_servo_angle(6, 147);
     552:	63 e9       	ldi	r22, 0x93	; 147
     554:	70 e0       	ldi	r23, 0x00	; 0
     556:	86 e0       	ldi	r24, 0x06	; 6
     558:	90 e0       	ldi	r25, 0x00	; 0
     55a:	dc de       	rcall	.-584    	; 0x314 <reg_servo_angle>
	reg_servo_angle(7, 87);
     55c:	67 e5       	ldi	r22, 0x57	; 87
     55e:	70 e0       	ldi	r23, 0x00	; 0
     560:	87 e0       	ldi	r24, 0x07	; 7
     562:	90 e0       	ldi	r25, 0x00	; 0
     564:	d7 de       	rcall	.-594    	; 0x314 <reg_servo_angle>
	reg_servo_angle(8, 237);
     566:	6d ee       	ldi	r22, 0xED	; 237
     568:	70 e0       	ldi	r23, 0x00	; 0
     56a:	88 e0       	ldi	r24, 0x08	; 8
     56c:	90 e0       	ldi	r25, 0x00	; 0
     56e:	d2 de       	rcall	.-604    	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(9, 143);
     570:	6f e8       	ldi	r22, 0x8F	; 143
     572:	70 e0       	ldi	r23, 0x00	; 0
     574:	89 e0       	ldi	r24, 0x09	; 9
     576:	90 e0       	ldi	r25, 0x00	; 0
     578:	cd de       	rcall	.-614    	; 0x314 <reg_servo_angle>
	reg_servo_angle(10, 235);
     57a:	6b ee       	ldi	r22, 0xEB	; 235
     57c:	70 e0       	ldi	r23, 0x00	; 0
     57e:	8a e0       	ldi	r24, 0x0A	; 10
     580:	90 e0       	ldi	r25, 0x00	; 0
     582:	c8 de       	rcall	.-624    	; 0x314 <reg_servo_angle>
	reg_servo_angle(11, 74);
     584:	6a e4       	ldi	r22, 0x4A	; 74
     586:	70 e0       	ldi	r23, 0x00	; 0
     588:	8b e0       	ldi	r24, 0x0B	; 11
     58a:	90 e0       	ldi	r25, 0x00	; 0
     58c:	c3 de       	rcall	.-634    	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(3, 158);
     58e:	6e e9       	ldi	r22, 0x9E	; 158
     590:	70 e0       	ldi	r23, 0x00	; 0
     592:	83 e0       	ldi	r24, 0x03	; 3
     594:	90 e0       	ldi	r25, 0x00	; 0
     596:	be de       	rcall	.-644    	; 0x314 <reg_servo_angle>
	reg_servo_angle(4, 70);
     598:	66 e4       	ldi	r22, 0x46	; 70
     59a:	70 e0       	ldi	r23, 0x00	; 0
     59c:	84 e0       	ldi	r24, 0x04	; 4
     59e:	90 e0       	ldi	r25, 0x00	; 0
     5a0:	b9 de       	rcall	.-654    	; 0x314 <reg_servo_angle>
	reg_servo_angle(5, 236);
     5a2:	6c ee       	ldi	r22, 0xEC	; 236
     5a4:	70 e0       	ldi	r23, 0x00	; 0
     5a6:	85 e0       	ldi	r24, 0x05	; 5
     5a8:	90 e0       	ldi	r25, 0x00	; 0
     5aa:	b4 de       	rcall	.-664    	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(12, 158);
     5ac:	6e e9       	ldi	r22, 0x9E	; 158
     5ae:	70 e0       	ldi	r23, 0x00	; 0
     5b0:	8c e0       	ldi	r24, 0x0C	; 12
     5b2:	90 e0       	ldi	r25, 0x00	; 0
     5b4:	af de       	rcall	.-674    	; 0x314 <reg_servo_angle>
	reg_servo_angle(13, 207);
     5b6:	6f ec       	ldi	r22, 0xCF	; 207
     5b8:	70 e0       	ldi	r23, 0x00	; 0
     5ba:	8d e0       	ldi	r24, 0x0D	; 13
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	aa de       	rcall	.-684    	; 0x314 <reg_servo_angle>
	reg_servo_angle(14, 74);
     5c0:	6a e4       	ldi	r22, 0x4A	; 74
     5c2:	70 e0       	ldi	r23, 0x00	; 0
     5c4:	8e e0       	ldi	r24, 0x0E	; 14
     5c6:	90 e0       	ldi	r25, 0x00	; 0
     5c8:	a5 de       	rcall	.-694    	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(0, 143);
     5ca:	6f e8       	ldi	r22, 0x8F	; 143
     5cc:	70 e0       	ldi	r23, 0x00	; 0
     5ce:	80 e0       	ldi	r24, 0x00	; 0
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	a0 de       	rcall	.-704    	; 0x314 <reg_servo_angle>
	reg_servo_angle(1, 97);
     5d4:	61 e6       	ldi	r22, 0x61	; 97
     5d6:	70 e0       	ldi	r23, 0x00	; 0
     5d8:	81 e0       	ldi	r24, 0x01	; 1
     5da:	90 e0       	ldi	r25, 0x00	; 0
     5dc:	9b de       	rcall	.-714    	; 0x314 <reg_servo_angle>
	reg_servo_angle(2, 217);
     5de:	69 ed       	ldi	r22, 0xD9	; 217
     5e0:	70 e0       	ldi	r23, 0x00	; 0
     5e2:	82 e0       	ldi	r24, 0x02	; 2
     5e4:	90 e0       	ldi	r25, 0x00	; 0
     5e6:	96 de       	rcall	.-724    	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(15, 147);
     5e8:	63 e9       	ldi	r22, 0x93	; 147
     5ea:	70 e0       	ldi	r23, 0x00	; 0
     5ec:	8f e0       	ldi	r24, 0x0F	; 15
     5ee:	90 e0       	ldi	r25, 0x00	; 0
     5f0:	91 de       	rcall	.-734    	; 0x314 <reg_servo_angle>
	reg_servo_angle(16, 240);
     5f2:	60 ef       	ldi	r22, 0xF0	; 240
     5f4:	70 e0       	ldi	r23, 0x00	; 0
     5f6:	80 e1       	ldi	r24, 0x10	; 16
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	8c de       	rcall	.-744    	; 0x314 <reg_servo_angle>
	reg_servo_angle(17, 60);
     5fc:	6c e3       	ldi	r22, 0x3C	; 60
     5fe:	70 e0       	ldi	r23, 0x00	; 0
     600:	81 e1       	ldi	r24, 0x11	; 17
     602:	90 e0       	ldi	r25, 0x00	; 0
     604:	87 de       	rcall	.-754    	; 0x314 <reg_servo_angle>
     606:	8b e7       	ldi	r24, 0x7B	; 123
     608:	92 e9       	ldi	r25, 0x92	; 146
     60a:	01 97       	sbiw	r24, 0x01	; 1
     60c:	f1 f7       	brne	.-4      	; 0x60a <two+0xb8>
     60e:	00 c0       	rjmp	.+0      	; 0x610 <two+0xbe>
     610:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     612:	a2 ce       	rjmp	.-700    	; 0x358 <action>
     614:	08 95       	ret

00000616 <three>:

void three(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 147);
     616:	63 e9       	ldi	r22, 0x93	; 147
     618:	70 e0       	ldi	r23, 0x00	; 0
     61a:	86 e0       	ldi	r24, 0x06	; 6
     61c:	90 e0       	ldi	r25, 0x00	; 0
     61e:	7a de       	rcall	.-780    	; 0x314 <reg_servo_angle>
	reg_servo_angle(7, 87);
     620:	67 e5       	ldi	r22, 0x57	; 87
     622:	70 e0       	ldi	r23, 0x00	; 0
     624:	87 e0       	ldi	r24, 0x07	; 7
     626:	90 e0       	ldi	r25, 0x00	; 0
     628:	75 de       	rcall	.-790    	; 0x314 <reg_servo_angle>
	reg_servo_angle(8, 237);
     62a:	6d ee       	ldi	r22, 0xED	; 237
     62c:	70 e0       	ldi	r23, 0x00	; 0
     62e:	88 e0       	ldi	r24, 0x08	; 8
     630:	90 e0       	ldi	r25, 0x00	; 0
     632:	70 de       	rcall	.-800    	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(9, 143);
     634:	6f e8       	ldi	r22, 0x8F	; 143
     636:	70 e0       	ldi	r23, 0x00	; 0
     638:	89 e0       	ldi	r24, 0x09	; 9
     63a:	90 e0       	ldi	r25, 0x00	; 0
     63c:	6b de       	rcall	.-810    	; 0x314 <reg_servo_angle>
	reg_servo_angle(10, 203);
     63e:	6b ec       	ldi	r22, 0xCB	; 203
     640:	70 e0       	ldi	r23, 0x00	; 0
     642:	8a e0       	ldi	r24, 0x0A	; 10
     644:	90 e0       	ldi	r25, 0x00	; 0
     646:	66 de       	rcall	.-820    	; 0x314 <reg_servo_angle>
	reg_servo_angle(11, 83);
     648:	63 e5       	ldi	r22, 0x53	; 83
     64a:	70 e0       	ldi	r23, 0x00	; 0
     64c:	8b e0       	ldi	r24, 0x0B	; 11
     64e:	90 e0       	ldi	r25, 0x00	; 0
     650:	61 de       	rcall	.-830    	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(3, 158);
     652:	6e e9       	ldi	r22, 0x9E	; 158
     654:	70 e0       	ldi	r23, 0x00	; 0
     656:	83 e0       	ldi	r24, 0x03	; 3
     658:	90 e0       	ldi	r25, 0x00	; 0
     65a:	5c de       	rcall	.-840    	; 0x314 <reg_servo_angle>
	reg_servo_angle(4, 93);
     65c:	6d e5       	ldi	r22, 0x5D	; 93
     65e:	70 e0       	ldi	r23, 0x00	; 0
     660:	84 e0       	ldi	r24, 0x04	; 4
     662:	90 e0       	ldi	r25, 0x00	; 0
     664:	57 de       	rcall	.-850    	; 0x314 <reg_servo_angle>
	reg_servo_angle(5, 226);
     666:	62 ee       	ldi	r22, 0xE2	; 226
     668:	70 e0       	ldi	r23, 0x00	; 0
     66a:	85 e0       	ldi	r24, 0x05	; 5
     66c:	90 e0       	ldi	r25, 0x00	; 0
     66e:	52 de       	rcall	.-860    	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(12, 158);
     670:	6e e9       	ldi	r22, 0x9E	; 158
     672:	70 e0       	ldi	r23, 0x00	; 0
     674:	8c e0       	ldi	r24, 0x0C	; 12
     676:	90 e0       	ldi	r25, 0x00	; 0
     678:	4d de       	rcall	.-870    	; 0x314 <reg_servo_angle>
	reg_servo_angle(13, 207);
     67a:	6f ec       	ldi	r22, 0xCF	; 207
     67c:	70 e0       	ldi	r23, 0x00	; 0
     67e:	8d e0       	ldi	r24, 0x0D	; 13
     680:	90 e0       	ldi	r25, 0x00	; 0
     682:	48 de       	rcall	.-880    	; 0x314 <reg_servo_angle>
	reg_servo_angle(14, 74);
     684:	6a e4       	ldi	r22, 0x4A	; 74
     686:	70 e0       	ldi	r23, 0x00	; 0
     688:	8e e0       	ldi	r24, 0x0E	; 14
     68a:	90 e0       	ldi	r25, 0x00	; 0
     68c:	43 de       	rcall	.-890    	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(0, 143);
     68e:	6f e8       	ldi	r22, 0x8F	; 143
     690:	70 e0       	ldi	r23, 0x00	; 0
     692:	80 e0       	ldi	r24, 0x00	; 0
     694:	90 e0       	ldi	r25, 0x00	; 0
     696:	3e de       	rcall	.-900    	; 0x314 <reg_servo_angle>
	reg_servo_angle(1, 97);
     698:	61 e6       	ldi	r22, 0x61	; 97
     69a:	70 e0       	ldi	r23, 0x00	; 0
     69c:	81 e0       	ldi	r24, 0x01	; 1
     69e:	90 e0       	ldi	r25, 0x00	; 0
     6a0:	39 de       	rcall	.-910    	; 0x314 <reg_servo_angle>
	reg_servo_angle(2, 217);
     6a2:	69 ed       	ldi	r22, 0xD9	; 217
     6a4:	70 e0       	ldi	r23, 0x00	; 0
     6a6:	82 e0       	ldi	r24, 0x02	; 2
     6a8:	90 e0       	ldi	r25, 0x00	; 0
     6aa:	34 de       	rcall	.-920    	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(15, 147);
     6ac:	63 e9       	ldi	r22, 0x93	; 147
     6ae:	70 e0       	ldi	r23, 0x00	; 0
     6b0:	8f e0       	ldi	r24, 0x0F	; 15
     6b2:	90 e0       	ldi	r25, 0x00	; 0
     6b4:	2f de       	rcall	.-930    	; 0x314 <reg_servo_angle>
	reg_servo_angle(16, 213);
     6b6:	65 ed       	ldi	r22, 0xD5	; 213
     6b8:	70 e0       	ldi	r23, 0x00	; 0
     6ba:	80 e1       	ldi	r24, 0x10	; 16
     6bc:	90 e0       	ldi	r25, 0x00	; 0
     6be:	2a de       	rcall	.-940    	; 0x314 <reg_servo_angle>
	reg_servo_angle(17, 63);
     6c0:	6f e3       	ldi	r22, 0x3F	; 63
     6c2:	70 e0       	ldi	r23, 0x00	; 0
     6c4:	81 e1       	ldi	r24, 0x11	; 17
     6c6:	90 e0       	ldi	r25, 0x00	; 0
     6c8:	25 de       	rcall	.-950    	; 0x314 <reg_servo_angle>
     6ca:	8b e7       	ldi	r24, 0x7B	; 123
     6cc:	92 e9       	ldi	r25, 0x92	; 146
     6ce:	01 97       	sbiw	r24, 0x01	; 1
     6d0:	f1 f7       	brne	.-4      	; 0x6ce <three+0xb8>
     6d2:	00 c0       	rjmp	.+0      	; 0x6d4 <three+0xbe>
     6d4:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     6d6:	40 ce       	rjmp	.-896    	; 0x358 <action>
     6d8:	08 95       	ret

000006da <four>:

void four(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 147);
     6da:	63 e9       	ldi	r22, 0x93	; 147
     6dc:	70 e0       	ldi	r23, 0x00	; 0
     6de:	86 e0       	ldi	r24, 0x06	; 6
     6e0:	90 e0       	ldi	r25, 0x00	; 0
     6e2:	18 de       	rcall	.-976    	; 0x314 <reg_servo_angle>
	reg_servo_angle(7, 60);
     6e4:	6c e3       	ldi	r22, 0x3C	; 60
     6e6:	70 e0       	ldi	r23, 0x00	; 0
     6e8:	87 e0       	ldi	r24, 0x07	; 7
     6ea:	90 e0       	ldi	r25, 0x00	; 0
     6ec:	13 de       	rcall	.-986    	; 0x314 <reg_servo_angle>
	reg_servo_angle(8, 240);
     6ee:	60 ef       	ldi	r22, 0xF0	; 240
     6f0:	70 e0       	ldi	r23, 0x00	; 0
     6f2:	88 e0       	ldi	r24, 0x08	; 8
     6f4:	90 e0       	ldi	r25, 0x00	; 0
     6f6:	0e de       	rcall	.-996    	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(9, 143);
     6f8:	6f e8       	ldi	r22, 0x8F	; 143
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	89 e0       	ldi	r24, 0x09	; 9
     6fe:	90 e0       	ldi	r25, 0x00	; 0
     700:	09 de       	rcall	.-1006   	; 0x314 <reg_servo_angle>
	reg_servo_angle(10, 203);
     702:	6b ec       	ldi	r22, 0xCB	; 203
     704:	70 e0       	ldi	r23, 0x00	; 0
     706:	8a e0       	ldi	r24, 0x0A	; 10
     708:	90 e0       	ldi	r25, 0x00	; 0
     70a:	04 de       	rcall	.-1016   	; 0x314 <reg_servo_angle>
	reg_servo_angle(11, 83);
     70c:	63 e5       	ldi	r22, 0x53	; 83
     70e:	70 e0       	ldi	r23, 0x00	; 0
     710:	8b e0       	ldi	r24, 0x0B	; 11
     712:	90 e0       	ldi	r25, 0x00	; 0
     714:	ff dd       	rcall	.-1026   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(3, 158);
     716:	6e e9       	ldi	r22, 0x9E	; 158
     718:	70 e0       	ldi	r23, 0x00	; 0
     71a:	83 e0       	ldi	r24, 0x03	; 3
     71c:	90 e0       	ldi	r25, 0x00	; 0
     71e:	fa dd       	rcall	.-1036   	; 0x314 <reg_servo_angle>
	reg_servo_angle(4, 93);
     720:	6d e5       	ldi	r22, 0x5D	; 93
     722:	70 e0       	ldi	r23, 0x00	; 0
     724:	84 e0       	ldi	r24, 0x04	; 4
     726:	90 e0       	ldi	r25, 0x00	; 0
     728:	f5 dd       	rcall	.-1046   	; 0x314 <reg_servo_angle>
	reg_servo_angle(5, 226);
     72a:	62 ee       	ldi	r22, 0xE2	; 226
     72c:	70 e0       	ldi	r23, 0x00	; 0
     72e:	85 e0       	ldi	r24, 0x05	; 5
     730:	90 e0       	ldi	r25, 0x00	; 0
     732:	f0 dd       	rcall	.-1056   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(12, 158);
     734:	6e e9       	ldi	r22, 0x9E	; 158
     736:	70 e0       	ldi	r23, 0x00	; 0
     738:	8c e0       	ldi	r24, 0x0C	; 12
     73a:	90 e0       	ldi	r25, 0x00	; 0
     73c:	eb dd       	rcall	.-1066   	; 0x314 <reg_servo_angle>
	reg_servo_angle(13, 234);
     73e:	6a ee       	ldi	r22, 0xEA	; 234
     740:	70 e0       	ldi	r23, 0x00	; 0
     742:	8d e0       	ldi	r24, 0x0D	; 13
     744:	90 e0       	ldi	r25, 0x00	; 0
     746:	e6 dd       	rcall	.-1076   	; 0x314 <reg_servo_angle>
	reg_servo_angle(14, 64);
     748:	60 e4       	ldi	r22, 0x40	; 64
     74a:	70 e0       	ldi	r23, 0x00	; 0
     74c:	8e e0       	ldi	r24, 0x0E	; 14
     74e:	90 e0       	ldi	r25, 0x00	; 0
     750:	e1 dd       	rcall	.-1086   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(0, 143);
     752:	6f e8       	ldi	r22, 0x8F	; 143
     754:	70 e0       	ldi	r23, 0x00	; 0
     756:	80 e0       	ldi	r24, 0x00	; 0
     758:	90 e0       	ldi	r25, 0x00	; 0
     75a:	dc dd       	rcall	.-1096   	; 0x314 <reg_servo_angle>
	reg_servo_angle(1, 60);
     75c:	6c e3       	ldi	r22, 0x3C	; 60
     75e:	70 e0       	ldi	r23, 0x00	; 0
     760:	81 e0       	ldi	r24, 0x01	; 1
     762:	90 e0       	ldi	r25, 0x00	; 0
     764:	d7 dd       	rcall	.-1106   	; 0x314 <reg_servo_angle>
	reg_servo_angle(2, 226);
     766:	62 ee       	ldi	r22, 0xE2	; 226
     768:	70 e0       	ldi	r23, 0x00	; 0
     76a:	82 e0       	ldi	r24, 0x02	; 2
     76c:	90 e0       	ldi	r25, 0x00	; 0
     76e:	d2 dd       	rcall	.-1116   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(15, 147);
     770:	63 e9       	ldi	r22, 0x93	; 147
     772:	70 e0       	ldi	r23, 0x00	; 0
     774:	8f e0       	ldi	r24, 0x0F	; 15
     776:	90 e0       	ldi	r25, 0x00	; 0
     778:	cd dd       	rcall	.-1126   	; 0x314 <reg_servo_angle>
	reg_servo_angle(16, 213);
     77a:	65 ed       	ldi	r22, 0xD5	; 213
     77c:	70 e0       	ldi	r23, 0x00	; 0
     77e:	80 e1       	ldi	r24, 0x10	; 16
     780:	90 e0       	ldi	r25, 0x00	; 0
     782:	c8 dd       	rcall	.-1136   	; 0x314 <reg_servo_angle>
	reg_servo_angle(17, 63);
     784:	6f e3       	ldi	r22, 0x3F	; 63
     786:	70 e0       	ldi	r23, 0x00	; 0
     788:	81 e1       	ldi	r24, 0x11	; 17
     78a:	90 e0       	ldi	r25, 0x00	; 0
     78c:	c3 dd       	rcall	.-1146   	; 0x314 <reg_servo_angle>
     78e:	8b e7       	ldi	r24, 0x7B	; 123
     790:	92 e9       	ldi	r25, 0x92	; 146
     792:	01 97       	sbiw	r24, 0x01	; 1
     794:	f1 f7       	brne	.-4      	; 0x792 <four+0xb8>
     796:	00 c0       	rjmp	.+0      	; 0x798 <four+0xbe>
     798:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     79a:	de cd       	rjmp	.-1092   	; 0x358 <action>
     79c:	08 95       	ret

0000079e <five>:

void five(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 153);
     79e:	69 e9       	ldi	r22, 0x99	; 153
     7a0:	70 e0       	ldi	r23, 0x00	; 0
     7a2:	86 e0       	ldi	r24, 0x06	; 6
     7a4:	90 e0       	ldi	r25, 0x00	; 0
     7a6:	b6 dd       	rcall	.-1172   	; 0x314 <reg_servo_angle>
	reg_servo_angle(7, 60);
     7a8:	6c e3       	ldi	r22, 0x3C	; 60
     7aa:	70 e0       	ldi	r23, 0x00	; 0
     7ac:	87 e0       	ldi	r24, 0x07	; 7
     7ae:	90 e0       	ldi	r25, 0x00	; 0
     7b0:	b1 dd       	rcall	.-1182   	; 0x314 <reg_servo_angle>
	reg_servo_angle(8, 238);
     7b2:	6e ee       	ldi	r22, 0xEE	; 238
     7b4:	70 e0       	ldi	r23, 0x00	; 0
     7b6:	88 e0       	ldi	r24, 0x08	; 8
     7b8:	90 e0       	ldi	r25, 0x00	; 0
     7ba:	ac dd       	rcall	.-1192   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(9, 147);
     7bc:	63 e9       	ldi	r22, 0x93	; 147
     7be:	70 e0       	ldi	r23, 0x00	; 0
     7c0:	89 e0       	ldi	r24, 0x09	; 9
     7c2:	90 e0       	ldi	r25, 0x00	; 0
     7c4:	a7 dd       	rcall	.-1202   	; 0x314 <reg_servo_angle>
	reg_servo_angle(10, 208);
     7c6:	60 ed       	ldi	r22, 0xD0	; 208
     7c8:	70 e0       	ldi	r23, 0x00	; 0
     7ca:	8a e0       	ldi	r24, 0x0A	; 10
     7cc:	90 e0       	ldi	r25, 0x00	; 0
     7ce:	a2 dd       	rcall	.-1212   	; 0x314 <reg_servo_angle>
	reg_servo_angle(11, 73);
     7d0:	69 e4       	ldi	r22, 0x49	; 73
     7d2:	70 e0       	ldi	r23, 0x00	; 0
     7d4:	8b e0       	ldi	r24, 0x0B	; 11
     7d6:	90 e0       	ldi	r25, 0x00	; 0
     7d8:	9d dd       	rcall	.-1222   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(3, 150);
     7da:	66 e9       	ldi	r22, 0x96	; 150
     7dc:	70 e0       	ldi	r23, 0x00	; 0
     7de:	83 e0       	ldi	r24, 0x03	; 3
     7e0:	90 e0       	ldi	r25, 0x00	; 0
     7e2:	98 dd       	rcall	.-1232   	; 0x314 <reg_servo_angle>
	reg_servo_angle(4, 92);
     7e4:	6c e5       	ldi	r22, 0x5C	; 92
     7e6:	70 e0       	ldi	r23, 0x00	; 0
     7e8:	84 e0       	ldi	r24, 0x04	; 4
     7ea:	90 e0       	ldi	r25, 0x00	; 0
     7ec:	93 dd       	rcall	.-1242   	; 0x314 <reg_servo_angle>
	reg_servo_angle(5, 227);
     7ee:	63 ee       	ldi	r22, 0xE3	; 227
     7f0:	70 e0       	ldi	r23, 0x00	; 0
     7f2:	85 e0       	ldi	r24, 0x05	; 5
     7f4:	90 e0       	ldi	r25, 0x00	; 0
     7f6:	8e dd       	rcall	.-1252   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(12, 150);
     7f8:	66 e9       	ldi	r22, 0x96	; 150
     7fa:	70 e0       	ldi	r23, 0x00	; 0
     7fc:	8c e0       	ldi	r24, 0x0C	; 12
     7fe:	90 e0       	ldi	r25, 0x00	; 0
     800:	89 dd       	rcall	.-1262   	; 0x314 <reg_servo_angle>
	reg_servo_angle(13, 235);
     802:	6b ee       	ldi	r22, 0xEB	; 235
     804:	70 e0       	ldi	r23, 0x00	; 0
     806:	8d e0       	ldi	r24, 0x0D	; 13
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	84 dd       	rcall	.-1272   	; 0x314 <reg_servo_angle>
	reg_servo_angle(14, 63);
     80c:	6f e3       	ldi	r22, 0x3F	; 63
     80e:	70 e0       	ldi	r23, 0x00	; 0
     810:	8e e0       	ldi	r24, 0x0E	; 14
     812:	90 e0       	ldi	r25, 0x00	; 0
     814:	7f dd       	rcall	.-1282   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(0, 147);
     816:	63 e9       	ldi	r22, 0x93	; 147
     818:	70 e0       	ldi	r23, 0x00	; 0
     81a:	80 e0       	ldi	r24, 0x00	; 0
     81c:	90 e0       	ldi	r25, 0x00	; 0
     81e:	7a dd       	rcall	.-1292   	; 0x314 <reg_servo_angle>
	reg_servo_angle(1, 60);
     820:	6c e3       	ldi	r22, 0x3C	; 60
     822:	70 e0       	ldi	r23, 0x00	; 0
     824:	81 e0       	ldi	r24, 0x01	; 1
     826:	90 e0       	ldi	r25, 0x00	; 0
     828:	75 dd       	rcall	.-1302   	; 0x314 <reg_servo_angle>
	reg_servo_angle(2, 238);
     82a:	6e ee       	ldi	r22, 0xEE	; 238
     82c:	70 e0       	ldi	r23, 0x00	; 0
     82e:	82 e0       	ldi	r24, 0x02	; 2
     830:	90 e0       	ldi	r25, 0x00	; 0
     832:	70 dd       	rcall	.-1312   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(15, 153);
     834:	69 e9       	ldi	r22, 0x99	; 153
     836:	70 e0       	ldi	r23, 0x00	; 0
     838:	8f e0       	ldi	r24, 0x0F	; 15
     83a:	90 e0       	ldi	r25, 0x00	; 0
     83c:	6b dd       	rcall	.-1322   	; 0x314 <reg_servo_angle>
	reg_servo_angle(16, 208);
     83e:	60 ed       	ldi	r22, 0xD0	; 208
     840:	70 e0       	ldi	r23, 0x00	; 0
     842:	80 e1       	ldi	r24, 0x10	; 16
     844:	90 e0       	ldi	r25, 0x00	; 0
     846:	66 dd       	rcall	.-1332   	; 0x314 <reg_servo_angle>
	reg_servo_angle(17, 73);
     848:	69 e4       	ldi	r22, 0x49	; 73
     84a:	70 e0       	ldi	r23, 0x00	; 0
     84c:	81 e1       	ldi	r24, 0x11	; 17
     84e:	90 e0       	ldi	r25, 0x00	; 0
     850:	61 dd       	rcall	.-1342   	; 0x314 <reg_servo_angle>
     852:	8b e7       	ldi	r24, 0x7B	; 123
     854:	92 e9       	ldi	r25, 0x92	; 146
     856:	01 97       	sbiw	r24, 0x01	; 1
     858:	f1 f7       	brne	.-4      	; 0x856 <five+0xb8>
     85a:	00 c0       	rjmp	.+0      	; 0x85c <five+0xbe>
     85c:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     85e:	7c cd       	rjmp	.-1288   	; 0x358 <action>
     860:	08 95       	ret

00000862 <six>:

void six(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 157);
     862:	6d e9       	ldi	r22, 0x9D	; 157
     864:	70 e0       	ldi	r23, 0x00	; 0
     866:	86 e0       	ldi	r24, 0x06	; 6
     868:	90 e0       	ldi	r25, 0x00	; 0
     86a:	54 dd       	rcall	.-1368   	; 0x314 <reg_servo_angle>
	reg_servo_angle(7, 60);
     86c:	6c e3       	ldi	r22, 0x3C	; 60
     86e:	70 e0       	ldi	r23, 0x00	; 0
     870:	87 e0       	ldi	r24, 0x07	; 7
     872:	90 e0       	ldi	r25, 0x00	; 0
     874:	4f dd       	rcall	.-1378   	; 0x314 <reg_servo_angle>
	reg_servo_angle(8, 226);
     876:	62 ee       	ldi	r22, 0xE2	; 226
     878:	70 e0       	ldi	r23, 0x00	; 0
     87a:	88 e0       	ldi	r24, 0x08	; 8
     87c:	90 e0       	ldi	r25, 0x00	; 0
     87e:	4a dd       	rcall	.-1388   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(9, 153);
     880:	69 e9       	ldi	r22, 0x99	; 153
     882:	70 e0       	ldi	r23, 0x00	; 0
     884:	89 e0       	ldi	r24, 0x09	; 9
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	45 dd       	rcall	.-1398   	; 0x314 <reg_servo_angle>
	reg_servo_angle(10, 213);
     88a:	65 ed       	ldi	r22, 0xD5	; 213
     88c:	70 e0       	ldi	r23, 0x00	; 0
     88e:	8a e0       	ldi	r24, 0x0A	; 10
     890:	90 e0       	ldi	r25, 0x00	; 0
     892:	40 dd       	rcall	.-1408   	; 0x314 <reg_servo_angle>
	reg_servo_angle(11, 63);
     894:	6f e3       	ldi	r22, 0x3F	; 63
     896:	70 e0       	ldi	r23, 0x00	; 0
     898:	8b e0       	ldi	r24, 0x0B	; 11
     89a:	90 e0       	ldi	r25, 0x00	; 0
     89c:	3b dd       	rcall	.-1418   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(3, 142);
     89e:	6e e8       	ldi	r22, 0x8E	; 142
     8a0:	70 e0       	ldi	r23, 0x00	; 0
     8a2:	83 e0       	ldi	r24, 0x03	; 3
     8a4:	90 e0       	ldi	r25, 0x00	; 0
     8a6:	36 dd       	rcall	.-1428   	; 0x314 <reg_servo_angle>
	reg_servo_angle(4, 93);
     8a8:	6d e5       	ldi	r22, 0x5D	; 93
     8aa:	70 e0       	ldi	r23, 0x00	; 0
     8ac:	84 e0       	ldi	r24, 0x04	; 4
     8ae:	90 e0       	ldi	r25, 0x00	; 0
     8b0:	31 dd       	rcall	.-1438   	; 0x314 <reg_servo_angle>
	reg_servo_angle(5, 226);
     8b2:	62 ee       	ldi	r22, 0xE2	; 226
     8b4:	70 e0       	ldi	r23, 0x00	; 0
     8b6:	85 e0       	ldi	r24, 0x05	; 5
     8b8:	90 e0       	ldi	r25, 0x00	; 0
     8ba:	2c dd       	rcall	.-1448   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(12, 142);
     8bc:	6e e8       	ldi	r22, 0x8E	; 142
     8be:	70 e0       	ldi	r23, 0x00	; 0
     8c0:	8c e0       	ldi	r24, 0x0C	; 12
     8c2:	90 e0       	ldi	r25, 0x00	; 0
     8c4:	27 dd       	rcall	.-1458   	; 0x314 <reg_servo_angle>
	reg_servo_angle(13, 235);
     8c6:	6b ee       	ldi	r22, 0xEB	; 235
     8c8:	70 e0       	ldi	r23, 0x00	; 0
     8ca:	8d e0       	ldi	r24, 0x0D	; 13
     8cc:	90 e0       	ldi	r25, 0x00	; 0
     8ce:	22 dd       	rcall	.-1468   	; 0x314 <reg_servo_angle>
	reg_servo_angle(14, 64);
     8d0:	60 e4       	ldi	r22, 0x40	; 64
     8d2:	70 e0       	ldi	r23, 0x00	; 0
     8d4:	8e e0       	ldi	r24, 0x0E	; 14
     8d6:	90 e0       	ldi	r25, 0x00	; 0
     8d8:	1d dd       	rcall	.-1478   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(0, 153);
     8da:	69 e9       	ldi	r22, 0x99	; 153
     8dc:	70 e0       	ldi	r23, 0x00	; 0
     8de:	80 e0       	ldi	r24, 0x00	; 0
     8e0:	90 e0       	ldi	r25, 0x00	; 0
     8e2:	18 dd       	rcall	.-1488   	; 0x314 <reg_servo_angle>
	reg_servo_angle(1, 60);
     8e4:	6c e3       	ldi	r22, 0x3C	; 60
     8e6:	70 e0       	ldi	r23, 0x00	; 0
     8e8:	81 e0       	ldi	r24, 0x01	; 1
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	13 dd       	rcall	.-1498   	; 0x314 <reg_servo_angle>
	reg_servo_angle(2, 240);
     8ee:	60 ef       	ldi	r22, 0xF0	; 240
     8f0:	70 e0       	ldi	r23, 0x00	; 0
     8f2:	82 e0       	ldi	r24, 0x02	; 2
     8f4:	90 e0       	ldi	r25, 0x00	; 0
     8f6:	0e dd       	rcall	.-1508   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(15, 157);
     8f8:	6d e9       	ldi	r22, 0x9D	; 157
     8fa:	70 e0       	ldi	r23, 0x00	; 0
     8fc:	8f e0       	ldi	r24, 0x0F	; 15
     8fe:	90 e0       	ldi	r25, 0x00	; 0
     900:	09 dd       	rcall	.-1518   	; 0x314 <reg_servo_angle>
	reg_servo_angle(16, 203);
     902:	6b ec       	ldi	r22, 0xCB	; 203
     904:	70 e0       	ldi	r23, 0x00	; 0
     906:	80 e1       	ldi	r24, 0x10	; 16
     908:	90 e0       	ldi	r25, 0x00	; 0
     90a:	04 dd       	rcall	.-1528   	; 0x314 <reg_servo_angle>
	reg_servo_angle(17, 83);
     90c:	63 e5       	ldi	r22, 0x53	; 83
     90e:	70 e0       	ldi	r23, 0x00	; 0
     910:	81 e1       	ldi	r24, 0x11	; 17
     912:	90 e0       	ldi	r25, 0x00	; 0
     914:	ff dc       	rcall	.-1538   	; 0x314 <reg_servo_angle>
     916:	8b e7       	ldi	r24, 0x7B	; 123
     918:	92 e9       	ldi	r25, 0x92	; 146
     91a:	01 97       	sbiw	r24, 0x01	; 1
     91c:	f1 f7       	brne	.-4      	; 0x91a <six+0xb8>
     91e:	00 c0       	rjmp	.+0      	; 0x920 <six+0xbe>
     920:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     922:	1a cd       	rjmp	.-1484   	; 0x358 <action>
     924:	08 95       	ret

00000926 <seven>:

void seven(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 157);
     926:	6d e9       	ldi	r22, 0x9D	; 157
     928:	70 e0       	ldi	r23, 0x00	; 0
     92a:	86 e0       	ldi	r24, 0x06	; 6
     92c:	90 e0       	ldi	r25, 0x00	; 0
     92e:	f2 dc       	rcall	.-1564   	; 0x314 <reg_servo_angle>
	reg_servo_angle(7, 97);
     930:	61 e6       	ldi	r22, 0x61	; 97
     932:	70 e0       	ldi	r23, 0x00	; 0
     934:	87 e0       	ldi	r24, 0x07	; 7
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	ed dc       	rcall	.-1574   	; 0x314 <reg_servo_angle>
	reg_servo_angle(8, 217);
     93a:	69 ed       	ldi	r22, 0xD9	; 217
     93c:	70 e0       	ldi	r23, 0x00	; 0
     93e:	88 e0       	ldi	r24, 0x08	; 8
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	e8 dc       	rcall	.-1584   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(9, 153);
     944:	69 e9       	ldi	r22, 0x99	; 153
     946:	70 e0       	ldi	r23, 0x00	; 0
     948:	89 e0       	ldi	r24, 0x09	; 9
     94a:	90 e0       	ldi	r25, 0x00	; 0
     94c:	e3 dc       	rcall	.-1594   	; 0x314 <reg_servo_angle>
	reg_servo_angle(10, 213);
     94e:	65 ed       	ldi	r22, 0xD5	; 213
     950:	70 e0       	ldi	r23, 0x00	; 0
     952:	8a e0       	ldi	r24, 0x0A	; 10
     954:	90 e0       	ldi	r25, 0x00	; 0
     956:	de dc       	rcall	.-1604   	; 0x314 <reg_servo_angle>
	reg_servo_angle(11, 63);
     958:	6f e3       	ldi	r22, 0x3F	; 63
     95a:	70 e0       	ldi	r23, 0x00	; 0
     95c:	8b e0       	ldi	r24, 0x0B	; 11
     95e:	90 e0       	ldi	r25, 0x00	; 0
     960:	d9 dc       	rcall	.-1614   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(3, 142);
     962:	6e e8       	ldi	r22, 0x8E	; 142
     964:	70 e0       	ldi	r23, 0x00	; 0
     966:	83 e0       	ldi	r24, 0x03	; 3
     968:	90 e0       	ldi	r25, 0x00	; 0
     96a:	d4 dc       	rcall	.-1624   	; 0x314 <reg_servo_angle>
	reg_servo_angle(4, 93);
     96c:	6d e5       	ldi	r22, 0x5D	; 93
     96e:	70 e0       	ldi	r23, 0x00	; 0
     970:	84 e0       	ldi	r24, 0x04	; 4
     972:	90 e0       	ldi	r25, 0x00	; 0
     974:	cf dc       	rcall	.-1634   	; 0x314 <reg_servo_angle>
	reg_servo_angle(5, 226);
     976:	62 ee       	ldi	r22, 0xE2	; 226
     978:	70 e0       	ldi	r23, 0x00	; 0
     97a:	85 e0       	ldi	r24, 0x05	; 5
     97c:	90 e0       	ldi	r25, 0x00	; 0
     97e:	ca dc       	rcall	.-1644   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(12, 142);
     980:	6e e8       	ldi	r22, 0x8E	; 142
     982:	70 e0       	ldi	r23, 0x00	; 0
     984:	8c e0       	ldi	r24, 0x0C	; 12
     986:	90 e0       	ldi	r25, 0x00	; 0
     988:	c5 dc       	rcall	.-1654   	; 0x314 <reg_servo_angle>
	reg_servo_angle(13, 207);
     98a:	6f ec       	ldi	r22, 0xCF	; 207
     98c:	70 e0       	ldi	r23, 0x00	; 0
     98e:	8d e0       	ldi	r24, 0x0D	; 13
     990:	90 e0       	ldi	r25, 0x00	; 0
     992:	c0 dc       	rcall	.-1664   	; 0x314 <reg_servo_angle>
	reg_servo_angle(14, 74);
     994:	6a e4       	ldi	r22, 0x4A	; 74
     996:	70 e0       	ldi	r23, 0x00	; 0
     998:	8e e0       	ldi	r24, 0x0E	; 14
     99a:	90 e0       	ldi	r25, 0x00	; 0
     99c:	bb dc       	rcall	.-1674   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(0, 153);
     99e:	69 e9       	ldi	r22, 0x99	; 153
     9a0:	70 e0       	ldi	r23, 0x00	; 0
     9a2:	80 e0       	ldi	r24, 0x00	; 0
     9a4:	90 e0       	ldi	r25, 0x00	; 0
     9a6:	b6 dc       	rcall	.-1684   	; 0x314 <reg_servo_angle>
	reg_servo_angle(1, 87);
     9a8:	67 e5       	ldi	r22, 0x57	; 87
     9aa:	70 e0       	ldi	r23, 0x00	; 0
     9ac:	81 e0       	ldi	r24, 0x01	; 1
     9ae:	90 e0       	ldi	r25, 0x00	; 0
     9b0:	b1 dc       	rcall	.-1694   	; 0x314 <reg_servo_angle>
	reg_servo_angle(2, 237);
     9b2:	6d ee       	ldi	r22, 0xED	; 237
     9b4:	70 e0       	ldi	r23, 0x00	; 0
     9b6:	82 e0       	ldi	r24, 0x02	; 2
     9b8:	90 e0       	ldi	r25, 0x00	; 0
     9ba:	ac dc       	rcall	.-1704   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(15, 157);
     9bc:	6d e9       	ldi	r22, 0x9D	; 157
     9be:	70 e0       	ldi	r23, 0x00	; 0
     9c0:	8f e0       	ldi	r24, 0x0F	; 15
     9c2:	90 e0       	ldi	r25, 0x00	; 0
     9c4:	a7 dc       	rcall	.-1714   	; 0x314 <reg_servo_angle>
	reg_servo_angle(16, 203);
     9c6:	6b ec       	ldi	r22, 0xCB	; 203
     9c8:	70 e0       	ldi	r23, 0x00	; 0
     9ca:	80 e1       	ldi	r24, 0x10	; 16
     9cc:	90 e0       	ldi	r25, 0x00	; 0
     9ce:	a2 dc       	rcall	.-1724   	; 0x314 <reg_servo_angle>
	reg_servo_angle(17, 83);
     9d0:	63 e5       	ldi	r22, 0x53	; 83
     9d2:	70 e0       	ldi	r23, 0x00	; 0
     9d4:	81 e1       	ldi	r24, 0x11	; 17
     9d6:	90 e0       	ldi	r25, 0x00	; 0
     9d8:	9d dc       	rcall	.-1734   	; 0x314 <reg_servo_angle>
     9da:	8b e7       	ldi	r24, 0x7B	; 123
     9dc:	92 e9       	ldi	r25, 0x92	; 146
     9de:	01 97       	sbiw	r24, 0x01	; 1
     9e0:	f1 f7       	brne	.-4      	; 0x9de <seven+0xb8>
     9e2:	00 c0       	rjmp	.+0      	; 0x9e4 <seven+0xbe>
     9e4:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     9e6:	b8 cc       	rjmp	.-1680   	; 0x358 <action>
     9e8:	08 95       	ret

000009ea <eight>:

void eight(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 157);
     9ea:	6d e9       	ldi	r22, 0x9D	; 157
     9ec:	70 e0       	ldi	r23, 0x00	; 0
     9ee:	86 e0       	ldi	r24, 0x06	; 6
     9f0:	90 e0       	ldi	r25, 0x00	; 0
     9f2:	90 dc       	rcall	.-1760   	; 0x314 <reg_servo_angle>
	reg_servo_angle(7, 97);
     9f4:	61 e6       	ldi	r22, 0x61	; 97
     9f6:	70 e0       	ldi	r23, 0x00	; 0
     9f8:	87 e0       	ldi	r24, 0x07	; 7
     9fa:	90 e0       	ldi	r25, 0x00	; 0
     9fc:	8b dc       	rcall	.-1770   	; 0x314 <reg_servo_angle>
	reg_servo_angle(8, 217);
     9fe:	69 ed       	ldi	r22, 0xD9	; 217
     a00:	70 e0       	ldi	r23, 0x00	; 0
     a02:	88 e0       	ldi	r24, 0x08	; 8
     a04:	90 e0       	ldi	r25, 0x00	; 0
     a06:	86 dc       	rcall	.-1780   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(9, 153);
     a08:	69 e9       	ldi	r22, 0x99	; 153
     a0a:	70 e0       	ldi	r23, 0x00	; 0
     a0c:	89 e0       	ldi	r24, 0x09	; 9
     a0e:	90 e0       	ldi	r25, 0x00	; 0
     a10:	81 dc       	rcall	.-1790   	; 0x314 <reg_servo_angle>
	reg_servo_angle(10, 240);
     a12:	60 ef       	ldi	r22, 0xF0	; 240
     a14:	70 e0       	ldi	r23, 0x00	; 0
     a16:	8a e0       	ldi	r24, 0x0A	; 10
     a18:	90 e0       	ldi	r25, 0x00	; 0
     a1a:	7c dc       	rcall	.-1800   	; 0x314 <reg_servo_angle>
	reg_servo_angle(11, 60);
     a1c:	6c e3       	ldi	r22, 0x3C	; 60
     a1e:	70 e0       	ldi	r23, 0x00	; 0
     a20:	8b e0       	ldi	r24, 0x0B	; 11
     a22:	90 e0       	ldi	r25, 0x00	; 0
     a24:	77 dc       	rcall	.-1810   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(3, 142);
     a26:	6e e8       	ldi	r22, 0x8E	; 142
     a28:	70 e0       	ldi	r23, 0x00	; 0
     a2a:	83 e0       	ldi	r24, 0x03	; 3
     a2c:	90 e0       	ldi	r25, 0x00	; 0
     a2e:	72 dc       	rcall	.-1820   	; 0x314 <reg_servo_angle>
	reg_servo_angle(4, 65);
     a30:	61 e4       	ldi	r22, 0x41	; 65
     a32:	70 e0       	ldi	r23, 0x00	; 0
     a34:	84 e0       	ldi	r24, 0x04	; 4
     a36:	90 e0       	ldi	r25, 0x00	; 0
     a38:	6d dc       	rcall	.-1830   	; 0x314 <reg_servo_angle>
	reg_servo_angle(5, 236);
     a3a:	6c ee       	ldi	r22, 0xEC	; 236
     a3c:	70 e0       	ldi	r23, 0x00	; 0
     a3e:	85 e0       	ldi	r24, 0x05	; 5
     a40:	90 e0       	ldi	r25, 0x00	; 0
     a42:	68 dc       	rcall	.-1840   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(12, 142);
     a44:	6e e8       	ldi	r22, 0x8E	; 142
     a46:	70 e0       	ldi	r23, 0x00	; 0
     a48:	8c e0       	ldi	r24, 0x0C	; 12
     a4a:	90 e0       	ldi	r25, 0x00	; 0
     a4c:	63 dc       	rcall	.-1850   	; 0x314 <reg_servo_angle>
	reg_servo_angle(13, 207);
     a4e:	6f ec       	ldi	r22, 0xCF	; 207
     a50:	70 e0       	ldi	r23, 0x00	; 0
     a52:	8d e0       	ldi	r24, 0x0D	; 13
     a54:	90 e0       	ldi	r25, 0x00	; 0
     a56:	5e dc       	rcall	.-1860   	; 0x314 <reg_servo_angle>
	reg_servo_angle(14, 74);
     a58:	6a e4       	ldi	r22, 0x4A	; 74
     a5a:	70 e0       	ldi	r23, 0x00	; 0
     a5c:	8e e0       	ldi	r24, 0x0E	; 14
     a5e:	90 e0       	ldi	r25, 0x00	; 0
     a60:	59 dc       	rcall	.-1870   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(0, 153);
     a62:	69 e9       	ldi	r22, 0x99	; 153
     a64:	70 e0       	ldi	r23, 0x00	; 0
     a66:	80 e0       	ldi	r24, 0x00	; 0
     a68:	90 e0       	ldi	r25, 0x00	; 0
     a6a:	54 dc       	rcall	.-1880   	; 0x314 <reg_servo_angle>
	reg_servo_angle(1, 87);
     a6c:	67 e5       	ldi	r22, 0x57	; 87
     a6e:	70 e0       	ldi	r23, 0x00	; 0
     a70:	81 e0       	ldi	r24, 0x01	; 1
     a72:	90 e0       	ldi	r25, 0x00	; 0
     a74:	4f dc       	rcall	.-1890   	; 0x314 <reg_servo_angle>
	reg_servo_angle(2, 237);
     a76:	6d ee       	ldi	r22, 0xED	; 237
     a78:	70 e0       	ldi	r23, 0x00	; 0
     a7a:	82 e0       	ldi	r24, 0x02	; 2
     a7c:	90 e0       	ldi	r25, 0x00	; 0
     a7e:	4a dc       	rcall	.-1900   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(15, 157);
     a80:	6d e9       	ldi	r22, 0x9D	; 157
     a82:	70 e0       	ldi	r23, 0x00	; 0
     a84:	8f e0       	ldi	r24, 0x0F	; 15
     a86:	90 e0       	ldi	r25, 0x00	; 0
     a88:	45 dc       	rcall	.-1910   	; 0x314 <reg_servo_angle>
	reg_servo_angle(16, 240);
     a8a:	60 ef       	ldi	r22, 0xF0	; 240
     a8c:	70 e0       	ldi	r23, 0x00	; 0
     a8e:	80 e1       	ldi	r24, 0x10	; 16
     a90:	90 e0       	ldi	r25, 0x00	; 0
     a92:	40 dc       	rcall	.-1920   	; 0x314 <reg_servo_angle>
	reg_servo_angle(17, 74);
     a94:	6a e4       	ldi	r22, 0x4A	; 74
     a96:	70 e0       	ldi	r23, 0x00	; 0
     a98:	81 e1       	ldi	r24, 0x11	; 17
     a9a:	90 e0       	ldi	r25, 0x00	; 0
     a9c:	3b dc       	rcall	.-1930   	; 0x314 <reg_servo_angle>
     a9e:	8b e7       	ldi	r24, 0x7B	; 123
     aa0:	92 e9       	ldi	r25, 0x92	; 146
     aa2:	01 97       	sbiw	r24, 0x01	; 1
     aa4:	f1 f7       	brne	.-4      	; 0xaa2 <eight+0xb8>
     aa6:	00 c0       	rjmp	.+0      	; 0xaa8 <eight+0xbe>
     aa8:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     aaa:	56 cc       	rjmp	.-1876   	; 0x358 <action>
     aac:	08 95       	ret

00000aae <forward>:
}

//Funktion för gång framåt
void forward(void)
{
	eight();
     aae:	9d df       	rcall	.-198    	; 0x9ea <eight>
	one();
     ab0:	ee dc       	rcall	.-1572   	; 0x48e <one>
	two();
     ab2:	4f dd       	rcall	.-1378   	; 0x552 <two>
	three();
     ab4:	b0 dd       	rcall	.-1184   	; 0x616 <three>
	four();
     ab6:	11 de       	rcall	.-990    	; 0x6da <four>
	five();
     ab8:	72 de       	rcall	.-796    	; 0x79e <five>
	six();
     aba:	d3 de       	rcall	.-602    	; 0x862 <six>
	seven();
     abc:	34 cf       	rjmp	.-408    	; 0x926 <seven>
     abe:	08 95       	ret

00000ac0 <backward>:
}

//Funktion för gång bakåt
void backward(void)
{
	seven();
     ac0:	32 df       	rcall	.-412    	; 0x926 <seven>
	six();
     ac2:	cf de       	rcall	.-610    	; 0x862 <six>
	five();
     ac4:	6c de       	rcall	.-808    	; 0x79e <five>
	four();
     ac6:	09 de       	rcall	.-1006   	; 0x6da <four>
	three();
     ac8:	a6 dd       	rcall	.-1204   	; 0x616 <three>
	two();
     aca:	43 dd       	rcall	.-1402   	; 0x552 <two>
	one();
     acc:	e0 dc       	rcall	.-1600   	; 0x48e <one>
	eight();
     ace:	8d cf       	rjmp	.-230    	; 0x9ea <eight>
     ad0:	08 95       	ret

00000ad2 <one_rot>:
//Funktionerna som utgör gångstilarna rotera höger och rotera vänster
void one_rot(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 150);
     ad2:	66 e9       	ldi	r22, 0x96	; 150
     ad4:	70 e0       	ldi	r23, 0x00	; 0
     ad6:	86 e0       	ldi	r24, 0x06	; 6
     ad8:	90 e0       	ldi	r25, 0x00	; 0
     ada:	1c dc       	rcall	.-1992   	; 0x314 <reg_servo_angle>
	reg_servo_angle(7, 90);
     adc:	6a e5       	ldi	r22, 0x5A	; 90
     ade:	70 e0       	ldi	r23, 0x00	; 0
     ae0:	87 e0       	ldi	r24, 0x07	; 7
     ae2:	90 e0       	ldi	r25, 0x00	; 0
     ae4:	17 dc       	rcall	.-2002   	; 0x314 <reg_servo_angle>
	reg_servo_angle(8, 220);
     ae6:	6c ed       	ldi	r22, 0xDC	; 220
     ae8:	70 e0       	ldi	r23, 0x00	; 0
     aea:	88 e0       	ldi	r24, 0x08	; 8
     aec:	90 e0       	ldi	r25, 0x00	; 0
     aee:	12 dc       	rcall	.-2012   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(9, 165);
     af0:	65 ea       	ldi	r22, 0xA5	; 165
     af2:	70 e0       	ldi	r23, 0x00	; 0
     af4:	89 e0       	ldi	r24, 0x09	; 9
     af6:	90 e0       	ldi	r25, 0x00	; 0
     af8:	0d dc       	rcall	.-2022   	; 0x314 <reg_servo_angle>
	reg_servo_angle(10, 221);
     afa:	6d ed       	ldi	r22, 0xDD	; 221
     afc:	70 e0       	ldi	r23, 0x00	; 0
     afe:	8a e0       	ldi	r24, 0x0A	; 10
     b00:	90 e0       	ldi	r25, 0x00	; 0
     b02:	08 dc       	rcall	.-2032   	; 0x314 <reg_servo_angle>
	reg_servo_angle(11, 82);
     b04:	62 e5       	ldi	r22, 0x52	; 82
     b06:	70 e0       	ldi	r23, 0x00	; 0
     b08:	8b e0       	ldi	r24, 0x0B	; 11
     b0a:	90 e0       	ldi	r25, 0x00	; 0
     b0c:	03 dc       	rcall	.-2042   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(3, 164);
     b0e:	64 ea       	ldi	r22, 0xA4	; 164
     b10:	70 e0       	ldi	r23, 0x00	; 0
     b12:	83 e0       	ldi	r24, 0x03	; 3
     b14:	90 e0       	ldi	r25, 0x00	; 0
     b16:	fe db       	rcall	.-2052   	; 0x314 <reg_servo_angle>
	reg_servo_angle(4, 73);
     b18:	69 e4       	ldi	r22, 0x49	; 73
     b1a:	70 e0       	ldi	r23, 0x00	; 0
     b1c:	84 e0       	ldi	r24, 0x04	; 4
     b1e:	90 e0       	ldi	r25, 0x00	; 0
     b20:	f9 db       	rcall	.-2062   	; 0x314 <reg_servo_angle>
	reg_servo_angle(5, 227);
     b22:	63 ee       	ldi	r22, 0xE3	; 227
     b24:	70 e0       	ldi	r23, 0x00	; 0
     b26:	85 e0       	ldi	r24, 0x05	; 5
     b28:	90 e0       	ldi	r25, 0x00	; 0
     b2a:	f4 db       	rcall	.-2072   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(12, 150);
     b2c:	66 e9       	ldi	r22, 0x96	; 150
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	8c e0       	ldi	r24, 0x0C	; 12
     b32:	90 e0       	ldi	r25, 0x00	; 0
     b34:	ef db       	rcall	.-2082   	; 0x314 <reg_servo_angle>
	reg_servo_angle(13, 210);
     b36:	62 ed       	ldi	r22, 0xD2	; 210
     b38:	70 e0       	ldi	r23, 0x00	; 0
     b3a:	8d e0       	ldi	r24, 0x0D	; 13
     b3c:	90 e0       	ldi	r25, 0x00	; 0
     b3e:	ea db       	rcall	.-2092   	; 0x314 <reg_servo_angle>
	reg_servo_angle(14, 80);
     b40:	60 e5       	ldi	r22, 0x50	; 80
     b42:	70 e0       	ldi	r23, 0x00	; 0
     b44:	8e e0       	ldi	r24, 0x0E	; 14
     b46:	90 e0       	ldi	r25, 0x00	; 0
     b48:	e5 db       	rcall	.-2102   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(0, 150);
     b4a:	66 e9       	ldi	r22, 0x96	; 150
     b4c:	70 e0       	ldi	r23, 0x00	; 0
     b4e:	80 e0       	ldi	r24, 0x00	; 0
     b50:	90 e0       	ldi	r25, 0x00	; 0
     b52:	e0 db       	rcall	.-2112   	; 0x314 <reg_servo_angle>
	reg_servo_angle(1, 90);
     b54:	6a e5       	ldi	r22, 0x5A	; 90
     b56:	70 e0       	ldi	r23, 0x00	; 0
     b58:	81 e0       	ldi	r24, 0x01	; 1
     b5a:	90 e0       	ldi	r25, 0x00	; 0
     b5c:	db db       	rcall	.-2122   	; 0x314 <reg_servo_angle>
	reg_servo_angle(2, 220);
     b5e:	6c ed       	ldi	r22, 0xDC	; 220
     b60:	70 e0       	ldi	r23, 0x00	; 0
     b62:	82 e0       	ldi	r24, 0x02	; 2
     b64:	90 e0       	ldi	r25, 0x00	; 0
     b66:	d6 db       	rcall	.-2132   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(15, 165);
     b68:	65 ea       	ldi	r22, 0xA5	; 165
     b6a:	70 e0       	ldi	r23, 0x00	; 0
     b6c:	8f e0       	ldi	r24, 0x0F	; 15
     b6e:	90 e0       	ldi	r25, 0x00	; 0
     b70:	d1 db       	rcall	.-2142   	; 0x314 <reg_servo_angle>
	reg_servo_angle(16, 221);
     b72:	6d ed       	ldi	r22, 0xDD	; 221
     b74:	70 e0       	ldi	r23, 0x00	; 0
     b76:	80 e1       	ldi	r24, 0x10	; 16
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	cc db       	rcall	.-2152   	; 0x314 <reg_servo_angle>
	reg_servo_angle(17, 82);
     b7c:	62 e5       	ldi	r22, 0x52	; 82
     b7e:	70 e0       	ldi	r23, 0x00	; 0
     b80:	81 e1       	ldi	r24, 0x11	; 17
     b82:	90 e0       	ldi	r25, 0x00	; 0
     b84:	c7 db       	rcall	.-2162   	; 0x314 <reg_servo_angle>
     b86:	8b e7       	ldi	r24, 0x7B	; 123
     b88:	92 e9       	ldi	r25, 0x92	; 146
     b8a:	01 97       	sbiw	r24, 0x01	; 1
     b8c:	f1 f7       	brne	.-4      	; 0xb8a <one_rot+0xb8>
     b8e:	00 c0       	rjmp	.+0      	; 0xb90 <one_rot+0xbe>
     b90:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     b92:	e2 cb       	rjmp	.-2108   	; 0x358 <action>
     b94:	08 95       	ret

00000b96 <two_rot>:

void two_rot(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 150);
     b96:	66 e9       	ldi	r22, 0x96	; 150
     b98:	70 e0       	ldi	r23, 0x00	; 0
     b9a:	86 e0       	ldi	r24, 0x06	; 6
     b9c:	90 e0       	ldi	r25, 0x00	; 0
     b9e:	ba db       	rcall	.-2188   	; 0x314 <reg_servo_angle>
	reg_servo_angle(7, 90);
     ba0:	6a e5       	ldi	r22, 0x5A	; 90
     ba2:	70 e0       	ldi	r23, 0x00	; 0
     ba4:	87 e0       	ldi	r24, 0x07	; 7
     ba6:	90 e0       	ldi	r25, 0x00	; 0
     ba8:	b5 db       	rcall	.-2198   	; 0x314 <reg_servo_angle>
	reg_servo_angle(8, 220);
     baa:	6c ed       	ldi	r22, 0xDC	; 220
     bac:	70 e0       	ldi	r23, 0x00	; 0
     bae:	88 e0       	ldi	r24, 0x08	; 8
     bb0:	90 e0       	ldi	r25, 0x00	; 0
     bb2:	b0 db       	rcall	.-2208   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(9, 178);
     bb4:	62 eb       	ldi	r22, 0xB2	; 178
     bb6:	70 e0       	ldi	r23, 0x00	; 0
     bb8:	89 e0       	ldi	r24, 0x09	; 9
     bba:	90 e0       	ldi	r25, 0x00	; 0
     bbc:	ab db       	rcall	.-2218   	; 0x314 <reg_servo_angle>
	reg_servo_angle(10, 211);
     bbe:	63 ed       	ldi	r22, 0xD3	; 211
     bc0:	70 e0       	ldi	r23, 0x00	; 0
     bc2:	8a e0       	ldi	r24, 0x0A	; 10
     bc4:	90 e0       	ldi	r25, 0x00	; 0
     bc6:	a6 db       	rcall	.-2228   	; 0x314 <reg_servo_angle>
	reg_servo_angle(11, 95);
     bc8:	6f e5       	ldi	r22, 0x5F	; 95
     bca:	70 e0       	ldi	r23, 0x00	; 0
     bcc:	8b e0       	ldi	r24, 0x0B	; 11
     bce:	90 e0       	ldi	r25, 0x00	; 0
     bd0:	a1 db       	rcall	.-2238   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(3, 176);
     bd2:	60 eb       	ldi	r22, 0xB0	; 176
     bd4:	70 e0       	ldi	r23, 0x00	; 0
     bd6:	83 e0       	ldi	r24, 0x03	; 3
     bd8:	90 e0       	ldi	r25, 0x00	; 0
     bda:	9c db       	rcall	.-2248   	; 0x314 <reg_servo_angle>
	reg_servo_angle(4, 75);
     bdc:	6b e4       	ldi	r22, 0x4B	; 75
     bde:	70 e0       	ldi	r23, 0x00	; 0
     be0:	84 e0       	ldi	r24, 0x04	; 4
     be2:	90 e0       	ldi	r25, 0x00	; 0
     be4:	97 db       	rcall	.-2258   	; 0x314 <reg_servo_angle>
	reg_servo_angle(5, 224);
     be6:	60 ee       	ldi	r22, 0xE0	; 224
     be8:	70 e0       	ldi	r23, 0x00	; 0
     bea:	85 e0       	ldi	r24, 0x05	; 5
     bec:	90 e0       	ldi	r25, 0x00	; 0
     bee:	92 db       	rcall	.-2268   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(12, 150);
     bf0:	66 e9       	ldi	r22, 0x96	; 150
     bf2:	70 e0       	ldi	r23, 0x00	; 0
     bf4:	8c e0       	ldi	r24, 0x0C	; 12
     bf6:	90 e0       	ldi	r25, 0x00	; 0
     bf8:	8d db       	rcall	.-2278   	; 0x314 <reg_servo_angle>
	reg_servo_angle(13, 210);
     bfa:	62 ed       	ldi	r22, 0xD2	; 210
     bfc:	70 e0       	ldi	r23, 0x00	; 0
     bfe:	8d e0       	ldi	r24, 0x0D	; 13
     c00:	90 e0       	ldi	r25, 0x00	; 0
     c02:	88 db       	rcall	.-2288   	; 0x314 <reg_servo_angle>
	reg_servo_angle(14, 80);
     c04:	60 e5       	ldi	r22, 0x50	; 80
     c06:	70 e0       	ldi	r23, 0x00	; 0
     c08:	8e e0       	ldi	r24, 0x0E	; 14
     c0a:	90 e0       	ldi	r25, 0x00	; 0
     c0c:	83 db       	rcall	.-2298   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(0, 150);
     c0e:	66 e9       	ldi	r22, 0x96	; 150
     c10:	70 e0       	ldi	r23, 0x00	; 0
     c12:	80 e0       	ldi	r24, 0x00	; 0
     c14:	90 e0       	ldi	r25, 0x00	; 0
     c16:	7e db       	rcall	.-2308   	; 0x314 <reg_servo_angle>
	reg_servo_angle(1, 90);
     c18:	6a e5       	ldi	r22, 0x5A	; 90
     c1a:	70 e0       	ldi	r23, 0x00	; 0
     c1c:	81 e0       	ldi	r24, 0x01	; 1
     c1e:	90 e0       	ldi	r25, 0x00	; 0
     c20:	79 db       	rcall	.-2318   	; 0x314 <reg_servo_angle>
	reg_servo_angle(2, 220);
     c22:	6c ed       	ldi	r22, 0xDC	; 220
     c24:	70 e0       	ldi	r23, 0x00	; 0
     c26:	82 e0       	ldi	r24, 0x02	; 2
     c28:	90 e0       	ldi	r25, 0x00	; 0
     c2a:	74 db       	rcall	.-2328   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(15, 178);
     c2c:	62 eb       	ldi	r22, 0xB2	; 178
     c2e:	70 e0       	ldi	r23, 0x00	; 0
     c30:	8f e0       	ldi	r24, 0x0F	; 15
     c32:	90 e0       	ldi	r25, 0x00	; 0
     c34:	6f db       	rcall	.-2338   	; 0x314 <reg_servo_angle>
	reg_servo_angle(16, 211);
     c36:	63 ed       	ldi	r22, 0xD3	; 211
     c38:	70 e0       	ldi	r23, 0x00	; 0
     c3a:	80 e1       	ldi	r24, 0x10	; 16
     c3c:	90 e0       	ldi	r25, 0x00	; 0
     c3e:	6a db       	rcall	.-2348   	; 0x314 <reg_servo_angle>
	reg_servo_angle(17, 95);
     c40:	6f e5       	ldi	r22, 0x5F	; 95
     c42:	70 e0       	ldi	r23, 0x00	; 0
     c44:	81 e1       	ldi	r24, 0x11	; 17
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	65 db       	rcall	.-2358   	; 0x314 <reg_servo_angle>
     c4a:	8b e7       	ldi	r24, 0x7B	; 123
     c4c:	92 e9       	ldi	r25, 0x92	; 146
     c4e:	01 97       	sbiw	r24, 0x01	; 1
     c50:	f1 f7       	brne	.-4      	; 0xc4e <two_rot+0xb8>
     c52:	00 c0       	rjmp	.+0      	; 0xc54 <two_rot+0xbe>
     c54:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     c56:	80 cb       	rjmp	.-2304   	; 0x358 <action>
     c58:	08 95       	ret

00000c5a <three_rot>:

void three_rot(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 150);
     c5a:	66 e9       	ldi	r22, 0x96	; 150
     c5c:	70 e0       	ldi	r23, 0x00	; 0
     c5e:	86 e0       	ldi	r24, 0x06	; 6
     c60:	90 e0       	ldi	r25, 0x00	; 0
     c62:	58 db       	rcall	.-2384   	; 0x314 <reg_servo_angle>
	reg_servo_angle(7, 90);
     c64:	6a e5       	ldi	r22, 0x5A	; 90
     c66:	70 e0       	ldi	r23, 0x00	; 0
     c68:	87 e0       	ldi	r24, 0x07	; 7
     c6a:	90 e0       	ldi	r25, 0x00	; 0
     c6c:	53 db       	rcall	.-2394   	; 0x314 <reg_servo_angle>
	reg_servo_angle(8, 220);
     c6e:	6c ed       	ldi	r22, 0xDC	; 220
     c70:	70 e0       	ldi	r23, 0x00	; 0
     c72:	88 e0       	ldi	r24, 0x08	; 8
     c74:	90 e0       	ldi	r25, 0x00	; 0
     c76:	4e db       	rcall	.-2404   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(9, 178);
     c78:	62 eb       	ldi	r22, 0xB2	; 178
     c7a:	70 e0       	ldi	r23, 0x00	; 0
     c7c:	89 e0       	ldi	r24, 0x09	; 9
     c7e:	90 e0       	ldi	r25, 0x00	; 0
     c80:	49 db       	rcall	.-2414   	; 0x314 <reg_servo_angle>
	reg_servo_angle(10, 199);
     c82:	67 ec       	ldi	r22, 0xC7	; 199
     c84:	70 e0       	ldi	r23, 0x00	; 0
     c86:	8a e0       	ldi	r24, 0x0A	; 10
     c88:	90 e0       	ldi	r25, 0x00	; 0
     c8a:	44 db       	rcall	.-2424   	; 0x314 <reg_servo_angle>
	reg_servo_angle(11, 102);
     c8c:	66 e6       	ldi	r22, 0x66	; 102
     c8e:	70 e0       	ldi	r23, 0x00	; 0
     c90:	8b e0       	ldi	r24, 0x0B	; 11
     c92:	90 e0       	ldi	r25, 0x00	; 0
     c94:	3f db       	rcall	.-2434   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(3, 176);
     c96:	60 eb       	ldi	r22, 0xB0	; 176
     c98:	70 e0       	ldi	r23, 0x00	; 0
     c9a:	83 e0       	ldi	r24, 0x03	; 3
     c9c:	90 e0       	ldi	r25, 0x00	; 0
     c9e:	3a db       	rcall	.-2444   	; 0x314 <reg_servo_angle>
	reg_servo_angle(4, 89);
     ca0:	69 e5       	ldi	r22, 0x59	; 89
     ca2:	70 e0       	ldi	r23, 0x00	; 0
     ca4:	84 e0       	ldi	r24, 0x04	; 4
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	35 db       	rcall	.-2454   	; 0x314 <reg_servo_angle>
	reg_servo_angle(5, 217);
     caa:	69 ed       	ldi	r22, 0xD9	; 217
     cac:	70 e0       	ldi	r23, 0x00	; 0
     cae:	85 e0       	ldi	r24, 0x05	; 5
     cb0:	90 e0       	ldi	r25, 0x00	; 0
     cb2:	30 db       	rcall	.-2464   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(12, 150);
     cb4:	66 e9       	ldi	r22, 0x96	; 150
     cb6:	70 e0       	ldi	r23, 0x00	; 0
     cb8:	8c e0       	ldi	r24, 0x0C	; 12
     cba:	90 e0       	ldi	r25, 0x00	; 0
     cbc:	2b db       	rcall	.-2474   	; 0x314 <reg_servo_angle>
	reg_servo_angle(13, 210);
     cbe:	62 ed       	ldi	r22, 0xD2	; 210
     cc0:	70 e0       	ldi	r23, 0x00	; 0
     cc2:	8d e0       	ldi	r24, 0x0D	; 13
     cc4:	90 e0       	ldi	r25, 0x00	; 0
     cc6:	26 db       	rcall	.-2484   	; 0x314 <reg_servo_angle>
	reg_servo_angle(14, 80);
     cc8:	60 e5       	ldi	r22, 0x50	; 80
     cca:	70 e0       	ldi	r23, 0x00	; 0
     ccc:	8e e0       	ldi	r24, 0x0E	; 14
     cce:	90 e0       	ldi	r25, 0x00	; 0
     cd0:	21 db       	rcall	.-2494   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(0, 150);
     cd2:	66 e9       	ldi	r22, 0x96	; 150
     cd4:	70 e0       	ldi	r23, 0x00	; 0
     cd6:	80 e0       	ldi	r24, 0x00	; 0
     cd8:	90 e0       	ldi	r25, 0x00	; 0
     cda:	1c db       	rcall	.-2504   	; 0x314 <reg_servo_angle>
	reg_servo_angle(1, 90);
     cdc:	6a e5       	ldi	r22, 0x5A	; 90
     cde:	70 e0       	ldi	r23, 0x00	; 0
     ce0:	81 e0       	ldi	r24, 0x01	; 1
     ce2:	90 e0       	ldi	r25, 0x00	; 0
     ce4:	17 db       	rcall	.-2514   	; 0x314 <reg_servo_angle>
	reg_servo_angle(2, 220);
     ce6:	6c ed       	ldi	r22, 0xDC	; 220
     ce8:	70 e0       	ldi	r23, 0x00	; 0
     cea:	82 e0       	ldi	r24, 0x02	; 2
     cec:	90 e0       	ldi	r25, 0x00	; 0
     cee:	12 db       	rcall	.-2524   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(15, 178);
     cf0:	62 eb       	ldi	r22, 0xB2	; 178
     cf2:	70 e0       	ldi	r23, 0x00	; 0
     cf4:	8f e0       	ldi	r24, 0x0F	; 15
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	0d db       	rcall	.-2534   	; 0x314 <reg_servo_angle>
	reg_servo_angle(16, 199);
     cfa:	67 ec       	ldi	r22, 0xC7	; 199
     cfc:	70 e0       	ldi	r23, 0x00	; 0
     cfe:	80 e1       	ldi	r24, 0x10	; 16
     d00:	90 e0       	ldi	r25, 0x00	; 0
     d02:	08 db       	rcall	.-2544   	; 0x314 <reg_servo_angle>
	reg_servo_angle(17, 102);
     d04:	66 e6       	ldi	r22, 0x66	; 102
     d06:	70 e0       	ldi	r23, 0x00	; 0
     d08:	81 e1       	ldi	r24, 0x11	; 17
     d0a:	90 e0       	ldi	r25, 0x00	; 0
     d0c:	03 db       	rcall	.-2554   	; 0x314 <reg_servo_angle>
     d0e:	8b e7       	ldi	r24, 0x7B	; 123
     d10:	92 e9       	ldi	r25, 0x92	; 146
     d12:	01 97       	sbiw	r24, 0x01	; 1
     d14:	f1 f7       	brne	.-4      	; 0xd12 <three_rot+0xb8>
     d16:	00 c0       	rjmp	.+0      	; 0xd18 <three_rot+0xbe>
     d18:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     d1a:	1e cb       	rjmp	.-2500   	; 0x358 <action>
     d1c:	08 95       	ret

00000d1e <four_rot>:

void four_rot(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 150);
     d1e:	66 e9       	ldi	r22, 0x96	; 150
     d20:	70 e0       	ldi	r23, 0x00	; 0
     d22:	86 e0       	ldi	r24, 0x06	; 6
     d24:	90 e0       	ldi	r25, 0x00	; 0
     d26:	f6 da       	rcall	.-2580   	; 0x314 <reg_servo_angle>
	reg_servo_angle(7, 70);
     d28:	66 e4       	ldi	r22, 0x46	; 70
     d2a:	70 e0       	ldi	r23, 0x00	; 0
     d2c:	87 e0       	ldi	r24, 0x07	; 7
     d2e:	90 e0       	ldi	r25, 0x00	; 0
     d30:	f1 da       	rcall	.-2590   	; 0x314 <reg_servo_angle>
	reg_servo_angle(8, 220);
     d32:	6c ed       	ldi	r22, 0xDC	; 220
     d34:	70 e0       	ldi	r23, 0x00	; 0
     d36:	88 e0       	ldi	r24, 0x08	; 8
     d38:	90 e0       	ldi	r25, 0x00	; 0
     d3a:	ec da       	rcall	.-2600   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(9, 178);
     d3c:	62 eb       	ldi	r22, 0xB2	; 178
     d3e:	70 e0       	ldi	r23, 0x00	; 0
     d40:	89 e0       	ldi	r24, 0x09	; 9
     d42:	90 e0       	ldi	r25, 0x00	; 0
     d44:	e7 da       	rcall	.-2610   	; 0x314 <reg_servo_angle>
	reg_servo_angle(10, 199);
     d46:	67 ec       	ldi	r22, 0xC7	; 199
     d48:	70 e0       	ldi	r23, 0x00	; 0
     d4a:	8a e0       	ldi	r24, 0x0A	; 10
     d4c:	90 e0       	ldi	r25, 0x00	; 0
     d4e:	e2 da       	rcall	.-2620   	; 0x314 <reg_servo_angle>
	reg_servo_angle(11, 102);
     d50:	66 e6       	ldi	r22, 0x66	; 102
     d52:	70 e0       	ldi	r23, 0x00	; 0
     d54:	8b e0       	ldi	r24, 0x0B	; 11
     d56:	90 e0       	ldi	r25, 0x00	; 0
     d58:	dd da       	rcall	.-2630   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(3, 176);
     d5a:	60 eb       	ldi	r22, 0xB0	; 176
     d5c:	70 e0       	ldi	r23, 0x00	; 0
     d5e:	83 e0       	ldi	r24, 0x03	; 3
     d60:	90 e0       	ldi	r25, 0x00	; 0
     d62:	d8 da       	rcall	.-2640   	; 0x314 <reg_servo_angle>
	reg_servo_angle(4, 89);
     d64:	69 e5       	ldi	r22, 0x59	; 89
     d66:	70 e0       	ldi	r23, 0x00	; 0
     d68:	84 e0       	ldi	r24, 0x04	; 4
     d6a:	90 e0       	ldi	r25, 0x00	; 0
     d6c:	d3 da       	rcall	.-2650   	; 0x314 <reg_servo_angle>
	reg_servo_angle(5, 217);
     d6e:	69 ed       	ldi	r22, 0xD9	; 217
     d70:	70 e0       	ldi	r23, 0x00	; 0
     d72:	85 e0       	ldi	r24, 0x05	; 5
     d74:	90 e0       	ldi	r25, 0x00	; 0
     d76:	ce da       	rcall	.-2660   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(12, 150);
     d78:	66 e9       	ldi	r22, 0x96	; 150
     d7a:	70 e0       	ldi	r23, 0x00	; 0
     d7c:	8c e0       	ldi	r24, 0x0C	; 12
     d7e:	90 e0       	ldi	r25, 0x00	; 0
     d80:	c9 da       	rcall	.-2670   	; 0x314 <reg_servo_angle>
	reg_servo_angle(13, 230);
     d82:	66 ee       	ldi	r22, 0xE6	; 230
     d84:	70 e0       	ldi	r23, 0x00	; 0
     d86:	8d e0       	ldi	r24, 0x0D	; 13
     d88:	90 e0       	ldi	r25, 0x00	; 0
     d8a:	c4 da       	rcall	.-2680   	; 0x314 <reg_servo_angle>
	reg_servo_angle(14, 80);
     d8c:	60 e5       	ldi	r22, 0x50	; 80
     d8e:	70 e0       	ldi	r23, 0x00	; 0
     d90:	8e e0       	ldi	r24, 0x0E	; 14
     d92:	90 e0       	ldi	r25, 0x00	; 0
     d94:	bf da       	rcall	.-2690   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(0, 150);
     d96:	66 e9       	ldi	r22, 0x96	; 150
     d98:	70 e0       	ldi	r23, 0x00	; 0
     d9a:	80 e0       	ldi	r24, 0x00	; 0
     d9c:	90 e0       	ldi	r25, 0x00	; 0
     d9e:	ba da       	rcall	.-2700   	; 0x314 <reg_servo_angle>
	reg_servo_angle(1, 70);
     da0:	66 e4       	ldi	r22, 0x46	; 70
     da2:	70 e0       	ldi	r23, 0x00	; 0
     da4:	81 e0       	ldi	r24, 0x01	; 1
     da6:	90 e0       	ldi	r25, 0x00	; 0
     da8:	b5 da       	rcall	.-2710   	; 0x314 <reg_servo_angle>
	reg_servo_angle(2, 220);
     daa:	6c ed       	ldi	r22, 0xDC	; 220
     dac:	70 e0       	ldi	r23, 0x00	; 0
     dae:	82 e0       	ldi	r24, 0x02	; 2
     db0:	90 e0       	ldi	r25, 0x00	; 0
     db2:	b0 da       	rcall	.-2720   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(15, 178);
     db4:	62 eb       	ldi	r22, 0xB2	; 178
     db6:	70 e0       	ldi	r23, 0x00	; 0
     db8:	8f e0       	ldi	r24, 0x0F	; 15
     dba:	90 e0       	ldi	r25, 0x00	; 0
     dbc:	ab da       	rcall	.-2730   	; 0x314 <reg_servo_angle>
	reg_servo_angle(16, 199);
     dbe:	67 ec       	ldi	r22, 0xC7	; 199
     dc0:	70 e0       	ldi	r23, 0x00	; 0
     dc2:	80 e1       	ldi	r24, 0x10	; 16
     dc4:	90 e0       	ldi	r25, 0x00	; 0
     dc6:	a6 da       	rcall	.-2740   	; 0x314 <reg_servo_angle>
	reg_servo_angle(17, 102);
     dc8:	66 e6       	ldi	r22, 0x66	; 102
     dca:	70 e0       	ldi	r23, 0x00	; 0
     dcc:	81 e1       	ldi	r24, 0x11	; 17
     dce:	90 e0       	ldi	r25, 0x00	; 0
     dd0:	a1 da       	rcall	.-2750   	; 0x314 <reg_servo_angle>
     dd2:	8b e7       	ldi	r24, 0x7B	; 123
     dd4:	92 e9       	ldi	r25, 0x92	; 146
     dd6:	01 97       	sbiw	r24, 0x01	; 1
     dd8:	f1 f7       	brne	.-4      	; 0xdd6 <four_rot+0xb8>
     dda:	00 c0       	rjmp	.+0      	; 0xddc <four_rot+0xbe>
     ddc:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     dde:	bc ca       	rjmp	.-2696   	; 0x358 <action>
     de0:	08 95       	ret

00000de2 <five_rot>:

void five_rot(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 150);
     de2:	66 e9       	ldi	r22, 0x96	; 150
     de4:	70 e0       	ldi	r23, 0x00	; 0
     de6:	86 e0       	ldi	r24, 0x06	; 6
     de8:	90 e0       	ldi	r25, 0x00	; 0
     dea:	94 da       	rcall	.-2776   	; 0x314 <reg_servo_angle>
	reg_servo_angle(7, 70);
     dec:	66 e4       	ldi	r22, 0x46	; 70
     dee:	70 e0       	ldi	r23, 0x00	; 0
     df0:	87 e0       	ldi	r24, 0x07	; 7
     df2:	90 e0       	ldi	r25, 0x00	; 0
     df4:	8f da       	rcall	.-2786   	; 0x314 <reg_servo_angle>
	reg_servo_angle(8, 220);
     df6:	6c ed       	ldi	r22, 0xDC	; 220
     df8:	70 e0       	ldi	r23, 0x00	; 0
     dfa:	88 e0       	ldi	r24, 0x08	; 8
     dfc:	90 e0       	ldi	r25, 0x00	; 0
     dfe:	8a da       	rcall	.-2796   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(9, 165);
     e00:	65 ea       	ldi	r22, 0xA5	; 165
     e02:	70 e0       	ldi	r23, 0x00	; 0
     e04:	89 e0       	ldi	r24, 0x09	; 9
     e06:	90 e0       	ldi	r25, 0x00	; 0
     e08:	85 da       	rcall	.-2806   	; 0x314 <reg_servo_angle>
	reg_servo_angle(10, 210);
     e0a:	62 ed       	ldi	r22, 0xD2	; 210
     e0c:	70 e0       	ldi	r23, 0x00	; 0
     e0e:	8a e0       	ldi	r24, 0x0A	; 10
     e10:	90 e0       	ldi	r25, 0x00	; 0
     e12:	80 da       	rcall	.-2816   	; 0x314 <reg_servo_angle>
	reg_servo_angle(11, 85);
     e14:	65 e5       	ldi	r22, 0x55	; 85
     e16:	70 e0       	ldi	r23, 0x00	; 0
     e18:	8b e0       	ldi	r24, 0x0B	; 11
     e1a:	90 e0       	ldi	r25, 0x00	; 0
     e1c:	7b da       	rcall	.-2826   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(3, 161);
     e1e:	61 ea       	ldi	r22, 0xA1	; 161
     e20:	70 e0       	ldi	r23, 0x00	; 0
     e22:	83 e0       	ldi	r24, 0x03	; 3
     e24:	90 e0       	ldi	r25, 0x00	; 0
     e26:	76 da       	rcall	.-2836   	; 0x314 <reg_servo_angle>
	reg_servo_angle(4, 86);
     e28:	66 e5       	ldi	r22, 0x56	; 86
     e2a:	70 e0       	ldi	r23, 0x00	; 0
     e2c:	84 e0       	ldi	r24, 0x04	; 4
     e2e:	90 e0       	ldi	r25, 0x00	; 0
     e30:	71 da       	rcall	.-2846   	; 0x314 <reg_servo_angle>
	reg_servo_angle(5, 222);
     e32:	6e ed       	ldi	r22, 0xDE	; 222
     e34:	70 e0       	ldi	r23, 0x00	; 0
     e36:	85 e0       	ldi	r24, 0x05	; 5
     e38:	90 e0       	ldi	r25, 0x00	; 0
     e3a:	6c da       	rcall	.-2856   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(12, 150);
     e3c:	66 e9       	ldi	r22, 0x96	; 150
     e3e:	70 e0       	ldi	r23, 0x00	; 0
     e40:	8c e0       	ldi	r24, 0x0C	; 12
     e42:	90 e0       	ldi	r25, 0x00	; 0
     e44:	67 da       	rcall	.-2866   	; 0x314 <reg_servo_angle>
	reg_servo_angle(13, 230);
     e46:	66 ee       	ldi	r22, 0xE6	; 230
     e48:	70 e0       	ldi	r23, 0x00	; 0
     e4a:	8d e0       	ldi	r24, 0x0D	; 13
     e4c:	90 e0       	ldi	r25, 0x00	; 0
     e4e:	62 da       	rcall	.-2876   	; 0x314 <reg_servo_angle>
	reg_servo_angle(14, 80);
     e50:	60 e5       	ldi	r22, 0x50	; 80
     e52:	70 e0       	ldi	r23, 0x00	; 0
     e54:	8e e0       	ldi	r24, 0x0E	; 14
     e56:	90 e0       	ldi	r25, 0x00	; 0
     e58:	5d da       	rcall	.-2886   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(0, 150);
     e5a:	66 e9       	ldi	r22, 0x96	; 150
     e5c:	70 e0       	ldi	r23, 0x00	; 0
     e5e:	80 e0       	ldi	r24, 0x00	; 0
     e60:	90 e0       	ldi	r25, 0x00	; 0
     e62:	58 da       	rcall	.-2896   	; 0x314 <reg_servo_angle>
	reg_servo_angle(1, 70);
     e64:	66 e4       	ldi	r22, 0x46	; 70
     e66:	70 e0       	ldi	r23, 0x00	; 0
     e68:	81 e0       	ldi	r24, 0x01	; 1
     e6a:	90 e0       	ldi	r25, 0x00	; 0
     e6c:	53 da       	rcall	.-2906   	; 0x314 <reg_servo_angle>
	reg_servo_angle(2, 220);
     e6e:	6c ed       	ldi	r22, 0xDC	; 220
     e70:	70 e0       	ldi	r23, 0x00	; 0
     e72:	82 e0       	ldi	r24, 0x02	; 2
     e74:	90 e0       	ldi	r25, 0x00	; 0
     e76:	4e da       	rcall	.-2916   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(15, 165);
     e78:	65 ea       	ldi	r22, 0xA5	; 165
     e7a:	70 e0       	ldi	r23, 0x00	; 0
     e7c:	8f e0       	ldi	r24, 0x0F	; 15
     e7e:	90 e0       	ldi	r25, 0x00	; 0
     e80:	49 da       	rcall	.-2926   	; 0x314 <reg_servo_angle>
	reg_servo_angle(16, 210);
     e82:	62 ed       	ldi	r22, 0xD2	; 210
     e84:	70 e0       	ldi	r23, 0x00	; 0
     e86:	80 e1       	ldi	r24, 0x10	; 16
     e88:	90 e0       	ldi	r25, 0x00	; 0
     e8a:	44 da       	rcall	.-2936   	; 0x314 <reg_servo_angle>
	reg_servo_angle(17, 85);
     e8c:	65 e5       	ldi	r22, 0x55	; 85
     e8e:	70 e0       	ldi	r23, 0x00	; 0
     e90:	81 e1       	ldi	r24, 0x11	; 17
     e92:	90 e0       	ldi	r25, 0x00	; 0
     e94:	3f da       	rcall	.-2946   	; 0x314 <reg_servo_angle>
     e96:	8b e7       	ldi	r24, 0x7B	; 123
     e98:	92 e9       	ldi	r25, 0x92	; 146
     e9a:	01 97       	sbiw	r24, 0x01	; 1
     e9c:	f1 f7       	brne	.-4      	; 0xe9a <five_rot+0xb8>
     e9e:	00 c0       	rjmp	.+0      	; 0xea0 <five_rot+0xbe>
     ea0:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     ea2:	5a ca       	rjmp	.-2892   	; 0x358 <action>
     ea4:	08 95       	ret

00000ea6 <six_rot>:

void six_rot(void)
{
	int scale = 3;

	reg_servo_angle(6, 150);
     ea6:	66 e9       	ldi	r22, 0x96	; 150
     ea8:	70 e0       	ldi	r23, 0x00	; 0
     eaa:	86 e0       	ldi	r24, 0x06	; 6
     eac:	90 e0       	ldi	r25, 0x00	; 0
     eae:	32 da       	rcall	.-2972   	; 0x314 <reg_servo_angle>
	reg_servo_angle(7, 70);
     eb0:	66 e4       	ldi	r22, 0x46	; 70
     eb2:	70 e0       	ldi	r23, 0x00	; 0
     eb4:	87 e0       	ldi	r24, 0x07	; 7
     eb6:	90 e0       	ldi	r25, 0x00	; 0
     eb8:	2d da       	rcall	.-2982   	; 0x314 <reg_servo_angle>
	reg_servo_angle(8, 220);
     eba:	6c ed       	ldi	r22, 0xDC	; 220
     ebc:	70 e0       	ldi	r23, 0x00	; 0
     ebe:	88 e0       	ldi	r24, 0x08	; 8
     ec0:	90 e0       	ldi	r25, 0x00	; 0
     ec2:	28 da       	rcall	.-2992   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(9, 150);
     ec4:	66 e9       	ldi	r22, 0x96	; 150
     ec6:	70 e0       	ldi	r23, 0x00	; 0
     ec8:	89 e0       	ldi	r24, 0x09	; 9
     eca:	90 e0       	ldi	r25, 0x00	; 0
     ecc:	23 da       	rcall	.-3002   	; 0x314 <reg_servo_angle>
	reg_servo_angle(10, 211);
     ece:	63 ed       	ldi	r22, 0xD3	; 211
     ed0:	70 e0       	ldi	r23, 0x00	; 0
     ed2:	8a e0       	ldi	r24, 0x0A	; 10
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	1e da       	rcall	.-3012   	; 0x314 <reg_servo_angle>
	reg_servo_angle(11, 82);
     ed8:	62 e5       	ldi	r22, 0x52	; 82
     eda:	70 e0       	ldi	r23, 0x00	; 0
     edc:	8b e0       	ldi	r24, 0x0B	; 11
     ede:	90 e0       	ldi	r25, 0x00	; 0
     ee0:	19 da       	rcall	.-3022   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(3, 150);
     ee2:	66 e9       	ldi	r22, 0x96	; 150
     ee4:	70 e0       	ldi	r23, 0x00	; 0
     ee6:	83 e0       	ldi	r24, 0x03	; 3
     ee8:	90 e0       	ldi	r25, 0x00	; 0
     eea:	14 da       	rcall	.-3032   	; 0x314 <reg_servo_angle>
	reg_servo_angle(4, 89);
     eec:	69 e5       	ldi	r22, 0x59	; 89
     eee:	70 e0       	ldi	r23, 0x00	; 0
     ef0:	84 e0       	ldi	r24, 0x04	; 4
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	0f da       	rcall	.-3042   	; 0x314 <reg_servo_angle>
	reg_servo_angle(5, 218);
     ef6:	6a ed       	ldi	r22, 0xDA	; 218
     ef8:	70 e0       	ldi	r23, 0x00	; 0
     efa:	85 e0       	ldi	r24, 0x05	; 5
     efc:	90 e0       	ldi	r25, 0x00	; 0
     efe:	0a da       	rcall	.-3052   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(12, 150);
     f00:	66 e9       	ldi	r22, 0x96	; 150
     f02:	70 e0       	ldi	r23, 0x00	; 0
     f04:	8c e0       	ldi	r24, 0x0C	; 12
     f06:	90 e0       	ldi	r25, 0x00	; 0
     f08:	05 da       	rcall	.-3062   	; 0x314 <reg_servo_angle>
	reg_servo_angle(13, 230);
     f0a:	66 ee       	ldi	r22, 0xE6	; 230
     f0c:	70 e0       	ldi	r23, 0x00	; 0
     f0e:	8d e0       	ldi	r24, 0x0D	; 13
     f10:	90 e0       	ldi	r25, 0x00	; 0
     f12:	00 da       	rcall	.-3072   	; 0x314 <reg_servo_angle>
	reg_servo_angle(14, 80);
     f14:	60 e5       	ldi	r22, 0x50	; 80
     f16:	70 e0       	ldi	r23, 0x00	; 0
     f18:	8e e0       	ldi	r24, 0x0E	; 14
     f1a:	90 e0       	ldi	r25, 0x00	; 0
     f1c:	fb d9       	rcall	.-3082   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(0, 150);
     f1e:	66 e9       	ldi	r22, 0x96	; 150
     f20:	70 e0       	ldi	r23, 0x00	; 0
     f22:	80 e0       	ldi	r24, 0x00	; 0
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	f6 d9       	rcall	.-3092   	; 0x314 <reg_servo_angle>
	reg_servo_angle(1, 70);
     f28:	66 e4       	ldi	r22, 0x46	; 70
     f2a:	70 e0       	ldi	r23, 0x00	; 0
     f2c:	81 e0       	ldi	r24, 0x01	; 1
     f2e:	90 e0       	ldi	r25, 0x00	; 0
     f30:	f1 d9       	rcall	.-3102   	; 0x314 <reg_servo_angle>
	reg_servo_angle(2, 220);
     f32:	6c ed       	ldi	r22, 0xDC	; 220
     f34:	70 e0       	ldi	r23, 0x00	; 0
     f36:	82 e0       	ldi	r24, 0x02	; 2
     f38:	90 e0       	ldi	r25, 0x00	; 0
     f3a:	ec d9       	rcall	.-3112   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(15, 150);
     f3c:	66 e9       	ldi	r22, 0x96	; 150
     f3e:	70 e0       	ldi	r23, 0x00	; 0
     f40:	8f e0       	ldi	r24, 0x0F	; 15
     f42:	90 e0       	ldi	r25, 0x00	; 0
     f44:	e7 d9       	rcall	.-3122   	; 0x314 <reg_servo_angle>
	reg_servo_angle(16, 211);
     f46:	63 ed       	ldi	r22, 0xD3	; 211
     f48:	70 e0       	ldi	r23, 0x00	; 0
     f4a:	80 e1       	ldi	r24, 0x10	; 16
     f4c:	90 e0       	ldi	r25, 0x00	; 0
     f4e:	e2 d9       	rcall	.-3132   	; 0x314 <reg_servo_angle>
	reg_servo_angle(17, 82);
     f50:	62 e5       	ldi	r22, 0x52	; 82
     f52:	70 e0       	ldi	r23, 0x00	; 0
     f54:	81 e1       	ldi	r24, 0x11	; 17
     f56:	90 e0       	ldi	r25, 0x00	; 0
     f58:	dd d9       	rcall	.-3142   	; 0x314 <reg_servo_angle>
     f5a:	8b e7       	ldi	r24, 0x7B	; 123
     f5c:	92 e9       	ldi	r25, 0x92	; 146
     f5e:	01 97       	sbiw	r24, 0x01	; 1
     f60:	f1 f7       	brne	.-4      	; 0xf5e <six_rot+0xb8>
     f62:	00 c0       	rjmp	.+0      	; 0xf64 <six_rot+0xbe>
     f64:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     f66:	f8 c9       	rjmp	.-3088   	; 0x358 <action>
     f68:	08 95       	ret

00000f6a <seven_rot>:

void seven_rot(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 150);
     f6a:	66 e9       	ldi	r22, 0x96	; 150
     f6c:	70 e0       	ldi	r23, 0x00	; 0
     f6e:	86 e0       	ldi	r24, 0x06	; 6
     f70:	90 e0       	ldi	r25, 0x00	; 0
     f72:	d0 d9       	rcall	.-3168   	; 0x314 <reg_servo_angle>
	reg_servo_angle(7, 90);
     f74:	6a e5       	ldi	r22, 0x5A	; 90
     f76:	70 e0       	ldi	r23, 0x00	; 0
     f78:	87 e0       	ldi	r24, 0x07	; 7
     f7a:	90 e0       	ldi	r25, 0x00	; 0
     f7c:	cb d9       	rcall	.-3178   	; 0x314 <reg_servo_angle>
	reg_servo_angle(8, 220);
     f7e:	6c ed       	ldi	r22, 0xDC	; 220
     f80:	70 e0       	ldi	r23, 0x00	; 0
     f82:	88 e0       	ldi	r24, 0x08	; 8
     f84:	90 e0       	ldi	r25, 0x00	; 0
     f86:	c6 d9       	rcall	.-3188   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(9, 150);
     f88:	66 e9       	ldi	r22, 0x96	; 150
     f8a:	70 e0       	ldi	r23, 0x00	; 0
     f8c:	89 e0       	ldi	r24, 0x09	; 9
     f8e:	90 e0       	ldi	r25, 0x00	; 0
     f90:	c1 d9       	rcall	.-3198   	; 0x314 <reg_servo_angle>
	reg_servo_angle(10, 211);
     f92:	63 ed       	ldi	r22, 0xD3	; 211
     f94:	70 e0       	ldi	r23, 0x00	; 0
     f96:	8a e0       	ldi	r24, 0x0A	; 10
     f98:	90 e0       	ldi	r25, 0x00	; 0
     f9a:	bc d9       	rcall	.-3208   	; 0x314 <reg_servo_angle>
	reg_servo_angle(11, 82);
     f9c:	62 e5       	ldi	r22, 0x52	; 82
     f9e:	70 e0       	ldi	r23, 0x00	; 0
     fa0:	8b e0       	ldi	r24, 0x0B	; 11
     fa2:	90 e0       	ldi	r25, 0x00	; 0
     fa4:	b7 d9       	rcall	.-3218   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(3, 150);
     fa6:	66 e9       	ldi	r22, 0x96	; 150
     fa8:	70 e0       	ldi	r23, 0x00	; 0
     faa:	83 e0       	ldi	r24, 0x03	; 3
     fac:	90 e0       	ldi	r25, 0x00	; 0
     fae:	b2 d9       	rcall	.-3228   	; 0x314 <reg_servo_angle>
	reg_servo_angle(4, 89);
     fb0:	69 e5       	ldi	r22, 0x59	; 89
     fb2:	70 e0       	ldi	r23, 0x00	; 0
     fb4:	84 e0       	ldi	r24, 0x04	; 4
     fb6:	90 e0       	ldi	r25, 0x00	; 0
     fb8:	ad d9       	rcall	.-3238   	; 0x314 <reg_servo_angle>
	reg_servo_angle(5, 218);
     fba:	6a ed       	ldi	r22, 0xDA	; 218
     fbc:	70 e0       	ldi	r23, 0x00	; 0
     fbe:	85 e0       	ldi	r24, 0x05	; 5
     fc0:	90 e0       	ldi	r25, 0x00	; 0
     fc2:	a8 d9       	rcall	.-3248   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(12, 150);
     fc4:	66 e9       	ldi	r22, 0x96	; 150
     fc6:	70 e0       	ldi	r23, 0x00	; 0
     fc8:	8c e0       	ldi	r24, 0x0C	; 12
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	a3 d9       	rcall	.-3258   	; 0x314 <reg_servo_angle>
	reg_servo_angle(13, 210);
     fce:	62 ed       	ldi	r22, 0xD2	; 210
     fd0:	70 e0       	ldi	r23, 0x00	; 0
     fd2:	8d e0       	ldi	r24, 0x0D	; 13
     fd4:	90 e0       	ldi	r25, 0x00	; 0
     fd6:	9e d9       	rcall	.-3268   	; 0x314 <reg_servo_angle>
	reg_servo_angle(14, 80);
     fd8:	60 e5       	ldi	r22, 0x50	; 80
     fda:	70 e0       	ldi	r23, 0x00	; 0
     fdc:	8e e0       	ldi	r24, 0x0E	; 14
     fde:	90 e0       	ldi	r25, 0x00	; 0
     fe0:	99 d9       	rcall	.-3278   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(0, 150);
     fe2:	66 e9       	ldi	r22, 0x96	; 150
     fe4:	70 e0       	ldi	r23, 0x00	; 0
     fe6:	80 e0       	ldi	r24, 0x00	; 0
     fe8:	90 e0       	ldi	r25, 0x00	; 0
     fea:	94 d9       	rcall	.-3288   	; 0x314 <reg_servo_angle>
	reg_servo_angle(1, 90);
     fec:	6a e5       	ldi	r22, 0x5A	; 90
     fee:	70 e0       	ldi	r23, 0x00	; 0
     ff0:	81 e0       	ldi	r24, 0x01	; 1
     ff2:	90 e0       	ldi	r25, 0x00	; 0
     ff4:	8f d9       	rcall	.-3298   	; 0x314 <reg_servo_angle>
	reg_servo_angle(2, 220);
     ff6:	6c ed       	ldi	r22, 0xDC	; 220
     ff8:	70 e0       	ldi	r23, 0x00	; 0
     ffa:	82 e0       	ldi	r24, 0x02	; 2
     ffc:	90 e0       	ldi	r25, 0x00	; 0
     ffe:	8a d9       	rcall	.-3308   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(15, 150);
    1000:	66 e9       	ldi	r22, 0x96	; 150
    1002:	70 e0       	ldi	r23, 0x00	; 0
    1004:	8f e0       	ldi	r24, 0x0F	; 15
    1006:	90 e0       	ldi	r25, 0x00	; 0
    1008:	85 d9       	rcall	.-3318   	; 0x314 <reg_servo_angle>
	reg_servo_angle(16, 211);
    100a:	63 ed       	ldi	r22, 0xD3	; 211
    100c:	70 e0       	ldi	r23, 0x00	; 0
    100e:	80 e1       	ldi	r24, 0x10	; 16
    1010:	90 e0       	ldi	r25, 0x00	; 0
    1012:	80 d9       	rcall	.-3328   	; 0x314 <reg_servo_angle>
	reg_servo_angle(17, 82);
    1014:	62 e5       	ldi	r22, 0x52	; 82
    1016:	70 e0       	ldi	r23, 0x00	; 0
    1018:	81 e1       	ldi	r24, 0x11	; 17
    101a:	90 e0       	ldi	r25, 0x00	; 0
    101c:	7b d9       	rcall	.-3338   	; 0x314 <reg_servo_angle>
    101e:	8b e7       	ldi	r24, 0x7B	; 123
    1020:	92 e9       	ldi	r25, 0x92	; 146
    1022:	01 97       	sbiw	r24, 0x01	; 1
    1024:	f1 f7       	brne	.-4      	; 0x1022 <seven_rot+0xb8>
    1026:	00 c0       	rjmp	.+0      	; 0x1028 <seven_rot+0xbe>
    1028:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
    102a:	96 c9       	rjmp	.-3284   	; 0x358 <action>
    102c:	08 95       	ret

0000102e <eight_rot>:

void eight_rot(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 150);
    102e:	66 e9       	ldi	r22, 0x96	; 150
    1030:	70 e0       	ldi	r23, 0x00	; 0
    1032:	86 e0       	ldi	r24, 0x06	; 6
    1034:	90 e0       	ldi	r25, 0x00	; 0
    1036:	6e d9       	rcall	.-3364   	; 0x314 <reg_servo_angle>
	reg_servo_angle(7, 90);
    1038:	6a e5       	ldi	r22, 0x5A	; 90
    103a:	70 e0       	ldi	r23, 0x00	; 0
    103c:	87 e0       	ldi	r24, 0x07	; 7
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	69 d9       	rcall	.-3374   	; 0x314 <reg_servo_angle>
	reg_servo_angle(8, 220);
    1042:	6c ed       	ldi	r22, 0xDC	; 220
    1044:	70 e0       	ldi	r23, 0x00	; 0
    1046:	88 e0       	ldi	r24, 0x08	; 8
    1048:	90 e0       	ldi	r25, 0x00	; 0
    104a:	64 d9       	rcall	.-3384   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(9, 150);
    104c:	66 e9       	ldi	r22, 0x96	; 150
    104e:	70 e0       	ldi	r23, 0x00	; 0
    1050:	89 e0       	ldi	r24, 0x09	; 9
    1052:	90 e0       	ldi	r25, 0x00	; 0
    1054:	5f d9       	rcall	.-3394   	; 0x314 <reg_servo_angle>
	reg_servo_angle(10, 226);
    1056:	62 ee       	ldi	r22, 0xE2	; 226
    1058:	70 e0       	ldi	r23, 0x00	; 0
    105a:	8a e0       	ldi	r24, 0x0A	; 10
    105c:	90 e0       	ldi	r25, 0x00	; 0
    105e:	5a d9       	rcall	.-3404   	; 0x314 <reg_servo_angle>
	reg_servo_angle(11, 75);
    1060:	6b e4       	ldi	r22, 0x4B	; 75
    1062:	70 e0       	ldi	r23, 0x00	; 0
    1064:	8b e0       	ldi	r24, 0x0B	; 11
    1066:	90 e0       	ldi	r25, 0x00	; 0
    1068:	55 d9       	rcall	.-3414   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(3, 150);
    106a:	66 e9       	ldi	r22, 0x96	; 150
    106c:	70 e0       	ldi	r23, 0x00	; 0
    106e:	83 e0       	ldi	r24, 0x03	; 3
    1070:	90 e0       	ldi	r25, 0x00	; 0
    1072:	50 d9       	rcall	.-3424   	; 0x314 <reg_servo_angle>
	reg_servo_angle(4, 74);
    1074:	6a e4       	ldi	r22, 0x4A	; 74
    1076:	70 e0       	ldi	r23, 0x00	; 0
    1078:	84 e0       	ldi	r24, 0x04	; 4
    107a:	90 e0       	ldi	r25, 0x00	; 0
    107c:	4b d9       	rcall	.-3434   	; 0x314 <reg_servo_angle>
	reg_servo_angle(5, 225);
    107e:	61 ee       	ldi	r22, 0xE1	; 225
    1080:	70 e0       	ldi	r23, 0x00	; 0
    1082:	85 e0       	ldi	r24, 0x05	; 5
    1084:	90 e0       	ldi	r25, 0x00	; 0
    1086:	46 d9       	rcall	.-3444   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(12, 150);
    1088:	66 e9       	ldi	r22, 0x96	; 150
    108a:	70 e0       	ldi	r23, 0x00	; 0
    108c:	8c e0       	ldi	r24, 0x0C	; 12
    108e:	90 e0       	ldi	r25, 0x00	; 0
    1090:	41 d9       	rcall	.-3454   	; 0x314 <reg_servo_angle>
	reg_servo_angle(13, 210);
    1092:	62 ed       	ldi	r22, 0xD2	; 210
    1094:	70 e0       	ldi	r23, 0x00	; 0
    1096:	8d e0       	ldi	r24, 0x0D	; 13
    1098:	90 e0       	ldi	r25, 0x00	; 0
    109a:	3c d9       	rcall	.-3464   	; 0x314 <reg_servo_angle>
	reg_servo_angle(14, 80);
    109c:	60 e5       	ldi	r22, 0x50	; 80
    109e:	70 e0       	ldi	r23, 0x00	; 0
    10a0:	8e e0       	ldi	r24, 0x0E	; 14
    10a2:	90 e0       	ldi	r25, 0x00	; 0
    10a4:	37 d9       	rcall	.-3474   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(0, 150);
    10a6:	66 e9       	ldi	r22, 0x96	; 150
    10a8:	70 e0       	ldi	r23, 0x00	; 0
    10aa:	80 e0       	ldi	r24, 0x00	; 0
    10ac:	90 e0       	ldi	r25, 0x00	; 0
    10ae:	32 d9       	rcall	.-3484   	; 0x314 <reg_servo_angle>
	reg_servo_angle(1, 90);
    10b0:	6a e5       	ldi	r22, 0x5A	; 90
    10b2:	70 e0       	ldi	r23, 0x00	; 0
    10b4:	81 e0       	ldi	r24, 0x01	; 1
    10b6:	90 e0       	ldi	r25, 0x00	; 0
    10b8:	2d d9       	rcall	.-3494   	; 0x314 <reg_servo_angle>
	reg_servo_angle(2, 220);
    10ba:	6c ed       	ldi	r22, 0xDC	; 220
    10bc:	70 e0       	ldi	r23, 0x00	; 0
    10be:	82 e0       	ldi	r24, 0x02	; 2
    10c0:	90 e0       	ldi	r25, 0x00	; 0
    10c2:	28 d9       	rcall	.-3504   	; 0x314 <reg_servo_angle>
	
	reg_servo_angle(15, 150);
    10c4:	66 e9       	ldi	r22, 0x96	; 150
    10c6:	70 e0       	ldi	r23, 0x00	; 0
    10c8:	8f e0       	ldi	r24, 0x0F	; 15
    10ca:	90 e0       	ldi	r25, 0x00	; 0
    10cc:	23 d9       	rcall	.-3514   	; 0x314 <reg_servo_angle>
	reg_servo_angle(16, 226);
    10ce:	62 ee       	ldi	r22, 0xE2	; 226
    10d0:	70 e0       	ldi	r23, 0x00	; 0
    10d2:	80 e1       	ldi	r24, 0x10	; 16
    10d4:	90 e0       	ldi	r25, 0x00	; 0
    10d6:	1e d9       	rcall	.-3524   	; 0x314 <reg_servo_angle>
	reg_servo_angle(17, 75);
    10d8:	6b e4       	ldi	r22, 0x4B	; 75
    10da:	70 e0       	ldi	r23, 0x00	; 0
    10dc:	81 e1       	ldi	r24, 0x11	; 17
    10de:	90 e0       	ldi	r25, 0x00	; 0
    10e0:	19 d9       	rcall	.-3534   	; 0x314 <reg_servo_angle>
    10e2:	8b e7       	ldi	r24, 0x7B	; 123
    10e4:	92 e9       	ldi	r25, 0x92	; 146
    10e6:	01 97       	sbiw	r24, 0x01	; 1
    10e8:	f1 f7       	brne	.-4      	; 0x10e6 <eight_rot+0xb8>
    10ea:	00 c0       	rjmp	.+0      	; 0x10ec <eight_rot+0xbe>
    10ec:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
    10ee:	34 c9       	rjmp	.-3480   	; 0x358 <action>
    10f0:	08 95       	ret

000010f2 <rot_right>:
}

//Funktion för att rotera åt höger (medurs)
void rot_right(void)
{
	seven_rot();
    10f2:	3b df       	rcall	.-394    	; 0xf6a <seven_rot>
	six_rot();
    10f4:	d8 de       	rcall	.-592    	; 0xea6 <six_rot>
	five_rot();
    10f6:	75 de       	rcall	.-790    	; 0xde2 <five_rot>
	four_rot();
    10f8:	12 de       	rcall	.-988    	; 0xd1e <four_rot>
	three_rot();
    10fa:	af dd       	rcall	.-1186   	; 0xc5a <three_rot>
	two_rot();
    10fc:	4c dd       	rcall	.-1384   	; 0xb96 <two_rot>
	one_rot();
    10fe:	e9 dc       	rcall	.-1582   	; 0xad2 <one_rot>
	eight_rot();
    1100:	96 cf       	rjmp	.-212    	; 0x102e <eight_rot>
    1102:	08 95       	ret

00001104 <rot_left>:
}

//Funktion för at rotera åt vänster (moturs)
void rot_left(void)
{
	seven_rot();
    1104:	32 df       	rcall	.-412    	; 0xf6a <seven_rot>
	eight_rot();
    1106:	93 df       	rcall	.-218    	; 0x102e <eight_rot>
	one_rot();
    1108:	e4 dc       	rcall	.-1592   	; 0xad2 <one_rot>
	two_rot();
    110a:	45 dd       	rcall	.-1398   	; 0xb96 <two_rot>
	three_rot();
    110c:	a6 dd       	rcall	.-1204   	; 0xc5a <three_rot>
	four_rot();
    110e:	07 de       	rcall	.-1010   	; 0xd1e <four_rot>
	five_rot();
    1110:	68 de       	rcall	.-816    	; 0xde2 <five_rot>
	six_rot();
    1112:	c9 ce       	rjmp	.-622    	; 0xea6 <six_rot>
    1114:	08 95       	ret

00001116 <forward_left>:
//Funktion för att gå framåt-vänster
void forward_left(void)
{
	for(int i = 0; i < 4; i++)
	{
		forward();
    1116:	cb dc       	rcall	.-1642   	; 0xaae <forward>
    1118:	ca dc       	rcall	.-1644   	; 0xaae <forward>
    111a:	c9 dc       	rcall	.-1646   	; 0xaae <forward>
    111c:	c8 dc       	rcall	.-1648   	; 0xaae <forward>
	}
	rot_left();
    111e:	f2 cf       	rjmp	.-28     	; 0x1104 <rot_left>
    1120:	08 95       	ret

00001122 <forward_right>:
//Funktion för att gå framåt-höger
void forward_right(void)
{
	for(int i = 0; i < 4; i++)
	{
		forward();
    1122:	c5 dc       	rcall	.-1654   	; 0xaae <forward>
    1124:	c4 dc       	rcall	.-1656   	; 0xaae <forward>
    1126:	c3 dc       	rcall	.-1658   	; 0xaae <forward>
    1128:	c2 dc       	rcall	.-1660   	; 0xaae <forward>
	}
	rot_right();
    112a:	e3 cf       	rjmp	.-58     	; 0x10f2 <rot_right>
    112c:	08 95       	ret

0000112e <execute_command>:
/************************************************************************************************************
*********************************************  AVBROTT  *****************************************************
************************************************************************************************************/

void execute_command(void)
{
    112e:	cf 93       	push	r28
	unsigned char data = 0;
	data = SPDR;
    1130:	ce b5       	in	r28, 0x2e	; 46
	if (is_moving)
    1132:	90 91 01 01 	lds	r25, 0x0101
    1136:	99 23       	and	r25, r25
    1138:	29 f0       	breq	.+10     	; 0x1144 <execute_command+0x16>
	{
		spi_tranceiver(NOT_READY);
    113a:	80 ed       	ldi	r24, 0xD0	; 208
    113c:	2a d9       	rcall	.-3500   	; 0x392 <spi_tranceiver>
		data_sending = false;
    113e:	10 92 00 01 	sts	0x0100, r1
		return;
    1142:	3e c0       	rjmp	.+124    	; 0x11c0 <execute_command+0x92>
	}
	spi_tranceiver(READY);
    1144:	8f ef       	ldi	r24, 0xFF	; 255
    1146:	25 d9       	rcall	.-3510   	; 0x392 <spi_tranceiver>
	switch(data)
    1148:	8c 2f       	mov	r24, r28
    114a:	90 e0       	ldi	r25, 0x00	; 0
    114c:	fc 01       	movw	r30, r24
    114e:	31 97       	sbiw	r30, 0x01	; 1
    1150:	e7 30       	cpi	r30, 0x07	; 7
    1152:	f1 05       	cpc	r31, r1
    1154:	98 f5       	brcc	.+102    	; 0x11bc <execute_command+0x8e>
    1156:	ea 5b       	subi	r30, 0xBA	; 186
    1158:	ff 4f       	sbci	r31, 0xFF	; 255
    115a:	42 c1       	rjmp	.+644    	; 0x13e0 <__tablejump2__>
	{
		case WALK_FORWARD :
			is_moving = true;
    115c:	81 e0       	ldi	r24, 0x01	; 1
    115e:	80 93 01 01 	sts	0x0101, r24
			forward();
    1162:	a5 dc       	rcall	.-1718   	; 0xaae <forward>
			is_moving = false;
    1164:	10 92 01 01 	sts	0x0101, r1
			break;
    1168:	29 c0       	rjmp	.+82     	; 0x11bc <execute_command+0x8e>
		
		case WALK_BACKWARD :
			is_moving = true;
    116a:	81 e0       	ldi	r24, 0x01	; 1
    116c:	80 93 01 01 	sts	0x0101, r24
			backward();
    1170:	a7 dc       	rcall	.-1714   	; 0xac0 <backward>
			is_moving = false;
    1172:	10 92 01 01 	sts	0x0101, r1
			break;
    1176:	22 c0       	rjmp	.+68     	; 0x11bc <execute_command+0x8e>
		
		case ROTATE_LEFT :
			is_moving = true;
    1178:	81 e0       	ldi	r24, 0x01	; 1
    117a:	80 93 01 01 	sts	0x0101, r24
			rot_left();
    117e:	c2 df       	rcall	.-124    	; 0x1104 <rot_left>
			is_moving = false;
    1180:	10 92 01 01 	sts	0x0101, r1
			break;
    1184:	1b c0       	rjmp	.+54     	; 0x11bc <execute_command+0x8e>
		
		case ROTATE_RIGHT :
			is_moving = true;
    1186:	81 e0       	ldi	r24, 0x01	; 1
    1188:	80 93 01 01 	sts	0x0101, r24
			rot_right();
    118c:	b2 df       	rcall	.-156    	; 0x10f2 <rot_right>
			is_moving = false;
    118e:	10 92 01 01 	sts	0x0101, r1
			break;
    1192:	14 c0       	rjmp	.+40     	; 0x11bc <execute_command+0x8e>
			
		case TURN_LEFT :
			is_moving = true;
    1194:	81 e0       	ldi	r24, 0x01	; 1
    1196:	80 93 01 01 	sts	0x0101, r24
			forward_left();
    119a:	bd df       	rcall	.-134    	; 0x1116 <forward_left>
			is_moving = false;
    119c:	10 92 01 01 	sts	0x0101, r1
			break;
    11a0:	0d c0       	rjmp	.+26     	; 0x11bc <execute_command+0x8e>
			
		case TURN_RIGHT :
			is_moving = true;
    11a2:	81 e0       	ldi	r24, 0x01	; 1
    11a4:	80 93 01 01 	sts	0x0101, r24
			forward_right();
    11a8:	bc df       	rcall	.-136    	; 0x1122 <forward_right>
			is_moving = false;
    11aa:	10 92 01 01 	sts	0x0101, r1
			break;
    11ae:	06 c0       	rjmp	.+12     	; 0x11bc <execute_command+0x8e>
			
		case STAND_UP :
			is_moving = true;
    11b0:	81 e0       	ldi	r24, 0x01	; 1
    11b2:	80 93 01 01 	sts	0x0101, r24
			stand();
    11b6:	0f d9       	rcall	.-3554   	; 0x3d6 <stand>
			is_moving = false;
    11b8:	10 92 01 01 	sts	0x0101, r1
			break;
		
		default :
			break;
	}
	data_sending = false;
    11bc:	10 92 00 01 	sts	0x0100, r1
	return;
}
    11c0:	cf 91       	pop	r28
    11c2:	08 95       	ret

000011c4 <__vector_19>:

ISR(SPI_STC_vect)  
{  
    11c4:	1f 92       	push	r1
    11c6:	0f 92       	push	r0
    11c8:	0f b6       	in	r0, 0x3f	; 63
    11ca:	0f 92       	push	r0
    11cc:	11 24       	eor	r1, r1
    11ce:	0b b6       	in	r0, 0x3b	; 59
    11d0:	0f 92       	push	r0
    11d2:	2f 93       	push	r18
    11d4:	3f 93       	push	r19
    11d6:	4f 93       	push	r20
    11d8:	5f 93       	push	r21
    11da:	6f 93       	push	r22
    11dc:	7f 93       	push	r23
    11de:	8f 93       	push	r24
    11e0:	9f 93       	push	r25
    11e2:	af 93       	push	r26
    11e4:	bf 93       	push	r27
    11e6:	ef 93       	push	r30
    11e8:	ff 93       	push	r31
	//led_blink_green(1);
	if (!(data_sending))
    11ea:	80 91 00 01 	lds	r24, 0x0100
    11ee:	81 11       	cpse	r24, r1
    11f0:	04 c0       	rjmp	.+8      	; 0x11fa <__vector_19+0x36>
	{
		data_sending = true;
    11f2:	81 e0       	ldi	r24, 0x01	; 1
    11f4:	80 93 00 01 	sts	0x0100, r24
		execute_command();
    11f8:	9a df       	rcall	.-204    	; 0x112e <execute_command>
	}
}
    11fa:	ff 91       	pop	r31
    11fc:	ef 91       	pop	r30
    11fe:	bf 91       	pop	r27
    1200:	af 91       	pop	r26
    1202:	9f 91       	pop	r25
    1204:	8f 91       	pop	r24
    1206:	7f 91       	pop	r23
    1208:	6f 91       	pop	r22
    120a:	5f 91       	pop	r21
    120c:	4f 91       	pop	r20
    120e:	3f 91       	pop	r19
    1210:	2f 91       	pop	r18
    1212:	0f 90       	pop	r0
    1214:	0b be       	out	0x3b, r0	; 59
    1216:	0f 90       	pop	r0
    1218:	0f be       	out	0x3f, r0	; 63
    121a:	0f 90       	pop	r0
    121c:	1f 90       	pop	r1
    121e:	18 95       	reti

00001220 <__fixunssfsi>:
    1220:	33 d0       	rcall	.+102    	; 0x1288 <__fp_splitA>
    1222:	88 f0       	brcs	.+34     	; 0x1246 <__fixunssfsi+0x26>
    1224:	9f 57       	subi	r25, 0x7F	; 127
    1226:	90 f0       	brcs	.+36     	; 0x124c <__fixunssfsi+0x2c>
    1228:	b9 2f       	mov	r27, r25
    122a:	99 27       	eor	r25, r25
    122c:	b7 51       	subi	r27, 0x17	; 23
    122e:	a0 f0       	brcs	.+40     	; 0x1258 <__fixunssfsi+0x38>
    1230:	d1 f0       	breq	.+52     	; 0x1266 <__fixunssfsi+0x46>
    1232:	66 0f       	add	r22, r22
    1234:	77 1f       	adc	r23, r23
    1236:	88 1f       	adc	r24, r24
    1238:	99 1f       	adc	r25, r25
    123a:	1a f0       	brmi	.+6      	; 0x1242 <__fixunssfsi+0x22>
    123c:	ba 95       	dec	r27
    123e:	c9 f7       	brne	.-14     	; 0x1232 <__fixunssfsi+0x12>
    1240:	12 c0       	rjmp	.+36     	; 0x1266 <__fixunssfsi+0x46>
    1242:	b1 30       	cpi	r27, 0x01	; 1
    1244:	81 f0       	breq	.+32     	; 0x1266 <__fixunssfsi+0x46>
    1246:	3a d0       	rcall	.+116    	; 0x12bc <__fp_zero>
    1248:	b1 e0       	ldi	r27, 0x01	; 1
    124a:	08 95       	ret
    124c:	37 c0       	rjmp	.+110    	; 0x12bc <__fp_zero>
    124e:	67 2f       	mov	r22, r23
    1250:	78 2f       	mov	r23, r24
    1252:	88 27       	eor	r24, r24
    1254:	b8 5f       	subi	r27, 0xF8	; 248
    1256:	39 f0       	breq	.+14     	; 0x1266 <__fixunssfsi+0x46>
    1258:	b9 3f       	cpi	r27, 0xF9	; 249
    125a:	cc f3       	brlt	.-14     	; 0x124e <__fixunssfsi+0x2e>
    125c:	86 95       	lsr	r24
    125e:	77 95       	ror	r23
    1260:	67 95       	ror	r22
    1262:	b3 95       	inc	r27
    1264:	d9 f7       	brne	.-10     	; 0x125c <__fixunssfsi+0x3c>
    1266:	3e f4       	brtc	.+14     	; 0x1276 <__fixunssfsi+0x56>
    1268:	90 95       	com	r25
    126a:	80 95       	com	r24
    126c:	70 95       	com	r23
    126e:	61 95       	neg	r22
    1270:	7f 4f       	sbci	r23, 0xFF	; 255
    1272:	8f 4f       	sbci	r24, 0xFF	; 255
    1274:	9f 4f       	sbci	r25, 0xFF	; 255
    1276:	08 95       	ret

00001278 <__fp_split3>:
    1278:	57 fd       	sbrc	r21, 7
    127a:	90 58       	subi	r25, 0x80	; 128
    127c:	44 0f       	add	r20, r20
    127e:	55 1f       	adc	r21, r21
    1280:	59 f0       	breq	.+22     	; 0x1298 <__fp_splitA+0x10>
    1282:	5f 3f       	cpi	r21, 0xFF	; 255
    1284:	71 f0       	breq	.+28     	; 0x12a2 <__fp_splitA+0x1a>
    1286:	47 95       	ror	r20

00001288 <__fp_splitA>:
    1288:	88 0f       	add	r24, r24
    128a:	97 fb       	bst	r25, 7
    128c:	99 1f       	adc	r25, r25
    128e:	61 f0       	breq	.+24     	; 0x12a8 <__fp_splitA+0x20>
    1290:	9f 3f       	cpi	r25, 0xFF	; 255
    1292:	79 f0       	breq	.+30     	; 0x12b2 <__fp_splitA+0x2a>
    1294:	87 95       	ror	r24
    1296:	08 95       	ret
    1298:	12 16       	cp	r1, r18
    129a:	13 06       	cpc	r1, r19
    129c:	14 06       	cpc	r1, r20
    129e:	55 1f       	adc	r21, r21
    12a0:	f2 cf       	rjmp	.-28     	; 0x1286 <__fp_split3+0xe>
    12a2:	46 95       	lsr	r20
    12a4:	f1 df       	rcall	.-30     	; 0x1288 <__fp_splitA>
    12a6:	08 c0       	rjmp	.+16     	; 0x12b8 <__fp_splitA+0x30>
    12a8:	16 16       	cp	r1, r22
    12aa:	17 06       	cpc	r1, r23
    12ac:	18 06       	cpc	r1, r24
    12ae:	99 1f       	adc	r25, r25
    12b0:	f1 cf       	rjmp	.-30     	; 0x1294 <__fp_splitA+0xc>
    12b2:	86 95       	lsr	r24
    12b4:	71 05       	cpc	r23, r1
    12b6:	61 05       	cpc	r22, r1
    12b8:	08 94       	sec
    12ba:	08 95       	ret

000012bc <__fp_zero>:
    12bc:	e8 94       	clt

000012be <__fp_szero>:
    12be:	bb 27       	eor	r27, r27
    12c0:	66 27       	eor	r22, r22
    12c2:	77 27       	eor	r23, r23
    12c4:	cb 01       	movw	r24, r22
    12c6:	97 f9       	bld	r25, 7
    12c8:	08 95       	ret

000012ca <__mulsf3>:
    12ca:	0b d0       	rcall	.+22     	; 0x12e2 <__mulsf3x>
    12cc:	78 c0       	rjmp	.+240    	; 0x13be <__fp_round>
    12ce:	69 d0       	rcall	.+210    	; 0x13a2 <__fp_pscA>
    12d0:	28 f0       	brcs	.+10     	; 0x12dc <__mulsf3+0x12>
    12d2:	6e d0       	rcall	.+220    	; 0x13b0 <__fp_pscB>
    12d4:	18 f0       	brcs	.+6      	; 0x12dc <__mulsf3+0x12>
    12d6:	95 23       	and	r25, r21
    12d8:	09 f0       	breq	.+2      	; 0x12dc <__mulsf3+0x12>
    12da:	5a c0       	rjmp	.+180    	; 0x1390 <__fp_inf>
    12dc:	5f c0       	rjmp	.+190    	; 0x139c <__fp_nan>
    12de:	11 24       	eor	r1, r1
    12e0:	ee cf       	rjmp	.-36     	; 0x12be <__fp_szero>

000012e2 <__mulsf3x>:
    12e2:	ca df       	rcall	.-108    	; 0x1278 <__fp_split3>
    12e4:	a0 f3       	brcs	.-24     	; 0x12ce <__mulsf3+0x4>

000012e6 <__mulsf3_pse>:
    12e6:	95 9f       	mul	r25, r21
    12e8:	d1 f3       	breq	.-12     	; 0x12de <__mulsf3+0x14>
    12ea:	95 0f       	add	r25, r21
    12ec:	50 e0       	ldi	r21, 0x00	; 0
    12ee:	55 1f       	adc	r21, r21
    12f0:	62 9f       	mul	r22, r18
    12f2:	f0 01       	movw	r30, r0
    12f4:	72 9f       	mul	r23, r18
    12f6:	bb 27       	eor	r27, r27
    12f8:	f0 0d       	add	r31, r0
    12fa:	b1 1d       	adc	r27, r1
    12fc:	63 9f       	mul	r22, r19
    12fe:	aa 27       	eor	r26, r26
    1300:	f0 0d       	add	r31, r0
    1302:	b1 1d       	adc	r27, r1
    1304:	aa 1f       	adc	r26, r26
    1306:	64 9f       	mul	r22, r20
    1308:	66 27       	eor	r22, r22
    130a:	b0 0d       	add	r27, r0
    130c:	a1 1d       	adc	r26, r1
    130e:	66 1f       	adc	r22, r22
    1310:	82 9f       	mul	r24, r18
    1312:	22 27       	eor	r18, r18
    1314:	b0 0d       	add	r27, r0
    1316:	a1 1d       	adc	r26, r1
    1318:	62 1f       	adc	r22, r18
    131a:	73 9f       	mul	r23, r19
    131c:	b0 0d       	add	r27, r0
    131e:	a1 1d       	adc	r26, r1
    1320:	62 1f       	adc	r22, r18
    1322:	83 9f       	mul	r24, r19
    1324:	a0 0d       	add	r26, r0
    1326:	61 1d       	adc	r22, r1
    1328:	22 1f       	adc	r18, r18
    132a:	74 9f       	mul	r23, r20
    132c:	33 27       	eor	r19, r19
    132e:	a0 0d       	add	r26, r0
    1330:	61 1d       	adc	r22, r1
    1332:	23 1f       	adc	r18, r19
    1334:	84 9f       	mul	r24, r20
    1336:	60 0d       	add	r22, r0
    1338:	21 1d       	adc	r18, r1
    133a:	82 2f       	mov	r24, r18
    133c:	76 2f       	mov	r23, r22
    133e:	6a 2f       	mov	r22, r26
    1340:	11 24       	eor	r1, r1
    1342:	9f 57       	subi	r25, 0x7F	; 127
    1344:	50 40       	sbci	r21, 0x00	; 0
    1346:	8a f0       	brmi	.+34     	; 0x136a <__mulsf3_pse+0x84>
    1348:	e1 f0       	breq	.+56     	; 0x1382 <__mulsf3_pse+0x9c>
    134a:	88 23       	and	r24, r24
    134c:	4a f0       	brmi	.+18     	; 0x1360 <__mulsf3_pse+0x7a>
    134e:	ee 0f       	add	r30, r30
    1350:	ff 1f       	adc	r31, r31
    1352:	bb 1f       	adc	r27, r27
    1354:	66 1f       	adc	r22, r22
    1356:	77 1f       	adc	r23, r23
    1358:	88 1f       	adc	r24, r24
    135a:	91 50       	subi	r25, 0x01	; 1
    135c:	50 40       	sbci	r21, 0x00	; 0
    135e:	a9 f7       	brne	.-22     	; 0x134a <__mulsf3_pse+0x64>
    1360:	9e 3f       	cpi	r25, 0xFE	; 254
    1362:	51 05       	cpc	r21, r1
    1364:	70 f0       	brcs	.+28     	; 0x1382 <__mulsf3_pse+0x9c>
    1366:	14 c0       	rjmp	.+40     	; 0x1390 <__fp_inf>
    1368:	aa cf       	rjmp	.-172    	; 0x12be <__fp_szero>
    136a:	5f 3f       	cpi	r21, 0xFF	; 255
    136c:	ec f3       	brlt	.-6      	; 0x1368 <__mulsf3_pse+0x82>
    136e:	98 3e       	cpi	r25, 0xE8	; 232
    1370:	dc f3       	brlt	.-10     	; 0x1368 <__mulsf3_pse+0x82>
    1372:	86 95       	lsr	r24
    1374:	77 95       	ror	r23
    1376:	67 95       	ror	r22
    1378:	b7 95       	ror	r27
    137a:	f7 95       	ror	r31
    137c:	e7 95       	ror	r30
    137e:	9f 5f       	subi	r25, 0xFF	; 255
    1380:	c1 f7       	brne	.-16     	; 0x1372 <__mulsf3_pse+0x8c>
    1382:	fe 2b       	or	r31, r30
    1384:	88 0f       	add	r24, r24
    1386:	91 1d       	adc	r25, r1
    1388:	96 95       	lsr	r25
    138a:	87 95       	ror	r24
    138c:	97 f9       	bld	r25, 7
    138e:	08 95       	ret

00001390 <__fp_inf>:
    1390:	97 f9       	bld	r25, 7
    1392:	9f 67       	ori	r25, 0x7F	; 127
    1394:	80 e8       	ldi	r24, 0x80	; 128
    1396:	70 e0       	ldi	r23, 0x00	; 0
    1398:	60 e0       	ldi	r22, 0x00	; 0
    139a:	08 95       	ret

0000139c <__fp_nan>:
    139c:	9f ef       	ldi	r25, 0xFF	; 255
    139e:	80 ec       	ldi	r24, 0xC0	; 192
    13a0:	08 95       	ret

000013a2 <__fp_pscA>:
    13a2:	00 24       	eor	r0, r0
    13a4:	0a 94       	dec	r0
    13a6:	16 16       	cp	r1, r22
    13a8:	17 06       	cpc	r1, r23
    13aa:	18 06       	cpc	r1, r24
    13ac:	09 06       	cpc	r0, r25
    13ae:	08 95       	ret

000013b0 <__fp_pscB>:
    13b0:	00 24       	eor	r0, r0
    13b2:	0a 94       	dec	r0
    13b4:	12 16       	cp	r1, r18
    13b6:	13 06       	cpc	r1, r19
    13b8:	14 06       	cpc	r1, r20
    13ba:	05 06       	cpc	r0, r21
    13bc:	08 95       	ret

000013be <__fp_round>:
    13be:	09 2e       	mov	r0, r25
    13c0:	03 94       	inc	r0
    13c2:	00 0c       	add	r0, r0
    13c4:	11 f4       	brne	.+4      	; 0x13ca <__fp_round+0xc>
    13c6:	88 23       	and	r24, r24
    13c8:	52 f0       	brmi	.+20     	; 0x13de <__fp_round+0x20>
    13ca:	bb 0f       	add	r27, r27
    13cc:	40 f4       	brcc	.+16     	; 0x13de <__fp_round+0x20>
    13ce:	bf 2b       	or	r27, r31
    13d0:	11 f4       	brne	.+4      	; 0x13d6 <__fp_round+0x18>
    13d2:	60 ff       	sbrs	r22, 0
    13d4:	04 c0       	rjmp	.+8      	; 0x13de <__fp_round+0x20>
    13d6:	6f 5f       	subi	r22, 0xFF	; 255
    13d8:	7f 4f       	sbci	r23, 0xFF	; 255
    13da:	8f 4f       	sbci	r24, 0xFF	; 255
    13dc:	9f 4f       	sbci	r25, 0xFF	; 255
    13de:	08 95       	ret

000013e0 <__tablejump2__>:
    13e0:	ee 0f       	add	r30, r30
    13e2:	ff 1f       	adc	r31, r31

000013e4 <__tablejump__>:
    13e4:	05 90       	lpm	r0, Z+
    13e6:	f4 91       	lpm	r31, Z
    13e8:	e0 2d       	mov	r30, r0
    13ea:	09 94       	ijmp

000013ec <_exit>:
    13ec:	f8 94       	cli

000013ee <__stop_program>:
    13ee:	ff cf       	rjmp	.-2      	; 0x13ee <__stop_program>
