
alfred_monkaS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  0000020c  00000280  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000020c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000292  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000050  00000000  00000000  000002c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000657  00000000  00000000  00000312  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000194  00000000  00000000  00000969  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000344  00000000  00000000  00000afd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  0000009c  00000000  00000000  00000e44  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000001d4  00000000  00000000  00000ee0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000001e9  00000000  00000000  000010b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000040  00000000  00000000  0000129d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec e0       	ldi	r30, 0x0C	; 12
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 31       	cpi	r26, 0x12	; 18
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	8d d0       	rcall	.+282    	; 0x1ce <main>
  b4:	a9 c0       	rjmp	.+338    	; 0x208 <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <LCD_Command>:
	if (row == 0 && pos<16)
	LCD_Command((pos & 0x0F)|0x80);		/* Command of first row and required position<16 */
	else if (row == 1 && pos<16)
	LCD_Command((pos & 0x0F)|0xC0);		/* Command of first row and required position<16 */
	LCD_String(str);					/* Call LCD string function */
}
  b8:	92 b1       	in	r25, 0x02	; 2
  ba:	28 2f       	mov	r18, r24
  bc:	20 7f       	andi	r18, 0xF0	; 240
  be:	9f 70       	andi	r25, 0x0F	; 15
  c0:	92 2b       	or	r25, r18
  c2:	92 b9       	out	0x02, r25	; 2
  c4:	13 98       	cbi	0x02, 3	; 2
  c6:	12 9a       	sbi	0x02, 2	; 2
  c8:	35 e0       	ldi	r19, 0x05	; 5
  ca:	3a 95       	dec	r19
  cc:	f1 f7       	brne	.-4      	; 0xca <LCD_Command+0x12>
  ce:	00 00       	nop
  d0:	12 98       	cbi	0x02, 2	; 2
  d2:	ef e1       	ldi	r30, 0x1F	; 31
  d4:	f3 e0       	ldi	r31, 0x03	; 3
  d6:	31 97       	sbiw	r30, 0x01	; 1
  d8:	f1 f7       	brne	.-4      	; 0xd6 <LCD_Command+0x1e>
  da:	00 c0       	rjmp	.+0      	; 0xdc <LCD_Command+0x24>
  dc:	00 00       	nop
  de:	22 b1       	in	r18, 0x02	; 2
  e0:	f0 e1       	ldi	r31, 0x10	; 16
  e2:	8f 9f       	mul	r24, r31
  e4:	c0 01       	movw	r24, r0
  e6:	11 24       	eor	r1, r1
  e8:	92 2f       	mov	r25, r18
  ea:	9f 70       	andi	r25, 0x0F	; 15
  ec:	89 2b       	or	r24, r25
  ee:	82 b9       	out	0x02, r24	; 2
  f0:	12 9a       	sbi	0x02, 2	; 2
  f2:	35 e0       	ldi	r19, 0x05	; 5
  f4:	3a 95       	dec	r19
  f6:	f1 f7       	brne	.-4      	; 0xf4 <LCD_Command+0x3c>
  f8:	00 00       	nop
  fa:	12 98       	cbi	0x02, 2	; 2
  fc:	8f e3       	ldi	r24, 0x3F	; 63
  fe:	9f e1       	ldi	r25, 0x1F	; 31
 100:	01 97       	sbiw	r24, 0x01	; 1
 102:	f1 f7       	brne	.-4      	; 0x100 <LCD_Command+0x48>
 104:	00 c0       	rjmp	.+0      	; 0x106 <LCD_Command+0x4e>
 106:	00 00       	nop
 108:	08 95       	ret

0000010a <LCD_Char>:
 10a:	92 b1       	in	r25, 0x02	; 2
 10c:	28 2f       	mov	r18, r24
 10e:	20 7f       	andi	r18, 0xF0	; 240
 110:	9f 70       	andi	r25, 0x0F	; 15
 112:	92 2b       	or	r25, r18
 114:	92 b9       	out	0x02, r25	; 2
 116:	13 9a       	sbi	0x02, 3	; 2
 118:	12 9a       	sbi	0x02, 2	; 2
 11a:	35 e0       	ldi	r19, 0x05	; 5
 11c:	3a 95       	dec	r19
 11e:	f1 f7       	brne	.-4      	; 0x11c <LCD_Char+0x12>
 120:	00 00       	nop
 122:	12 98       	cbi	0x02, 2	; 2
 124:	ef e1       	ldi	r30, 0x1F	; 31
 126:	f3 e0       	ldi	r31, 0x03	; 3
 128:	31 97       	sbiw	r30, 0x01	; 1
 12a:	f1 f7       	brne	.-4      	; 0x128 <LCD_Char+0x1e>
 12c:	00 c0       	rjmp	.+0      	; 0x12e <LCD_Char+0x24>
 12e:	00 00       	nop
 130:	22 b1       	in	r18, 0x02	; 2
 132:	f0 e1       	ldi	r31, 0x10	; 16
 134:	8f 9f       	mul	r24, r31
 136:	c0 01       	movw	r24, r0
 138:	11 24       	eor	r1, r1
 13a:	92 2f       	mov	r25, r18
 13c:	9f 70       	andi	r25, 0x0F	; 15
 13e:	89 2b       	or	r24, r25
 140:	82 b9       	out	0x02, r24	; 2
 142:	12 9a       	sbi	0x02, 2	; 2
 144:	35 e0       	ldi	r19, 0x05	; 5
 146:	3a 95       	dec	r19
 148:	f1 f7       	brne	.-4      	; 0x146 <LCD_Char+0x3c>
 14a:	00 00       	nop
 14c:	12 98       	cbi	0x02, 2	; 2
 14e:	8f e3       	ldi	r24, 0x3F	; 63
 150:	9f e1       	ldi	r25, 0x1F	; 31
 152:	01 97       	sbiw	r24, 0x01	; 1
 154:	f1 f7       	brne	.-4      	; 0x152 <LCD_Char+0x48>
 156:	00 c0       	rjmp	.+0      	; 0x158 <LCD_Char+0x4e>
 158:	00 00       	nop
 15a:	08 95       	ret

0000015c <LCD_Init>:
 15c:	8f ef       	ldi	r24, 0xFF	; 255
 15e:	81 b9       	out	0x01, r24	; 1
 160:	2f ef       	ldi	r18, 0xFF	; 255
 162:	89 ef       	ldi	r24, 0xF9	; 249
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	21 50       	subi	r18, 0x01	; 1
 168:	80 40       	sbci	r24, 0x00	; 0
 16a:	90 40       	sbci	r25, 0x00	; 0
 16c:	e1 f7       	brne	.-8      	; 0x166 <LCD_Init+0xa>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <LCD_Init+0x14>
 170:	00 00       	nop
 172:	83 e3       	ldi	r24, 0x33	; 51
 174:	a1 df       	rcall	.-190    	; 0xb8 <LCD_Command>
 176:	82 e3       	ldi	r24, 0x32	; 50
 178:	9f df       	rcall	.-194    	; 0xb8 <LCD_Command>
 17a:	88 e2       	ldi	r24, 0x28	; 40
 17c:	9d df       	rcall	.-198    	; 0xb8 <LCD_Command>
 17e:	8c e0       	ldi	r24, 0x0C	; 12
 180:	9b df       	rcall	.-202    	; 0xb8 <LCD_Command>
 182:	86 e0       	ldi	r24, 0x06	; 6
 184:	99 df       	rcall	.-206    	; 0xb8 <LCD_Command>
 186:	81 e0       	ldi	r24, 0x01	; 1
 188:	97 df       	rcall	.-210    	; 0xb8 <LCD_Command>
 18a:	8f e3       	ldi	r24, 0x3F	; 63
 18c:	9f e1       	ldi	r25, 0x1F	; 31
 18e:	01 97       	sbiw	r24, 0x01	; 1
 190:	f1 f7       	brne	.-4      	; 0x18e <LCD_Init+0x32>
 192:	00 c0       	rjmp	.+0      	; 0x194 <LCD_Init+0x38>
 194:	00 00       	nop
 196:	80 e8       	ldi	r24, 0x80	; 128
 198:	8f cf       	rjmp	.-226    	; 0xb8 <LCD_Command>
 19a:	08 95       	ret

0000019c <LCD_String>:
 19c:	cf 93       	push	r28
 19e:	df 93       	push	r29
 1a0:	ec 01       	movw	r28, r24
 1a2:	88 81       	ld	r24, Y
 1a4:	88 23       	and	r24, r24
 1a6:	29 f0       	breq	.+10     	; 0x1b2 <LCD_String+0x16>
 1a8:	21 96       	adiw	r28, 0x01	; 1
 1aa:	af df       	rcall	.-162    	; 0x10a <LCD_Char>
 1ac:	89 91       	ld	r24, Y+
 1ae:	81 11       	cpse	r24, r1
 1b0:	fc cf       	rjmp	.-8      	; 0x1aa <LCD_String+0xe>
 1b2:	df 91       	pop	r29
 1b4:	cf 91       	pop	r28
 1b6:	08 95       	ret

000001b8 <LCD_Clear>:

void LCD_Clear()
{
	LCD_Command (0x01);					/* Clear display */
 1b8:	81 e0       	ldi	r24, 0x01	; 1
 1ba:	7e df       	rcall	.-260    	; 0xb8 <LCD_Command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1bc:	8f e3       	ldi	r24, 0x3F	; 63
 1be:	9f e1       	ldi	r25, 0x1F	; 31
 1c0:	01 97       	sbiw	r24, 0x01	; 1
 1c2:	f1 f7       	brne	.-4      	; 0x1c0 <LCD_Clear+0x8>
 1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <LCD_Clear+0xe>
 1c6:	00 00       	nop
	_delay_ms(2);
	LCD_Command (0x80);					/* Cursor 1st row 0th position */
 1c8:	80 e8       	ldi	r24, 0x80	; 128
 1ca:	76 cf       	rjmp	.-276    	; 0xb8 <LCD_Command>
 1cc:	08 95       	ret

000001ce <main>:
 
int main()
{
	while(1)
	{
		LCD_Init();							// Initialization of LCD
 1ce:	c6 df       	rcall	.-116    	; 0x15c <LCD_Init>
		LCD_String("OlovmonkaS");			// Write string on 1st line of LCD
 1d0:	80 e0       	ldi	r24, 0x00	; 0
 1d2:	91 e0       	ldi	r25, 0x01	; 1
 1d4:	e3 df       	rcall	.-58     	; 0x19c <LCD_String>
		LCD_Command(0xc0);					// Go to 2nd line
 1d6:	80 ec       	ldi	r24, 0xC0	; 192
 1d8:	6f df       	rcall	.-290    	; 0xb8 <LCD_Command>
		LCD_String("xd Lul");				// Write string on 2nd line
 1da:	8b e0       	ldi	r24, 0x0B	; 11
 1dc:	91 e0       	ldi	r25, 0x01	; 1
 1de:	de df       	rcall	.-68     	; 0x19c <LCD_String>
 1e0:	2f ef       	ldi	r18, 0xFF	; 255
 1e2:	87 ea       	ldi	r24, 0xA7	; 167
 1e4:	91 e6       	ldi	r25, 0x61	; 97
 1e6:	21 50       	subi	r18, 0x01	; 1
 1e8:	80 40       	sbci	r24, 0x00	; 0
 1ea:	90 40       	sbci	r25, 0x00	; 0
 1ec:	e1 f7       	brne	.-8      	; 0x1e6 <main+0x18>
 1ee:	00 c0       	rjmp	.+0      	; 0x1f0 <main+0x22>
 1f0:	00 00       	nop
		_delay_ms(2000);
		LCD_Clear();
 1f2:	e2 df       	rcall	.-60     	; 0x1b8 <LCD_Clear>
 1f4:	2f ef       	ldi	r18, 0xFF	; 255
 1f6:	85 ea       	ldi	r24, 0xA5	; 165
 1f8:	9e e0       	ldi	r25, 0x0E	; 14
 1fa:	21 50       	subi	r18, 0x01	; 1
 1fc:	80 40       	sbci	r24, 0x00	; 0
 1fe:	90 40       	sbci	r25, 0x00	; 0
 200:	e1 f7       	brne	.-8      	; 0x1fa <main+0x2c>
 202:	00 c0       	rjmp	.+0      	; 0x204 <main+0x36>
 204:	00 00       	nop
 206:	e3 cf       	rjmp	.-58     	; 0x1ce <main>

00000208 <_exit>:
 208:	f8 94       	cli

0000020a <__stop_program>:
 20a:	ff cf       	rjmp	.-2      	; 0x20a <__stop_program>
