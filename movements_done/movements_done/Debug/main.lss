
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000015aa  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000002  00800100  00800100  0000161e  2**0
                  ALLOC
  2 .comment      00000030  00000000  00000000  0000161e  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000208  00000000  00000000  0000164e  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00004921  00000000  00000000  00001856  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000006cc  00000000  00000000  00006177  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00001515  00000000  00000000  00006843  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000488  00000000  00000000  00007d58  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000051d  00000000  00000000  000081e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000b99  00000000  00000000  000086fd  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000001a8  00000000  00000000  00009296  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	4c c0       	rjmp	.+152    	; 0x9a <__ctors_end>
       2:	00 00       	nop
       4:	5b c0       	rjmp	.+182    	; 0xbc <__bad_interrupt>
       6:	00 00       	nop
       8:	59 c0       	rjmp	.+178    	; 0xbc <__bad_interrupt>
       a:	00 00       	nop
       c:	57 c0       	rjmp	.+174    	; 0xbc <__bad_interrupt>
       e:	00 00       	nop
      10:	55 c0       	rjmp	.+170    	; 0xbc <__bad_interrupt>
      12:	00 00       	nop
      14:	53 c0       	rjmp	.+166    	; 0xbc <__bad_interrupt>
      16:	00 00       	nop
      18:	51 c0       	rjmp	.+162    	; 0xbc <__bad_interrupt>
      1a:	00 00       	nop
      1c:	4f c0       	rjmp	.+158    	; 0xbc <__bad_interrupt>
      1e:	00 00       	nop
      20:	4d c0       	rjmp	.+154    	; 0xbc <__bad_interrupt>
      22:	00 00       	nop
      24:	4b c0       	rjmp	.+150    	; 0xbc <__bad_interrupt>
      26:	00 00       	nop
      28:	49 c0       	rjmp	.+146    	; 0xbc <__bad_interrupt>
      2a:	00 00       	nop
      2c:	47 c0       	rjmp	.+142    	; 0xbc <__bad_interrupt>
      2e:	00 00       	nop
      30:	45 c0       	rjmp	.+138    	; 0xbc <__bad_interrupt>
      32:	00 00       	nop
      34:	43 c0       	rjmp	.+134    	; 0xbc <__bad_interrupt>
      36:	00 00       	nop
      38:	41 c0       	rjmp	.+130    	; 0xbc <__bad_interrupt>
      3a:	00 00       	nop
      3c:	3f c0       	rjmp	.+126    	; 0xbc <__bad_interrupt>
      3e:	00 00       	nop
      40:	3d c0       	rjmp	.+122    	; 0xbc <__bad_interrupt>
      42:	00 00       	nop
      44:	3b c0       	rjmp	.+118    	; 0xbc <__bad_interrupt>
      46:	00 00       	nop
      48:	39 c0       	rjmp	.+114    	; 0xbc <__bad_interrupt>
      4a:	00 00       	nop
      4c:	0c 94 bf 09 	jmp	0x137e	; 0x137e <__vector_19>
      50:	35 c0       	rjmp	.+106    	; 0xbc <__bad_interrupt>
      52:	00 00       	nop
      54:	33 c0       	rjmp	.+102    	; 0xbc <__bad_interrupt>
      56:	00 00       	nop
      58:	31 c0       	rjmp	.+98     	; 0xbc <__bad_interrupt>
      5a:	00 00       	nop
      5c:	2f c0       	rjmp	.+94     	; 0xbc <__bad_interrupt>
      5e:	00 00       	nop
      60:	2d c0       	rjmp	.+90     	; 0xbc <__bad_interrupt>
      62:	00 00       	nop
      64:	2b c0       	rjmp	.+86     	; 0xbc <__bad_interrupt>
      66:	00 00       	nop
      68:	29 c0       	rjmp	.+82     	; 0xbc <__bad_interrupt>
      6a:	00 00       	nop
      6c:	27 c0       	rjmp	.+78     	; 0xbc <__bad_interrupt>
      6e:	00 00       	nop
      70:	25 c0       	rjmp	.+74     	; 0xbc <__bad_interrupt>
      72:	00 00       	nop
      74:	23 c0       	rjmp	.+70     	; 0xbc <__bad_interrupt>
      76:	00 00       	nop
      78:	21 c0       	rjmp	.+66     	; 0xbc <__bad_interrupt>
      7a:	00 00       	nop
      7c:	1f c0       	rjmp	.+62     	; 0xbc <__bad_interrupt>
      7e:	00 00       	nop
      80:	1d c0       	rjmp	.+58     	; 0xbc <__bad_interrupt>
      82:	00 00       	nop
      84:	1b c0       	rjmp	.+54     	; 0xbc <__bad_interrupt>
      86:	00 00       	nop
      88:	19 c0       	rjmp	.+50     	; 0xbc <__bad_interrupt>
      8a:	00 00       	nop
      8c:	86 09       	sbc	r24, r6
      8e:	91 09       	sbc	r25, r1
      90:	98 09       	sbc	r25, r8
      92:	9f 09       	sbc	r25, r15
      94:	a6 09       	sbc	r26, r6
      96:	ad 09       	sbc	r26, r13
      98:	b4 09       	sbc	r27, r4

0000009a <__ctors_end>:
      9a:	11 24       	eor	r1, r1
      9c:	1f be       	out	0x3f, r1	; 63
      9e:	cf ef       	ldi	r28, 0xFF	; 255
      a0:	d0 e4       	ldi	r29, 0x40	; 64
      a2:	de bf       	out	0x3e, r29	; 62
      a4:	cd bf       	out	0x3d, r28	; 61

000000a6 <__do_clear_bss>:
      a6:	21 e0       	ldi	r18, 0x01	; 1
      a8:	a0 e0       	ldi	r26, 0x00	; 0
      aa:	b1 e0       	ldi	r27, 0x01	; 1
      ac:	01 c0       	rjmp	.+2      	; 0xb0 <.do_clear_bss_start>

000000ae <.do_clear_bss_loop>:
      ae:	1d 92       	st	X+, r1

000000b0 <.do_clear_bss_start>:
      b0:	a2 30       	cpi	r26, 0x02	; 2
      b2:	b2 07       	cpc	r27, r18
      b4:	e1 f7       	brne	.-8      	; 0xae <.do_clear_bss_loop>
      b6:	44 d0       	rcall	.+136    	; 0x140 <main>
      b8:	0c 94 d3 0a 	jmp	0x15a6	; 0x15a6 <_exit>

000000bc <__bad_interrupt>:
      bc:	a1 cf       	rjmp	.-190    	; 0x0 <__vectors>

000000be <led_blink_red>:
#include "led.h"

void led_blink_red (uint16_t i)
{
	//Blink LED "i" number of times
	for (; i>0; --i)
      be:	00 97       	sbiw	r24, 0x00	; 0
      c0:	b9 f0       	breq	.+46     	; 0xf0 <led_blink_red+0x32>
	{
		PORTB|=(1<<0);
      c2:	28 9a       	sbi	0x05, 0	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      c4:	2f ef       	ldi	r18, 0xFF	; 255
      c6:	39 e6       	ldi	r19, 0x69	; 105
      c8:	48 e1       	ldi	r20, 0x18	; 24
      ca:	21 50       	subi	r18, 0x01	; 1
      cc:	30 40       	sbci	r19, 0x00	; 0
      ce:	40 40       	sbci	r20, 0x00	; 0
      d0:	e1 f7       	brne	.-8      	; 0xca <led_blink_red+0xc>
      d2:	00 c0       	rjmp	.+0      	; 0xd4 <led_blink_red+0x16>
      d4:	00 00       	nop
		_delay_ms(500);
		PORTB=(0<<0);
      d6:	15 b8       	out	0x05, r1	; 5
      d8:	2f ef       	ldi	r18, 0xFF	; 255
      da:	39 e6       	ldi	r19, 0x69	; 105
      dc:	48 e1       	ldi	r20, 0x18	; 24
      de:	21 50       	subi	r18, 0x01	; 1
      e0:	30 40       	sbci	r19, 0x00	; 0
      e2:	40 40       	sbci	r20, 0x00	; 0
      e4:	e1 f7       	brne	.-8      	; 0xde <led_blink_red+0x20>
      e6:	00 c0       	rjmp	.+0      	; 0xe8 <led_blink_red+0x2a>
      e8:	00 00       	nop
#include "led.h"

void led_blink_red (uint16_t i)
{
	//Blink LED "i" number of times
	for (; i>0; --i)
      ea:	01 97       	sbiw	r24, 0x01	; 1
      ec:	00 97       	sbiw	r24, 0x00	; 0
      ee:	49 f7       	brne	.-46     	; 0xc2 <led_blink_red+0x4>
      f0:	08 95       	ret

000000f2 <led_blink_green>:
}

void led_blink_green (uint16_t i)
{
	//Blink LED "i" number of times
	for (; i>0; --i)
      f2:	00 97       	sbiw	r24, 0x00	; 0
      f4:	b9 f0       	breq	.+46     	; 0x124 <led_blink_green+0x32>
	{
		PORTB|=(1<<1);
      f6:	29 9a       	sbi	0x05, 1	; 5
      f8:	2f ef       	ldi	r18, 0xFF	; 255
      fa:	39 e6       	ldi	r19, 0x69	; 105
      fc:	48 e1       	ldi	r20, 0x18	; 24
      fe:	21 50       	subi	r18, 0x01	; 1
     100:	30 40       	sbci	r19, 0x00	; 0
     102:	40 40       	sbci	r20, 0x00	; 0
     104:	e1 f7       	brne	.-8      	; 0xfe <led_blink_green+0xc>
     106:	00 c0       	rjmp	.+0      	; 0x108 <led_blink_green+0x16>
     108:	00 00       	nop
		_delay_ms(500);
		PORTB=(0<<1);
     10a:	15 b8       	out	0x05, r1	; 5
     10c:	2f ef       	ldi	r18, 0xFF	; 255
     10e:	39 e6       	ldi	r19, 0x69	; 105
     110:	48 e1       	ldi	r20, 0x18	; 24
     112:	21 50       	subi	r18, 0x01	; 1
     114:	30 40       	sbci	r19, 0x00	; 0
     116:	40 40       	sbci	r20, 0x00	; 0
     118:	e1 f7       	brne	.-8      	; 0x112 <led_blink_green+0x20>
     11a:	00 c0       	rjmp	.+0      	; 0x11c <led_blink_green+0x2a>
     11c:	00 00       	nop
}

void led_blink_green (uint16_t i)
{
	//Blink LED "i" number of times
	for (; i>0; --i)
     11e:	01 97       	sbiw	r24, 0x01	; 1
     120:	00 97       	sbiw	r24, 0x00	; 0
     122:	49 f7       	brne	.-46     	; 0xf6 <led_blink_green+0x4>
     124:	08 95       	ret

00000126 <main_init>:
#include "walk.h"
#include "lcd.h"

void main_init(void)
{
	uart_init();
     126:	e0 d0       	rcall	.+448    	; 0x2e8 <uart_init>
	led_blink_green(1);
     128:	81 e0       	ldi	r24, 0x01	; 1
     12a:	90 e0       	ldi	r25, 0x00	; 0
     12c:	e2 df       	rcall	.-60     	; 0xf2 <led_blink_green>
	//spi_init();
	//data_direction_init();
	//LCD_Init();
	//LCD_Clear();
	servo_init();
     12e:	c2 d0       	rcall	.+388    	; 0x2b4 <servo_init>
	led_blink_green(1);
     130:	81 e0       	ldi	r24, 0x01	; 1
     132:	90 e0       	ldi	r25, 0x00	; 0
     134:	de df       	rcall	.-68     	; 0xf2 <led_blink_green>
	//sei();
	stand();
     136:	ec d0       	rcall	.+472    	; 0x310 <stand>
	led_blink_green(1);
     138:	81 e0       	ldi	r24, 0x01	; 1
     13a:	90 e0       	ldi	r25, 0x00	; 0
     13c:	da cf       	rjmp	.-76     	; 0xf2 <led_blink_green>
     13e:	08 95       	ret

00000140 <main>:
************************************************************************************************************/


int main(void)
{
	main_init();
     140:	f2 df       	rcall	.-28     	; 0x126 <main_init>
	////led_blink_red(1);
	//_delay_ms(1000);
	
	while(1)
	{
		led_blink_red(1);
     142:	81 e0       	ldi	r24, 0x01	; 1
     144:	90 e0       	ldi	r25, 0x00	; 0
     146:	bb df       	rcall	.-138    	; 0xbe <led_blink_red>
     148:	fc cf       	rjmp	.-8      	; 0x142 <main+0x2>

0000014a <send_servo_command>:

	const uint8_t highByte2 = (uint8_t)((higherLimit >> 8) & 0xff);
	const uint8_t lowByte2 = (uint8_t)(higherLimit & 0xff);
	const uint8_t params2[3] = {HIGHER_ANGLE_LIMIT, lowByte2, highByte2};
	send_servo_command(servoId, WRITE, 3, params2);
}
     14a:	df 92       	push	r13
     14c:	ef 92       	push	r14
     14e:	ff 92       	push	r15
     150:	0f 93       	push	r16
     152:	1f 93       	push	r17
     154:	cf 93       	push	r28
     156:	df 93       	push	r29
     158:	c8 2f       	mov	r28, r24
     15a:	e6 2e       	mov	r14, r22
     15c:	d4 2e       	mov	r13, r20
     15e:	02 2f       	mov	r16, r18
     160:	13 2f       	mov	r17, r19
     162:	be d0       	rcall	.+380    	; 0x2e0 <send_mode>
     164:	e0 ec       	ldi	r30, 0xC0	; 192
     166:	f0 e0       	ldi	r31, 0x00	; 0
     168:	80 81       	ld	r24, Z
     16a:	80 83       	st	Z, r24
     16c:	8f ef       	ldi	r24, 0xFF	; 255
     16e:	c8 d0       	rcall	.+400    	; 0x300 <uart_transmit>
     170:	8f ef       	ldi	r24, 0xFF	; 255
     172:	c6 d0       	rcall	.+396    	; 0x300 <uart_transmit>
     174:	8c 2f       	mov	r24, r28
     176:	c4 d0       	rcall	.+392    	; 0x300 <uart_transmit>
     178:	82 e0       	ldi	r24, 0x02	; 2
     17a:	8d 0d       	add	r24, r13
     17c:	c1 d0       	rcall	.+386    	; 0x300 <uart_transmit>
     17e:	8e 2d       	mov	r24, r14
     180:	bf d0       	rcall	.+382    	; 0x300 <uart_transmit>
     182:	e3 94       	inc	r14
     184:	e3 94       	inc	r14
     186:	ed 0c       	add	r14, r13
     188:	ec 0e       	add	r14, r28
     18a:	dd 20       	and	r13, r13
     18c:	61 f0       	breq	.+24     	; 0x1a6 <send_servo_command+0x5c>
     18e:	c0 2f       	mov	r28, r16
     190:	d1 2f       	mov	r29, r17
     192:	f1 2c       	mov	r15, r1
     194:	8e 01       	movw	r16, r28
     196:	89 91       	ld	r24, Y+
     198:	b3 d0       	rcall	.+358    	; 0x300 <uart_transmit>
     19a:	f8 01       	movw	r30, r16
     19c:	80 81       	ld	r24, Z
     19e:	e8 0e       	add	r14, r24
     1a0:	f3 94       	inc	r15
     1a2:	fd 10       	cpse	r15, r13
     1a4:	f7 cf       	rjmp	.-18     	; 0x194 <send_servo_command+0x4a>
     1a6:	f8 94       	cli
     1a8:	8e 2d       	mov	r24, r14
     1aa:	80 95       	com	r24
     1ac:	a9 d0       	rcall	.+338    	; 0x300 <uart_transmit>
     1ae:	e0 ec       	ldi	r30, 0xC0	; 192
     1b0:	f0 e0       	ldi	r31, 0x00	; 0
     1b2:	80 81       	ld	r24, Z
     1b4:	86 ff       	sbrs	r24, 6
     1b6:	fd cf       	rjmp	.-6      	; 0x1b2 <send_servo_command+0x68>
     1b8:	8f d0       	rcall	.+286    	; 0x2d8 <recieve_mode>
     1ba:	78 94       	sei
     1bc:	df 91       	pop	r29
     1be:	cf 91       	pop	r28
     1c0:	1f 91       	pop	r17
     1c2:	0f 91       	pop	r16
     1c4:	ff 90       	pop	r15
     1c6:	ef 90       	pop	r14
     1c8:	df 90       	pop	r13
     1ca:	08 95       	ret

000001cc <set_servo_status_return_level>:
     1cc:	cf 93       	push	r28
     1ce:	df 93       	push	r29
     1d0:	00 d0       	rcall	.+0      	; 0x1d2 <set_servo_status_return_level+0x6>
     1d2:	cd b7       	in	r28, 0x3d	; 61
     1d4:	de b7       	in	r29, 0x3e	; 62
     1d6:	90 e1       	ldi	r25, 0x10	; 16
     1d8:	99 83       	std	Y+1, r25	; 0x01
     1da:	6a 83       	std	Y+2, r22	; 0x02
     1dc:	9e 01       	movw	r18, r28
     1de:	2f 5f       	subi	r18, 0xFF	; 255
     1e0:	3f 4f       	sbci	r19, 0xFF	; 255
     1e2:	42 e0       	ldi	r20, 0x02	; 2
     1e4:	63 e0       	ldi	r22, 0x03	; 3
     1e6:	b1 df       	rcall	.-158    	; 0x14a <send_servo_command>
     1e8:	0f 90       	pop	r0
     1ea:	0f 90       	pop	r0
     1ec:	df 91       	pop	r29
     1ee:	cf 91       	pop	r28
     1f0:	08 95       	ret

000001f2 <set_servo_max_speed>:
     1f2:	cf 93       	push	r28
     1f4:	df 93       	push	r29
     1f6:	00 d0       	rcall	.+0      	; 0x1f8 <set_servo_max_speed+0x6>
     1f8:	1f 92       	push	r1
     1fa:	cd b7       	in	r28, 0x3d	; 61
     1fc:	de b7       	in	r29, 0x3e	; 62
     1fe:	90 e2       	ldi	r25, 0x20	; 32
     200:	99 83       	std	Y+1, r25	; 0x01
     202:	6a 83       	std	Y+2, r22	; 0x02
     204:	7b 83       	std	Y+3, r23	; 0x03
     206:	9e 01       	movw	r18, r28
     208:	2f 5f       	subi	r18, 0xFF	; 255
     20a:	3f 4f       	sbci	r19, 0xFF	; 255
     20c:	43 e0       	ldi	r20, 0x03	; 3
     20e:	63 e0       	ldi	r22, 0x03	; 3
     210:	9c df       	rcall	.-200    	; 0x14a <send_servo_command>
     212:	0f 90       	pop	r0
     214:	0f 90       	pop	r0
     216:	0f 90       	pop	r0
     218:	df 91       	pop	r29
     21a:	cf 91       	pop	r28
     21c:	08 95       	ret

0000021e <set_servo_torque>:
     21e:	cf 93       	push	r28
     220:	df 93       	push	r29
     222:	00 d0       	rcall	.+0      	; 0x224 <set_servo_torque+0x6>
     224:	1f 92       	push	r1
     226:	cd b7       	in	r28, 0x3d	; 61
     228:	de b7       	in	r29, 0x3e	; 62
     22a:	92 e2       	ldi	r25, 0x22	; 34
     22c:	99 83       	std	Y+1, r25	; 0x01
     22e:	6a 83       	std	Y+2, r22	; 0x02
     230:	7b 83       	std	Y+3, r23	; 0x03
     232:	9e 01       	movw	r18, r28
     234:	2f 5f       	subi	r18, 0xFF	; 255
     236:	3f 4f       	sbci	r19, 0xFF	; 255
     238:	43 e0       	ldi	r20, 0x03	; 3
     23a:	63 e0       	ldi	r22, 0x03	; 3
     23c:	86 df       	rcall	.-244    	; 0x14a <send_servo_command>
     23e:	0f 90       	pop	r0
     240:	0f 90       	pop	r0
     242:	0f 90       	pop	r0
     244:	df 91       	pop	r29
     246:	cf 91       	pop	r28
     248:	08 95       	ret

0000024a <reg_servo_angle>:

//Laddar ett servo med en vinkel
void reg_servo_angle (const uint8_t servoId, const float angle)
{
     24a:	1f 93       	push	r17
     24c:	cf 93       	push	r28
     24e:	df 93       	push	r29
     250:	00 d0       	rcall	.+0      	; 0x252 <reg_servo_angle+0x8>
     252:	1f 92       	push	r1
     254:	cd b7       	in	r28, 0x3d	; 61
     256:	de b7       	in	r29, 0x3e	; 62
     258:	18 2f       	mov	r17, r24
     25a:	cb 01       	movw	r24, r22
     25c:	ba 01       	movw	r22, r20
	const uint16_t angleValue = (uint16_t)(angle * (1023.0 / 300.0));
     25e:	21 e7       	ldi	r18, 0x71	; 113
     260:	3d e3       	ldi	r19, 0x3D	; 61
     262:	4a e5       	ldi	r20, 0x5A	; 90
     264:	50 e4       	ldi	r21, 0x40	; 64
     266:	0e 94 42 0a 	call	0x1484	; 0x1484 <__mulsf3>
     26a:	0e 94 ed 09 	call	0x13da	; 0x13da <__fixunssfsi>
	const uint8_t highByte = (uint8_t)((angleValue >> 8) & 0xff);
	const uint8_t lowByte = (uint8_t)(angleValue & 0xff);
	const uint8_t params[3] = {GOAL_ANGLE, lowByte, highByte};
     26e:	8e e1       	ldi	r24, 0x1E	; 30
     270:	89 83       	std	Y+1, r24	; 0x01
//Laddar ett servo med en vinkel
void reg_servo_angle (const uint8_t servoId, const float angle)
{
	const uint16_t angleValue = (uint16_t)(angle * (1023.0 / 300.0));
	const uint8_t highByte = (uint8_t)((angleValue >> 8) & 0xff);
	const uint8_t lowByte = (uint8_t)(angleValue & 0xff);
     272:	6a 83       	std	Y+2, r22	; 0x02

//Laddar ett servo med en vinkel
void reg_servo_angle (const uint8_t servoId, const float angle)
{
	const uint16_t angleValue = (uint16_t)(angle * (1023.0 / 300.0));
	const uint8_t highByte = (uint8_t)((angleValue >> 8) & 0xff);
     274:	7b 83       	std	Y+3, r23	; 0x03
	const uint8_t lowByte = (uint8_t)(angleValue & 0xff);
	const uint8_t params[3] = {GOAL_ANGLE, lowByte, highByte};
	send_servo_command (servoId, REG, 3, params);
     276:	9e 01       	movw	r18, r28
     278:	2f 5f       	subi	r18, 0xFF	; 255
     27a:	3f 4f       	sbci	r19, 0xFF	; 255
     27c:	43 e0       	ldi	r20, 0x03	; 3
     27e:	64 e0       	ldi	r22, 0x04	; 4
     280:	81 2f       	mov	r24, r17
     282:	63 df       	rcall	.-314    	; 0x14a <send_servo_command>
}
     284:	0f 90       	pop	r0
     286:	0f 90       	pop	r0
     288:	0f 90       	pop	r0
     28a:	df 91       	pop	r29
     28c:	cf 91       	pop	r28
     28e:	1f 91       	pop	r17
     290:	08 95       	ret

00000292 <action>:

//Utför de instruktioner som servona har laddats med
void action(void)
{
     292:	cf 93       	push	r28
     294:	df 93       	push	r29
     296:	1f 92       	push	r1
     298:	cd b7       	in	r28, 0x3d	; 61
     29a:	de b7       	in	r29, 0x3e	; 62
	const uint8_t params[1] = {0};
     29c:	19 82       	std	Y+1, r1	; 0x01
	send_servo_command (0xfe, ACTION, 0, params);
     29e:	9e 01       	movw	r18, r28
     2a0:	2f 5f       	subi	r18, 0xFF	; 255
     2a2:	3f 4f       	sbci	r19, 0xFF	; 255
     2a4:	40 e0       	ldi	r20, 0x00	; 0
     2a6:	65 e0       	ldi	r22, 0x05	; 5
     2a8:	8e ef       	ldi	r24, 0xFE	; 254
     2aa:	4f df       	rcall	.-354    	; 0x14a <send_servo_command>
}
     2ac:	0f 90       	pop	r0
     2ae:	df 91       	pop	r29
     2b0:	cf 91       	pop	r28
     2b2:	08 95       	ret

000002b4 <servo_init>:
************************************************************************************************************/

//Initiera standardinställningar för servona
void servo_init(void)
{
	set_servo_status_return_level(0xfe, 0x01);
     2b4:	61 e0       	ldi	r22, 0x01	; 1
     2b6:	8e ef       	ldi	r24, 0xFE	; 254
     2b8:	89 df       	rcall	.-238    	; 0x1cc <set_servo_status_return_level>
	set_servo_torque(0xfe, 1023);
     2ba:	6f ef       	ldi	r22, 0xFF	; 255
     2bc:	73 e0       	ldi	r23, 0x03	; 3
     2be:	8e ef       	ldi	r24, 0xFE	; 254
     2c0:	ae df       	rcall	.-164    	; 0x21e <set_servo_torque>
	set_servo_max_speed(0xfe, 150);
     2c2:	66 e9       	ldi	r22, 0x96	; 150
     2c4:	70 e0       	ldi	r23, 0x00	; 0
     2c6:	8e ef       	ldi	r24, 0xFE	; 254
     2c8:	94 cf       	rjmp	.-216    	; 0x1f2 <set_servo_max_speed>
     2ca:	08 95       	ret

000002cc <spi_tranceiver>:
}

//Function to send and receive data
unsigned char spi_tranceiver (unsigned char indata)
{	
	SPDR = indata;											//Load data into buffer
     2cc:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF)));							//Wait until transmission complete
     2ce:	0d b4       	in	r0, 0x2d	; 45
     2d0:	07 fe       	sbrs	r0, 7
     2d2:	fd cf       	rjmp	.-6      	; 0x2ce <spi_tranceiver+0x2>
	return SPDR;											//Return received data
     2d4:	8e b5       	in	r24, 0x2e	; 46
}
     2d6:	08 95       	ret

000002d8 <recieve_mode>:


//Startar Recieve Mode
void recieve_mode(void)
{
	UCSR0B = (0<<TXEN0)|(1<<RXEN0);
     2d8:	80 e1       	ldi	r24, 0x10	; 16
     2da:	80 93 c1 00 	sts	0x00C1, r24
     2de:	08 95       	ret

000002e0 <send_mode>:
}

//Startar Send Mode
void send_mode(void)
{
	UCSR0B = (1<<TXEN0)|(0<<RXEN0);
     2e0:	88 e0       	ldi	r24, 0x08	; 8
     2e2:	80 93 c1 00 	sts	0x00C1, r24
     2e6:	08 95       	ret

000002e8 <uart_init>:
}

//Initiera UART
void uart_init(void)
{
	UBRR0H = (unsigned char)(BAUDRATE>>8);							//Skifta registret 8 bitar åt höger
     2e8:	8f ef       	ldi	r24, 0xFF	; 255
     2ea:	80 93 c5 00 	sts	0x00C5, r24
	UBRR0L = (unsigned char)BAUDRATE;								//Sätt baudrate
     2ee:	80 93 c4 00 	sts	0x00C4, r24
	UCSR0C = (0<<USBS0)|(1<<UCSZ00)|(1<<UCSZ01)|(0<<UPM01);			//Sätter 1 stoppbit, samt 8-bitars dataformat
     2f2:	86 e0       	ldi	r24, 0x06	; 6
     2f4:	80 93 c2 00 	sts	0x00C2, r24


//Startar Recieve Mode
void recieve_mode(void)
{
	UCSR0B = (0<<TXEN0)|(1<<RXEN0);
     2f8:	80 e1       	ldi	r24, 0x10	; 16
     2fa:	80 93 c1 00 	sts	0x00C1, r24
     2fe:	08 95       	ret

00000300 <uart_transmit>:
}

//Skicka med UART
void uart_transmit(unsigned char data)
{
	while(!(UCSR0A & (1<<UDRE0)));									//Väntar på att "transmit-buffern" ska bli tom genom att kolla UDREn-flaggan
     300:	e0 ec       	ldi	r30, 0xC0	; 192
     302:	f0 e0       	ldi	r31, 0x00	; 0
     304:	90 81       	ld	r25, Z
     306:	95 ff       	sbrs	r25, 5
     308:	fd cf       	rjmp	.-6      	; 0x304 <uart_transmit+0x4>
	UDR0 = data;												    //Ladda in datan i registret (UDR = Uart Data Register)
     30a:	80 93 c6 00 	sts	0x00C6, r24
     30e:	08 95       	ret

00000310 <stand>:
************************************************************************************************************/

//Funktion för att roboten ska ställa sig upp
void stand(void)
{
	reg_servo_angle(0, STAND_DEG_00);
     310:	40 e0       	ldi	r20, 0x00	; 0
     312:	50 e0       	ldi	r21, 0x00	; 0
     314:	66 e1       	ldi	r22, 0x16	; 22
     316:	73 e4       	ldi	r23, 0x43	; 67
     318:	80 e0       	ldi	r24, 0x00	; 0
     31a:	97 df       	rcall	.-210    	; 0x24a <reg_servo_angle>
	reg_servo_angle(3, STAND_DEG_03);
     31c:	40 e0       	ldi	r20, 0x00	; 0
     31e:	50 e0       	ldi	r21, 0x00	; 0
     320:	66 e1       	ldi	r22, 0x16	; 22
     322:	73 e4       	ldi	r23, 0x43	; 67
     324:	83 e0       	ldi	r24, 0x03	; 3
     326:	91 df       	rcall	.-222    	; 0x24a <reg_servo_angle>
	reg_servo_angle(6, STAND_DEG_06);
     328:	40 e0       	ldi	r20, 0x00	; 0
     32a:	50 e0       	ldi	r21, 0x00	; 0
     32c:	66 e1       	ldi	r22, 0x16	; 22
     32e:	73 e4       	ldi	r23, 0x43	; 67
     330:	86 e0       	ldi	r24, 0x06	; 6
     332:	8b df       	rcall	.-234    	; 0x24a <reg_servo_angle>
	reg_servo_angle(9, STAND_DEG_09);
     334:	40 e0       	ldi	r20, 0x00	; 0
     336:	50 e0       	ldi	r21, 0x00	; 0
     338:	66 e1       	ldi	r22, 0x16	; 22
     33a:	73 e4       	ldi	r23, 0x43	; 67
     33c:	89 e0       	ldi	r24, 0x09	; 9
     33e:	85 df       	rcall	.-246    	; 0x24a <reg_servo_angle>
	reg_servo_angle(12, STAND_DEG_12);
     340:	40 e0       	ldi	r20, 0x00	; 0
     342:	50 e0       	ldi	r21, 0x00	; 0
     344:	66 e1       	ldi	r22, 0x16	; 22
     346:	73 e4       	ldi	r23, 0x43	; 67
     348:	8c e0       	ldi	r24, 0x0C	; 12
     34a:	7f df       	rcall	.-258    	; 0x24a <reg_servo_angle>
	reg_servo_angle(15, STAND_DEG_15);
     34c:	40 e0       	ldi	r20, 0x00	; 0
     34e:	50 e0       	ldi	r21, 0x00	; 0
     350:	66 e1       	ldi	r22, 0x16	; 22
     352:	73 e4       	ldi	r23, 0x43	; 67
     354:	8f e0       	ldi	r24, 0x0F	; 15
     356:	79 df       	rcall	.-270    	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(1, STAND_DEG_01);
     358:	40 e0       	ldi	r20, 0x00	; 0
     35a:	50 e0       	ldi	r21, 0x00	; 0
     35c:	64 eb       	ldi	r22, 0xB4	; 180
     35e:	72 e4       	ldi	r23, 0x42	; 66
     360:	81 e0       	ldi	r24, 0x01	; 1
     362:	73 df       	rcall	.-282    	; 0x24a <reg_servo_angle>
	reg_servo_angle(4, STAND_DEG_04);
     364:	40 e0       	ldi	r20, 0x00	; 0
     366:	50 e0       	ldi	r21, 0x00	; 0
     368:	64 eb       	ldi	r22, 0xB4	; 180
     36a:	72 e4       	ldi	r23, 0x42	; 66
     36c:	84 e0       	ldi	r24, 0x04	; 4
     36e:	6d df       	rcall	.-294    	; 0x24a <reg_servo_angle>
	reg_servo_angle(7, STAND_DEG_07);
     370:	40 e0       	ldi	r20, 0x00	; 0
     372:	50 e0       	ldi	r21, 0x00	; 0
     374:	64 eb       	ldi	r22, 0xB4	; 180
     376:	72 e4       	ldi	r23, 0x42	; 66
     378:	87 e0       	ldi	r24, 0x07	; 7
     37a:	67 df       	rcall	.-306    	; 0x24a <reg_servo_angle>
	reg_servo_angle(10, STAND_DEG_10);
     37c:	40 e0       	ldi	r20, 0x00	; 0
     37e:	50 e0       	ldi	r21, 0x00	; 0
     380:	62 e5       	ldi	r22, 0x52	; 82
     382:	73 e4       	ldi	r23, 0x43	; 67
     384:	8a e0       	ldi	r24, 0x0A	; 10
     386:	61 df       	rcall	.-318    	; 0x24a <reg_servo_angle>
	reg_servo_angle(13, STAND_DEG_13);
     388:	40 e0       	ldi	r20, 0x00	; 0
     38a:	50 e0       	ldi	r21, 0x00	; 0
     38c:	62 e5       	ldi	r22, 0x52	; 82
     38e:	73 e4       	ldi	r23, 0x43	; 67
     390:	8d e0       	ldi	r24, 0x0D	; 13
     392:	5b df       	rcall	.-330    	; 0x24a <reg_servo_angle>
	reg_servo_angle(16, STAND_DEG_16);
     394:	40 e0       	ldi	r20, 0x00	; 0
     396:	50 e0       	ldi	r21, 0x00	; 0
     398:	62 e5       	ldi	r22, 0x52	; 82
     39a:	73 e4       	ldi	r23, 0x43	; 67
     39c:	80 e1       	ldi	r24, 0x10	; 16
     39e:	55 df       	rcall	.-342    	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(2, STAND_DEG_02);
     3a0:	40 e0       	ldi	r20, 0x00	; 0
     3a2:	50 e0       	ldi	r21, 0x00	; 0
     3a4:	66 e6       	ldi	r22, 0x66	; 102
     3a6:	73 e4       	ldi	r23, 0x43	; 67
     3a8:	82 e0       	ldi	r24, 0x02	; 2
     3aa:	4f df       	rcall	.-354    	; 0x24a <reg_servo_angle>
	reg_servo_angle(5, STAND_DEG_05);
     3ac:	40 e0       	ldi	r20, 0x00	; 0
     3ae:	50 e0       	ldi	r21, 0x00	; 0
     3b0:	66 e6       	ldi	r22, 0x66	; 102
     3b2:	73 e4       	ldi	r23, 0x43	; 67
     3b4:	85 e0       	ldi	r24, 0x05	; 5
     3b6:	49 df       	rcall	.-366    	; 0x24a <reg_servo_angle>
	reg_servo_angle(8, STAND_DEG_08);
     3b8:	40 e0       	ldi	r20, 0x00	; 0
     3ba:	50 e0       	ldi	r21, 0x00	; 0
     3bc:	66 e6       	ldi	r22, 0x66	; 102
     3be:	73 e4       	ldi	r23, 0x43	; 67
     3c0:	88 e0       	ldi	r24, 0x08	; 8
     3c2:	43 df       	rcall	.-378    	; 0x24a <reg_servo_angle>
	reg_servo_angle(11, STAND_DEG_11);
     3c4:	40 e0       	ldi	r20, 0x00	; 0
     3c6:	50 e0       	ldi	r21, 0x00	; 0
     3c8:	6c e8       	ldi	r22, 0x8C	; 140
     3ca:	72 e4       	ldi	r23, 0x42	; 66
     3cc:	8b e0       	ldi	r24, 0x0B	; 11
     3ce:	3d df       	rcall	.-390    	; 0x24a <reg_servo_angle>
	reg_servo_angle(14, STAND_DEG_14);
     3d0:	40 e0       	ldi	r20, 0x00	; 0
     3d2:	50 e0       	ldi	r21, 0x00	; 0
     3d4:	6c e8       	ldi	r22, 0x8C	; 140
     3d6:	72 e4       	ldi	r23, 0x42	; 66
     3d8:	8e e0       	ldi	r24, 0x0E	; 14
     3da:	37 df       	rcall	.-402    	; 0x24a <reg_servo_angle>
	reg_servo_angle(17, STAND_DEG_17);
     3dc:	40 e0       	ldi	r20, 0x00	; 0
     3de:	50 e0       	ldi	r21, 0x00	; 0
     3e0:	6c e8       	ldi	r22, 0x8C	; 140
     3e2:	72 e4       	ldi	r23, 0x42	; 66
     3e4:	81 e1       	ldi	r24, 0x11	; 17
     3e6:	31 df       	rcall	.-414    	; 0x24a <reg_servo_angle>
	action();
     3e8:	54 cf       	rjmp	.-344    	; 0x292 <action>
     3ea:	08 95       	ret

000003ec <one>:
//Funktioner som utgör gångstilarna för rörelse framåt och bakåt
void one(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 153);
     3ec:	40 e0       	ldi	r20, 0x00	; 0
     3ee:	50 e0       	ldi	r21, 0x00	; 0
     3f0:	69 e1       	ldi	r22, 0x19	; 25
     3f2:	73 e4       	ldi	r23, 0x43	; 67
     3f4:	86 e0       	ldi	r24, 0x06	; 6
     3f6:	29 df       	rcall	.-430    	; 0x24a <reg_servo_angle>
	reg_servo_angle(7, 92);
     3f8:	40 e0       	ldi	r20, 0x00	; 0
     3fa:	50 e0       	ldi	r21, 0x00	; 0
     3fc:	68 eb       	ldi	r22, 0xB8	; 184
     3fe:	72 e4       	ldi	r23, 0x42	; 66
     400:	87 e0       	ldi	r24, 0x07	; 7
     402:	23 df       	rcall	.-442    	; 0x24a <reg_servo_angle>
	reg_servo_angle(8, 227);
     404:	40 e0       	ldi	r20, 0x00	; 0
     406:	50 e0       	ldi	r21, 0x00	; 0
     408:	63 e6       	ldi	r22, 0x63	; 99
     40a:	73 e4       	ldi	r23, 0x43	; 67
     40c:	88 e0       	ldi	r24, 0x08	; 8
     40e:	1d df       	rcall	.-454    	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(9, 147);
     410:	40 e0       	ldi	r20, 0x00	; 0
     412:	50 e0       	ldi	r21, 0x00	; 0
     414:	63 e1       	ldi	r22, 0x13	; 19
     416:	73 e4       	ldi	r23, 0x43	; 67
     418:	89 e0       	ldi	r24, 0x09	; 9
     41a:	17 df       	rcall	.-466    	; 0x24a <reg_servo_angle>
	reg_servo_angle(10, 240);
     41c:	40 e0       	ldi	r20, 0x00	; 0
     41e:	50 e0       	ldi	r21, 0x00	; 0
     420:	60 e7       	ldi	r22, 0x70	; 112
     422:	73 e4       	ldi	r23, 0x43	; 67
     424:	8a e0       	ldi	r24, 0x0A	; 10
     426:	11 df       	rcall	.-478    	; 0x24a <reg_servo_angle>
	reg_servo_angle(11, 62);
     428:	40 e0       	ldi	r20, 0x00	; 0
     42a:	50 e0       	ldi	r21, 0x00	; 0
     42c:	68 e7       	ldi	r22, 0x78	; 120
     42e:	72 e4       	ldi	r23, 0x42	; 66
     430:	8b e0       	ldi	r24, 0x0B	; 11
     432:	0b df       	rcall	.-490    	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(3, 150);
     434:	40 e0       	ldi	r20, 0x00	; 0
     436:	50 e0       	ldi	r21, 0x00	; 0
     438:	66 e1       	ldi	r22, 0x16	; 22
     43a:	73 e4       	ldi	r23, 0x43	; 67
     43c:	83 e0       	ldi	r24, 0x03	; 3
     43e:	05 df       	rcall	.-502    	; 0x24a <reg_servo_angle>
	reg_servo_angle(4, 64);
     440:	40 e0       	ldi	r20, 0x00	; 0
     442:	50 e0       	ldi	r21, 0x00	; 0
     444:	60 e8       	ldi	r22, 0x80	; 128
     446:	72 e4       	ldi	r23, 0x42	; 66
     448:	84 e0       	ldi	r24, 0x04	; 4
     44a:	ff de       	rcall	.-514    	; 0x24a <reg_servo_angle>
	reg_servo_angle(5, 237);
     44c:	40 e0       	ldi	r20, 0x00	; 0
     44e:	50 e0       	ldi	r21, 0x00	; 0
     450:	6d e6       	ldi	r22, 0x6D	; 109
     452:	73 e4       	ldi	r23, 0x43	; 67
     454:	85 e0       	ldi	r24, 0x05	; 5
     456:	f9 de       	rcall	.-526    	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(12, 150);
     458:	40 e0       	ldi	r20, 0x00	; 0
     45a:	50 e0       	ldi	r21, 0x00	; 0
     45c:	66 e1       	ldi	r22, 0x16	; 22
     45e:	73 e4       	ldi	r23, 0x43	; 67
     460:	8c e0       	ldi	r24, 0x0C	; 12
     462:	f3 de       	rcall	.-538    	; 0x24a <reg_servo_angle>
	reg_servo_angle(13, 208);
     464:	40 e0       	ldi	r20, 0x00	; 0
     466:	50 e0       	ldi	r21, 0x00	; 0
     468:	60 e5       	ldi	r22, 0x50	; 80
     46a:	73 e4       	ldi	r23, 0x43	; 67
     46c:	8d e0       	ldi	r24, 0x0D	; 13
     46e:	ed de       	rcall	.-550    	; 0x24a <reg_servo_angle>
	reg_servo_angle(14, 73);
     470:	40 e0       	ldi	r20, 0x00	; 0
     472:	50 e0       	ldi	r21, 0x00	; 0
     474:	62 e9       	ldi	r22, 0x92	; 146
     476:	72 e4       	ldi	r23, 0x42	; 66
     478:	8e e0       	ldi	r24, 0x0E	; 14
     47a:	e7 de       	rcall	.-562    	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(0, 147);
     47c:	40 e0       	ldi	r20, 0x00	; 0
     47e:	50 e0       	ldi	r21, 0x00	; 0
     480:	63 e1       	ldi	r22, 0x13	; 19
     482:	73 e4       	ldi	r23, 0x43	; 67
     484:	80 e0       	ldi	r24, 0x00	; 0
     486:	e1 de       	rcall	.-574    	; 0x24a <reg_servo_angle>
	reg_servo_angle(1, 92);
     488:	40 e0       	ldi	r20, 0x00	; 0
     48a:	50 e0       	ldi	r21, 0x00	; 0
     48c:	68 eb       	ldi	r22, 0xB8	; 184
     48e:	72 e4       	ldi	r23, 0x42	; 66
     490:	81 e0       	ldi	r24, 0x01	; 1
     492:	db de       	rcall	.-586    	; 0x24a <reg_servo_angle>
	reg_servo_angle(2, 227);
     494:	40 e0       	ldi	r20, 0x00	; 0
     496:	50 e0       	ldi	r21, 0x00	; 0
     498:	63 e6       	ldi	r22, 0x63	; 99
     49a:	73 e4       	ldi	r23, 0x43	; 67
     49c:	82 e0       	ldi	r24, 0x02	; 2
     49e:	d5 de       	rcall	.-598    	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(15, 153);
     4a0:	40 e0       	ldi	r20, 0x00	; 0
     4a2:	50 e0       	ldi	r21, 0x00	; 0
     4a4:	69 e1       	ldi	r22, 0x19	; 25
     4a6:	73 e4       	ldi	r23, 0x43	; 67
     4a8:	8f e0       	ldi	r24, 0x0F	; 15
     4aa:	cf de       	rcall	.-610    	; 0x24a <reg_servo_angle>
	reg_servo_angle(16, 240);
     4ac:	40 e0       	ldi	r20, 0x00	; 0
     4ae:	50 e0       	ldi	r21, 0x00	; 0
     4b0:	60 e7       	ldi	r22, 0x70	; 112
     4b2:	73 e4       	ldi	r23, 0x43	; 67
     4b4:	80 e1       	ldi	r24, 0x10	; 16
     4b6:	c9 de       	rcall	.-622    	; 0x24a <reg_servo_angle>
	reg_servo_angle(17, 62);
     4b8:	40 e0       	ldi	r20, 0x00	; 0
     4ba:	50 e0       	ldi	r21, 0x00	; 0
     4bc:	68 e7       	ldi	r22, 0x78	; 120
     4be:	72 e4       	ldi	r23, 0x42	; 66
     4c0:	81 e1       	ldi	r24, 0x11	; 17
     4c2:	c3 de       	rcall	.-634    	; 0x24a <reg_servo_angle>
     4c4:	8b e7       	ldi	r24, 0x7B	; 123
     4c6:	92 e9       	ldi	r25, 0x92	; 146
     4c8:	01 97       	sbiw	r24, 0x01	; 1
     4ca:	f1 f7       	brne	.-4      	; 0x4c8 <one+0xdc>
     4cc:	00 c0       	rjmp	.+0      	; 0x4ce <one+0xe2>
     4ce:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     4d0:	e0 ce       	rjmp	.-576    	; 0x292 <action>
     4d2:	08 95       	ret

000004d4 <two>:

void two(void)
{
	int scale = 3;

	reg_servo_angle(6, 147);
     4d4:	40 e0       	ldi	r20, 0x00	; 0
     4d6:	50 e0       	ldi	r21, 0x00	; 0
     4d8:	63 e1       	ldi	r22, 0x13	; 19
     4da:	73 e4       	ldi	r23, 0x43	; 67
     4dc:	86 e0       	ldi	r24, 0x06	; 6
     4de:	b5 de       	rcall	.-662    	; 0x24a <reg_servo_angle>
	reg_servo_angle(7, 87);
     4e0:	40 e0       	ldi	r20, 0x00	; 0
     4e2:	50 e0       	ldi	r21, 0x00	; 0
     4e4:	6e ea       	ldi	r22, 0xAE	; 174
     4e6:	72 e4       	ldi	r23, 0x42	; 66
     4e8:	87 e0       	ldi	r24, 0x07	; 7
     4ea:	af de       	rcall	.-674    	; 0x24a <reg_servo_angle>
	reg_servo_angle(8, 237);
     4ec:	40 e0       	ldi	r20, 0x00	; 0
     4ee:	50 e0       	ldi	r21, 0x00	; 0
     4f0:	6d e6       	ldi	r22, 0x6D	; 109
     4f2:	73 e4       	ldi	r23, 0x43	; 67
     4f4:	88 e0       	ldi	r24, 0x08	; 8
     4f6:	a9 de       	rcall	.-686    	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(9, 143);
     4f8:	40 e0       	ldi	r20, 0x00	; 0
     4fa:	50 e0       	ldi	r21, 0x00	; 0
     4fc:	6f e0       	ldi	r22, 0x0F	; 15
     4fe:	73 e4       	ldi	r23, 0x43	; 67
     500:	89 e0       	ldi	r24, 0x09	; 9
     502:	a3 de       	rcall	.-698    	; 0x24a <reg_servo_angle>
	reg_servo_angle(10, 235);
     504:	40 e0       	ldi	r20, 0x00	; 0
     506:	50 e0       	ldi	r21, 0x00	; 0
     508:	6b e6       	ldi	r22, 0x6B	; 107
     50a:	73 e4       	ldi	r23, 0x43	; 67
     50c:	8a e0       	ldi	r24, 0x0A	; 10
     50e:	9d de       	rcall	.-710    	; 0x24a <reg_servo_angle>
	reg_servo_angle(11, 74);
     510:	40 e0       	ldi	r20, 0x00	; 0
     512:	50 e0       	ldi	r21, 0x00	; 0
     514:	64 e9       	ldi	r22, 0x94	; 148
     516:	72 e4       	ldi	r23, 0x42	; 66
     518:	8b e0       	ldi	r24, 0x0B	; 11
     51a:	97 de       	rcall	.-722    	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(3, 158);
     51c:	40 e0       	ldi	r20, 0x00	; 0
     51e:	50 e0       	ldi	r21, 0x00	; 0
     520:	6e e1       	ldi	r22, 0x1E	; 30
     522:	73 e4       	ldi	r23, 0x43	; 67
     524:	83 e0       	ldi	r24, 0x03	; 3
     526:	91 de       	rcall	.-734    	; 0x24a <reg_servo_angle>
	reg_servo_angle(4, 70);
     528:	40 e0       	ldi	r20, 0x00	; 0
     52a:	50 e0       	ldi	r21, 0x00	; 0
     52c:	6c e8       	ldi	r22, 0x8C	; 140
     52e:	72 e4       	ldi	r23, 0x42	; 66
     530:	84 e0       	ldi	r24, 0x04	; 4
     532:	8b de       	rcall	.-746    	; 0x24a <reg_servo_angle>
	reg_servo_angle(5, 236);
     534:	40 e0       	ldi	r20, 0x00	; 0
     536:	50 e0       	ldi	r21, 0x00	; 0
     538:	6c e6       	ldi	r22, 0x6C	; 108
     53a:	73 e4       	ldi	r23, 0x43	; 67
     53c:	85 e0       	ldi	r24, 0x05	; 5
     53e:	85 de       	rcall	.-758    	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(12, 158);
     540:	40 e0       	ldi	r20, 0x00	; 0
     542:	50 e0       	ldi	r21, 0x00	; 0
     544:	6e e1       	ldi	r22, 0x1E	; 30
     546:	73 e4       	ldi	r23, 0x43	; 67
     548:	8c e0       	ldi	r24, 0x0C	; 12
     54a:	7f de       	rcall	.-770    	; 0x24a <reg_servo_angle>
	reg_servo_angle(13, 207);
     54c:	40 e0       	ldi	r20, 0x00	; 0
     54e:	50 e0       	ldi	r21, 0x00	; 0
     550:	6f e4       	ldi	r22, 0x4F	; 79
     552:	73 e4       	ldi	r23, 0x43	; 67
     554:	8d e0       	ldi	r24, 0x0D	; 13
     556:	79 de       	rcall	.-782    	; 0x24a <reg_servo_angle>
	reg_servo_angle(14, 74);
     558:	40 e0       	ldi	r20, 0x00	; 0
     55a:	50 e0       	ldi	r21, 0x00	; 0
     55c:	64 e9       	ldi	r22, 0x94	; 148
     55e:	72 e4       	ldi	r23, 0x42	; 66
     560:	8e e0       	ldi	r24, 0x0E	; 14
     562:	73 de       	rcall	.-794    	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(0, 143);
     564:	40 e0       	ldi	r20, 0x00	; 0
     566:	50 e0       	ldi	r21, 0x00	; 0
     568:	6f e0       	ldi	r22, 0x0F	; 15
     56a:	73 e4       	ldi	r23, 0x43	; 67
     56c:	80 e0       	ldi	r24, 0x00	; 0
     56e:	6d de       	rcall	.-806    	; 0x24a <reg_servo_angle>
	reg_servo_angle(1, 97);
     570:	40 e0       	ldi	r20, 0x00	; 0
     572:	50 e0       	ldi	r21, 0x00	; 0
     574:	62 ec       	ldi	r22, 0xC2	; 194
     576:	72 e4       	ldi	r23, 0x42	; 66
     578:	81 e0       	ldi	r24, 0x01	; 1
     57a:	67 de       	rcall	.-818    	; 0x24a <reg_servo_angle>
	reg_servo_angle(2, 217);
     57c:	40 e0       	ldi	r20, 0x00	; 0
     57e:	50 e0       	ldi	r21, 0x00	; 0
     580:	69 e5       	ldi	r22, 0x59	; 89
     582:	73 e4       	ldi	r23, 0x43	; 67
     584:	82 e0       	ldi	r24, 0x02	; 2
     586:	61 de       	rcall	.-830    	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(15, 147);
     588:	40 e0       	ldi	r20, 0x00	; 0
     58a:	50 e0       	ldi	r21, 0x00	; 0
     58c:	63 e1       	ldi	r22, 0x13	; 19
     58e:	73 e4       	ldi	r23, 0x43	; 67
     590:	8f e0       	ldi	r24, 0x0F	; 15
     592:	5b de       	rcall	.-842    	; 0x24a <reg_servo_angle>
	reg_servo_angle(16, 240);
     594:	40 e0       	ldi	r20, 0x00	; 0
     596:	50 e0       	ldi	r21, 0x00	; 0
     598:	60 e7       	ldi	r22, 0x70	; 112
     59a:	73 e4       	ldi	r23, 0x43	; 67
     59c:	80 e1       	ldi	r24, 0x10	; 16
     59e:	55 de       	rcall	.-854    	; 0x24a <reg_servo_angle>
	reg_servo_angle(17, 60);
     5a0:	40 e0       	ldi	r20, 0x00	; 0
     5a2:	50 e0       	ldi	r21, 0x00	; 0
     5a4:	60 e7       	ldi	r22, 0x70	; 112
     5a6:	72 e4       	ldi	r23, 0x42	; 66
     5a8:	81 e1       	ldi	r24, 0x11	; 17
     5aa:	4f de       	rcall	.-866    	; 0x24a <reg_servo_angle>
     5ac:	8b e7       	ldi	r24, 0x7B	; 123
     5ae:	92 e9       	ldi	r25, 0x92	; 146
     5b0:	01 97       	sbiw	r24, 0x01	; 1
     5b2:	f1 f7       	brne	.-4      	; 0x5b0 <two+0xdc>
     5b4:	00 c0       	rjmp	.+0      	; 0x5b6 <two+0xe2>
     5b6:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     5b8:	6c ce       	rjmp	.-808    	; 0x292 <action>
     5ba:	08 95       	ret

000005bc <three>:

void three(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 147);
     5bc:	40 e0       	ldi	r20, 0x00	; 0
     5be:	50 e0       	ldi	r21, 0x00	; 0
     5c0:	63 e1       	ldi	r22, 0x13	; 19
     5c2:	73 e4       	ldi	r23, 0x43	; 67
     5c4:	86 e0       	ldi	r24, 0x06	; 6
     5c6:	41 de       	rcall	.-894    	; 0x24a <reg_servo_angle>
	reg_servo_angle(7, 87);
     5c8:	40 e0       	ldi	r20, 0x00	; 0
     5ca:	50 e0       	ldi	r21, 0x00	; 0
     5cc:	6e ea       	ldi	r22, 0xAE	; 174
     5ce:	72 e4       	ldi	r23, 0x42	; 66
     5d0:	87 e0       	ldi	r24, 0x07	; 7
     5d2:	3b de       	rcall	.-906    	; 0x24a <reg_servo_angle>
	reg_servo_angle(8, 237);
     5d4:	40 e0       	ldi	r20, 0x00	; 0
     5d6:	50 e0       	ldi	r21, 0x00	; 0
     5d8:	6d e6       	ldi	r22, 0x6D	; 109
     5da:	73 e4       	ldi	r23, 0x43	; 67
     5dc:	88 e0       	ldi	r24, 0x08	; 8
     5de:	35 de       	rcall	.-918    	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(9, 143);
     5e0:	40 e0       	ldi	r20, 0x00	; 0
     5e2:	50 e0       	ldi	r21, 0x00	; 0
     5e4:	6f e0       	ldi	r22, 0x0F	; 15
     5e6:	73 e4       	ldi	r23, 0x43	; 67
     5e8:	89 e0       	ldi	r24, 0x09	; 9
     5ea:	2f de       	rcall	.-930    	; 0x24a <reg_servo_angle>
	reg_servo_angle(10, 203);
     5ec:	40 e0       	ldi	r20, 0x00	; 0
     5ee:	50 e0       	ldi	r21, 0x00	; 0
     5f0:	6b e4       	ldi	r22, 0x4B	; 75
     5f2:	73 e4       	ldi	r23, 0x43	; 67
     5f4:	8a e0       	ldi	r24, 0x0A	; 10
     5f6:	29 de       	rcall	.-942    	; 0x24a <reg_servo_angle>
	reg_servo_angle(11, 83);
     5f8:	40 e0       	ldi	r20, 0x00	; 0
     5fa:	50 e0       	ldi	r21, 0x00	; 0
     5fc:	66 ea       	ldi	r22, 0xA6	; 166
     5fe:	72 e4       	ldi	r23, 0x42	; 66
     600:	8b e0       	ldi	r24, 0x0B	; 11
     602:	23 de       	rcall	.-954    	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(3, 158);
     604:	40 e0       	ldi	r20, 0x00	; 0
     606:	50 e0       	ldi	r21, 0x00	; 0
     608:	6e e1       	ldi	r22, 0x1E	; 30
     60a:	73 e4       	ldi	r23, 0x43	; 67
     60c:	83 e0       	ldi	r24, 0x03	; 3
     60e:	1d de       	rcall	.-966    	; 0x24a <reg_servo_angle>
	reg_servo_angle(4, 93);
     610:	40 e0       	ldi	r20, 0x00	; 0
     612:	50 e0       	ldi	r21, 0x00	; 0
     614:	6a eb       	ldi	r22, 0xBA	; 186
     616:	72 e4       	ldi	r23, 0x42	; 66
     618:	84 e0       	ldi	r24, 0x04	; 4
     61a:	17 de       	rcall	.-978    	; 0x24a <reg_servo_angle>
	reg_servo_angle(5, 226);
     61c:	40 e0       	ldi	r20, 0x00	; 0
     61e:	50 e0       	ldi	r21, 0x00	; 0
     620:	62 e6       	ldi	r22, 0x62	; 98
     622:	73 e4       	ldi	r23, 0x43	; 67
     624:	85 e0       	ldi	r24, 0x05	; 5
     626:	11 de       	rcall	.-990    	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(12, 158);
     628:	40 e0       	ldi	r20, 0x00	; 0
     62a:	50 e0       	ldi	r21, 0x00	; 0
     62c:	6e e1       	ldi	r22, 0x1E	; 30
     62e:	73 e4       	ldi	r23, 0x43	; 67
     630:	8c e0       	ldi	r24, 0x0C	; 12
     632:	0b de       	rcall	.-1002   	; 0x24a <reg_servo_angle>
	reg_servo_angle(13, 207);
     634:	40 e0       	ldi	r20, 0x00	; 0
     636:	50 e0       	ldi	r21, 0x00	; 0
     638:	6f e4       	ldi	r22, 0x4F	; 79
     63a:	73 e4       	ldi	r23, 0x43	; 67
     63c:	8d e0       	ldi	r24, 0x0D	; 13
     63e:	05 de       	rcall	.-1014   	; 0x24a <reg_servo_angle>
	reg_servo_angle(14, 74);
     640:	40 e0       	ldi	r20, 0x00	; 0
     642:	50 e0       	ldi	r21, 0x00	; 0
     644:	64 e9       	ldi	r22, 0x94	; 148
     646:	72 e4       	ldi	r23, 0x42	; 66
     648:	8e e0       	ldi	r24, 0x0E	; 14
     64a:	ff dd       	rcall	.-1026   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(0, 143);
     64c:	40 e0       	ldi	r20, 0x00	; 0
     64e:	50 e0       	ldi	r21, 0x00	; 0
     650:	6f e0       	ldi	r22, 0x0F	; 15
     652:	73 e4       	ldi	r23, 0x43	; 67
     654:	80 e0       	ldi	r24, 0x00	; 0
     656:	f9 dd       	rcall	.-1038   	; 0x24a <reg_servo_angle>
	reg_servo_angle(1, 97);
     658:	40 e0       	ldi	r20, 0x00	; 0
     65a:	50 e0       	ldi	r21, 0x00	; 0
     65c:	62 ec       	ldi	r22, 0xC2	; 194
     65e:	72 e4       	ldi	r23, 0x42	; 66
     660:	81 e0       	ldi	r24, 0x01	; 1
     662:	f3 dd       	rcall	.-1050   	; 0x24a <reg_servo_angle>
	reg_servo_angle(2, 217);
     664:	40 e0       	ldi	r20, 0x00	; 0
     666:	50 e0       	ldi	r21, 0x00	; 0
     668:	69 e5       	ldi	r22, 0x59	; 89
     66a:	73 e4       	ldi	r23, 0x43	; 67
     66c:	82 e0       	ldi	r24, 0x02	; 2
     66e:	ed dd       	rcall	.-1062   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(15, 147);
     670:	40 e0       	ldi	r20, 0x00	; 0
     672:	50 e0       	ldi	r21, 0x00	; 0
     674:	63 e1       	ldi	r22, 0x13	; 19
     676:	73 e4       	ldi	r23, 0x43	; 67
     678:	8f e0       	ldi	r24, 0x0F	; 15
     67a:	e7 dd       	rcall	.-1074   	; 0x24a <reg_servo_angle>
	reg_servo_angle(16, 213);
     67c:	40 e0       	ldi	r20, 0x00	; 0
     67e:	50 e0       	ldi	r21, 0x00	; 0
     680:	65 e5       	ldi	r22, 0x55	; 85
     682:	73 e4       	ldi	r23, 0x43	; 67
     684:	80 e1       	ldi	r24, 0x10	; 16
     686:	e1 dd       	rcall	.-1086   	; 0x24a <reg_servo_angle>
	reg_servo_angle(17, 63);
     688:	40 e0       	ldi	r20, 0x00	; 0
     68a:	50 e0       	ldi	r21, 0x00	; 0
     68c:	6c e7       	ldi	r22, 0x7C	; 124
     68e:	72 e4       	ldi	r23, 0x42	; 66
     690:	81 e1       	ldi	r24, 0x11	; 17
     692:	db dd       	rcall	.-1098   	; 0x24a <reg_servo_angle>
     694:	8b e7       	ldi	r24, 0x7B	; 123
     696:	92 e9       	ldi	r25, 0x92	; 146
     698:	01 97       	sbiw	r24, 0x01	; 1
     69a:	f1 f7       	brne	.-4      	; 0x698 <three+0xdc>
     69c:	00 c0       	rjmp	.+0      	; 0x69e <three+0xe2>
     69e:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     6a0:	f8 cd       	rjmp	.-1040   	; 0x292 <action>
     6a2:	08 95       	ret

000006a4 <four>:

void four(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 147);
     6a4:	40 e0       	ldi	r20, 0x00	; 0
     6a6:	50 e0       	ldi	r21, 0x00	; 0
     6a8:	63 e1       	ldi	r22, 0x13	; 19
     6aa:	73 e4       	ldi	r23, 0x43	; 67
     6ac:	86 e0       	ldi	r24, 0x06	; 6
     6ae:	cd dd       	rcall	.-1126   	; 0x24a <reg_servo_angle>
	reg_servo_angle(7, 60);
     6b0:	40 e0       	ldi	r20, 0x00	; 0
     6b2:	50 e0       	ldi	r21, 0x00	; 0
     6b4:	60 e7       	ldi	r22, 0x70	; 112
     6b6:	72 e4       	ldi	r23, 0x42	; 66
     6b8:	87 e0       	ldi	r24, 0x07	; 7
     6ba:	c7 dd       	rcall	.-1138   	; 0x24a <reg_servo_angle>
	reg_servo_angle(8, 240);
     6bc:	40 e0       	ldi	r20, 0x00	; 0
     6be:	50 e0       	ldi	r21, 0x00	; 0
     6c0:	60 e7       	ldi	r22, 0x70	; 112
     6c2:	73 e4       	ldi	r23, 0x43	; 67
     6c4:	88 e0       	ldi	r24, 0x08	; 8
     6c6:	c1 dd       	rcall	.-1150   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(9, 143);
     6c8:	40 e0       	ldi	r20, 0x00	; 0
     6ca:	50 e0       	ldi	r21, 0x00	; 0
     6cc:	6f e0       	ldi	r22, 0x0F	; 15
     6ce:	73 e4       	ldi	r23, 0x43	; 67
     6d0:	89 e0       	ldi	r24, 0x09	; 9
     6d2:	bb dd       	rcall	.-1162   	; 0x24a <reg_servo_angle>
	reg_servo_angle(10, 203);
     6d4:	40 e0       	ldi	r20, 0x00	; 0
     6d6:	50 e0       	ldi	r21, 0x00	; 0
     6d8:	6b e4       	ldi	r22, 0x4B	; 75
     6da:	73 e4       	ldi	r23, 0x43	; 67
     6dc:	8a e0       	ldi	r24, 0x0A	; 10
     6de:	b5 dd       	rcall	.-1174   	; 0x24a <reg_servo_angle>
	reg_servo_angle(11, 83);
     6e0:	40 e0       	ldi	r20, 0x00	; 0
     6e2:	50 e0       	ldi	r21, 0x00	; 0
     6e4:	66 ea       	ldi	r22, 0xA6	; 166
     6e6:	72 e4       	ldi	r23, 0x42	; 66
     6e8:	8b e0       	ldi	r24, 0x0B	; 11
     6ea:	af dd       	rcall	.-1186   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(3, 158);
     6ec:	40 e0       	ldi	r20, 0x00	; 0
     6ee:	50 e0       	ldi	r21, 0x00	; 0
     6f0:	6e e1       	ldi	r22, 0x1E	; 30
     6f2:	73 e4       	ldi	r23, 0x43	; 67
     6f4:	83 e0       	ldi	r24, 0x03	; 3
     6f6:	a9 dd       	rcall	.-1198   	; 0x24a <reg_servo_angle>
	reg_servo_angle(4, 93);
     6f8:	40 e0       	ldi	r20, 0x00	; 0
     6fa:	50 e0       	ldi	r21, 0x00	; 0
     6fc:	6a eb       	ldi	r22, 0xBA	; 186
     6fe:	72 e4       	ldi	r23, 0x42	; 66
     700:	84 e0       	ldi	r24, 0x04	; 4
     702:	a3 dd       	rcall	.-1210   	; 0x24a <reg_servo_angle>
	reg_servo_angle(5, 226);
     704:	40 e0       	ldi	r20, 0x00	; 0
     706:	50 e0       	ldi	r21, 0x00	; 0
     708:	62 e6       	ldi	r22, 0x62	; 98
     70a:	73 e4       	ldi	r23, 0x43	; 67
     70c:	85 e0       	ldi	r24, 0x05	; 5
     70e:	9d dd       	rcall	.-1222   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(12, 158);
     710:	40 e0       	ldi	r20, 0x00	; 0
     712:	50 e0       	ldi	r21, 0x00	; 0
     714:	6e e1       	ldi	r22, 0x1E	; 30
     716:	73 e4       	ldi	r23, 0x43	; 67
     718:	8c e0       	ldi	r24, 0x0C	; 12
     71a:	97 dd       	rcall	.-1234   	; 0x24a <reg_servo_angle>
	reg_servo_angle(13, 234);
     71c:	40 e0       	ldi	r20, 0x00	; 0
     71e:	50 e0       	ldi	r21, 0x00	; 0
     720:	6a e6       	ldi	r22, 0x6A	; 106
     722:	73 e4       	ldi	r23, 0x43	; 67
     724:	8d e0       	ldi	r24, 0x0D	; 13
     726:	91 dd       	rcall	.-1246   	; 0x24a <reg_servo_angle>
	reg_servo_angle(14, 64);
     728:	40 e0       	ldi	r20, 0x00	; 0
     72a:	50 e0       	ldi	r21, 0x00	; 0
     72c:	60 e8       	ldi	r22, 0x80	; 128
     72e:	72 e4       	ldi	r23, 0x42	; 66
     730:	8e e0       	ldi	r24, 0x0E	; 14
     732:	8b dd       	rcall	.-1258   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(0, 143);
     734:	40 e0       	ldi	r20, 0x00	; 0
     736:	50 e0       	ldi	r21, 0x00	; 0
     738:	6f e0       	ldi	r22, 0x0F	; 15
     73a:	73 e4       	ldi	r23, 0x43	; 67
     73c:	80 e0       	ldi	r24, 0x00	; 0
     73e:	85 dd       	rcall	.-1270   	; 0x24a <reg_servo_angle>
	reg_servo_angle(1, 60);
     740:	40 e0       	ldi	r20, 0x00	; 0
     742:	50 e0       	ldi	r21, 0x00	; 0
     744:	60 e7       	ldi	r22, 0x70	; 112
     746:	72 e4       	ldi	r23, 0x42	; 66
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	7f dd       	rcall	.-1282   	; 0x24a <reg_servo_angle>
	reg_servo_angle(2, 226);
     74c:	40 e0       	ldi	r20, 0x00	; 0
     74e:	50 e0       	ldi	r21, 0x00	; 0
     750:	62 e6       	ldi	r22, 0x62	; 98
     752:	73 e4       	ldi	r23, 0x43	; 67
     754:	82 e0       	ldi	r24, 0x02	; 2
     756:	79 dd       	rcall	.-1294   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(15, 147);
     758:	40 e0       	ldi	r20, 0x00	; 0
     75a:	50 e0       	ldi	r21, 0x00	; 0
     75c:	63 e1       	ldi	r22, 0x13	; 19
     75e:	73 e4       	ldi	r23, 0x43	; 67
     760:	8f e0       	ldi	r24, 0x0F	; 15
     762:	73 dd       	rcall	.-1306   	; 0x24a <reg_servo_angle>
	reg_servo_angle(16, 213);
     764:	40 e0       	ldi	r20, 0x00	; 0
     766:	50 e0       	ldi	r21, 0x00	; 0
     768:	65 e5       	ldi	r22, 0x55	; 85
     76a:	73 e4       	ldi	r23, 0x43	; 67
     76c:	80 e1       	ldi	r24, 0x10	; 16
     76e:	6d dd       	rcall	.-1318   	; 0x24a <reg_servo_angle>
	reg_servo_angle(17, 63);
     770:	40 e0       	ldi	r20, 0x00	; 0
     772:	50 e0       	ldi	r21, 0x00	; 0
     774:	6c e7       	ldi	r22, 0x7C	; 124
     776:	72 e4       	ldi	r23, 0x42	; 66
     778:	81 e1       	ldi	r24, 0x11	; 17
     77a:	67 dd       	rcall	.-1330   	; 0x24a <reg_servo_angle>
     77c:	8b e7       	ldi	r24, 0x7B	; 123
     77e:	92 e9       	ldi	r25, 0x92	; 146
     780:	01 97       	sbiw	r24, 0x01	; 1
     782:	f1 f7       	brne	.-4      	; 0x780 <four+0xdc>
     784:	00 c0       	rjmp	.+0      	; 0x786 <four+0xe2>
     786:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     788:	84 cd       	rjmp	.-1272   	; 0x292 <action>
     78a:	08 95       	ret

0000078c <five>:

void five(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 153);
     78c:	40 e0       	ldi	r20, 0x00	; 0
     78e:	50 e0       	ldi	r21, 0x00	; 0
     790:	69 e1       	ldi	r22, 0x19	; 25
     792:	73 e4       	ldi	r23, 0x43	; 67
     794:	86 e0       	ldi	r24, 0x06	; 6
     796:	59 dd       	rcall	.-1358   	; 0x24a <reg_servo_angle>
	reg_servo_angle(7, 60);
     798:	40 e0       	ldi	r20, 0x00	; 0
     79a:	50 e0       	ldi	r21, 0x00	; 0
     79c:	60 e7       	ldi	r22, 0x70	; 112
     79e:	72 e4       	ldi	r23, 0x42	; 66
     7a0:	87 e0       	ldi	r24, 0x07	; 7
     7a2:	53 dd       	rcall	.-1370   	; 0x24a <reg_servo_angle>
	reg_servo_angle(8, 238);
     7a4:	40 e0       	ldi	r20, 0x00	; 0
     7a6:	50 e0       	ldi	r21, 0x00	; 0
     7a8:	6e e6       	ldi	r22, 0x6E	; 110
     7aa:	73 e4       	ldi	r23, 0x43	; 67
     7ac:	88 e0       	ldi	r24, 0x08	; 8
     7ae:	4d dd       	rcall	.-1382   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(9, 147);
     7b0:	40 e0       	ldi	r20, 0x00	; 0
     7b2:	50 e0       	ldi	r21, 0x00	; 0
     7b4:	63 e1       	ldi	r22, 0x13	; 19
     7b6:	73 e4       	ldi	r23, 0x43	; 67
     7b8:	89 e0       	ldi	r24, 0x09	; 9
     7ba:	47 dd       	rcall	.-1394   	; 0x24a <reg_servo_angle>
	reg_servo_angle(10, 208);
     7bc:	40 e0       	ldi	r20, 0x00	; 0
     7be:	50 e0       	ldi	r21, 0x00	; 0
     7c0:	60 e5       	ldi	r22, 0x50	; 80
     7c2:	73 e4       	ldi	r23, 0x43	; 67
     7c4:	8a e0       	ldi	r24, 0x0A	; 10
     7c6:	41 dd       	rcall	.-1406   	; 0x24a <reg_servo_angle>
	reg_servo_angle(11, 73);
     7c8:	40 e0       	ldi	r20, 0x00	; 0
     7ca:	50 e0       	ldi	r21, 0x00	; 0
     7cc:	62 e9       	ldi	r22, 0x92	; 146
     7ce:	72 e4       	ldi	r23, 0x42	; 66
     7d0:	8b e0       	ldi	r24, 0x0B	; 11
     7d2:	3b dd       	rcall	.-1418   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(3, 150);
     7d4:	40 e0       	ldi	r20, 0x00	; 0
     7d6:	50 e0       	ldi	r21, 0x00	; 0
     7d8:	66 e1       	ldi	r22, 0x16	; 22
     7da:	73 e4       	ldi	r23, 0x43	; 67
     7dc:	83 e0       	ldi	r24, 0x03	; 3
     7de:	35 dd       	rcall	.-1430   	; 0x24a <reg_servo_angle>
	reg_servo_angle(4, 92);
     7e0:	40 e0       	ldi	r20, 0x00	; 0
     7e2:	50 e0       	ldi	r21, 0x00	; 0
     7e4:	68 eb       	ldi	r22, 0xB8	; 184
     7e6:	72 e4       	ldi	r23, 0x42	; 66
     7e8:	84 e0       	ldi	r24, 0x04	; 4
     7ea:	2f dd       	rcall	.-1442   	; 0x24a <reg_servo_angle>
	reg_servo_angle(5, 227);
     7ec:	40 e0       	ldi	r20, 0x00	; 0
     7ee:	50 e0       	ldi	r21, 0x00	; 0
     7f0:	63 e6       	ldi	r22, 0x63	; 99
     7f2:	73 e4       	ldi	r23, 0x43	; 67
     7f4:	85 e0       	ldi	r24, 0x05	; 5
     7f6:	29 dd       	rcall	.-1454   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(12, 150);
     7f8:	40 e0       	ldi	r20, 0x00	; 0
     7fa:	50 e0       	ldi	r21, 0x00	; 0
     7fc:	66 e1       	ldi	r22, 0x16	; 22
     7fe:	73 e4       	ldi	r23, 0x43	; 67
     800:	8c e0       	ldi	r24, 0x0C	; 12
     802:	23 dd       	rcall	.-1466   	; 0x24a <reg_servo_angle>
	reg_servo_angle(13, 235);
     804:	40 e0       	ldi	r20, 0x00	; 0
     806:	50 e0       	ldi	r21, 0x00	; 0
     808:	6b e6       	ldi	r22, 0x6B	; 107
     80a:	73 e4       	ldi	r23, 0x43	; 67
     80c:	8d e0       	ldi	r24, 0x0D	; 13
     80e:	1d dd       	rcall	.-1478   	; 0x24a <reg_servo_angle>
	reg_servo_angle(14, 63);
     810:	40 e0       	ldi	r20, 0x00	; 0
     812:	50 e0       	ldi	r21, 0x00	; 0
     814:	6c e7       	ldi	r22, 0x7C	; 124
     816:	72 e4       	ldi	r23, 0x42	; 66
     818:	8e e0       	ldi	r24, 0x0E	; 14
     81a:	17 dd       	rcall	.-1490   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(0, 147);
     81c:	40 e0       	ldi	r20, 0x00	; 0
     81e:	50 e0       	ldi	r21, 0x00	; 0
     820:	63 e1       	ldi	r22, 0x13	; 19
     822:	73 e4       	ldi	r23, 0x43	; 67
     824:	80 e0       	ldi	r24, 0x00	; 0
     826:	11 dd       	rcall	.-1502   	; 0x24a <reg_servo_angle>
	reg_servo_angle(1, 60);
     828:	40 e0       	ldi	r20, 0x00	; 0
     82a:	50 e0       	ldi	r21, 0x00	; 0
     82c:	60 e7       	ldi	r22, 0x70	; 112
     82e:	72 e4       	ldi	r23, 0x42	; 66
     830:	81 e0       	ldi	r24, 0x01	; 1
     832:	0b dd       	rcall	.-1514   	; 0x24a <reg_servo_angle>
	reg_servo_angle(2, 238);
     834:	40 e0       	ldi	r20, 0x00	; 0
     836:	50 e0       	ldi	r21, 0x00	; 0
     838:	6e e6       	ldi	r22, 0x6E	; 110
     83a:	73 e4       	ldi	r23, 0x43	; 67
     83c:	82 e0       	ldi	r24, 0x02	; 2
     83e:	05 dd       	rcall	.-1526   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(15, 153);
     840:	40 e0       	ldi	r20, 0x00	; 0
     842:	50 e0       	ldi	r21, 0x00	; 0
     844:	69 e1       	ldi	r22, 0x19	; 25
     846:	73 e4       	ldi	r23, 0x43	; 67
     848:	8f e0       	ldi	r24, 0x0F	; 15
     84a:	ff dc       	rcall	.-1538   	; 0x24a <reg_servo_angle>
	reg_servo_angle(16, 208);
     84c:	40 e0       	ldi	r20, 0x00	; 0
     84e:	50 e0       	ldi	r21, 0x00	; 0
     850:	60 e5       	ldi	r22, 0x50	; 80
     852:	73 e4       	ldi	r23, 0x43	; 67
     854:	80 e1       	ldi	r24, 0x10	; 16
     856:	f9 dc       	rcall	.-1550   	; 0x24a <reg_servo_angle>
	reg_servo_angle(17, 73);
     858:	40 e0       	ldi	r20, 0x00	; 0
     85a:	50 e0       	ldi	r21, 0x00	; 0
     85c:	62 e9       	ldi	r22, 0x92	; 146
     85e:	72 e4       	ldi	r23, 0x42	; 66
     860:	81 e1       	ldi	r24, 0x11	; 17
     862:	f3 dc       	rcall	.-1562   	; 0x24a <reg_servo_angle>
     864:	8b e7       	ldi	r24, 0x7B	; 123
     866:	92 e9       	ldi	r25, 0x92	; 146
     868:	01 97       	sbiw	r24, 0x01	; 1
     86a:	f1 f7       	brne	.-4      	; 0x868 <five+0xdc>
     86c:	00 c0       	rjmp	.+0      	; 0x86e <five+0xe2>
     86e:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     870:	10 cd       	rjmp	.-1504   	; 0x292 <action>
     872:	08 95       	ret

00000874 <six>:

void six(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 157);
     874:	40 e0       	ldi	r20, 0x00	; 0
     876:	50 e0       	ldi	r21, 0x00	; 0
     878:	6d e1       	ldi	r22, 0x1D	; 29
     87a:	73 e4       	ldi	r23, 0x43	; 67
     87c:	86 e0       	ldi	r24, 0x06	; 6
     87e:	e5 dc       	rcall	.-1590   	; 0x24a <reg_servo_angle>
	reg_servo_angle(7, 60);
     880:	40 e0       	ldi	r20, 0x00	; 0
     882:	50 e0       	ldi	r21, 0x00	; 0
     884:	60 e7       	ldi	r22, 0x70	; 112
     886:	72 e4       	ldi	r23, 0x42	; 66
     888:	87 e0       	ldi	r24, 0x07	; 7
     88a:	df dc       	rcall	.-1602   	; 0x24a <reg_servo_angle>
	reg_servo_angle(8, 226);
     88c:	40 e0       	ldi	r20, 0x00	; 0
     88e:	50 e0       	ldi	r21, 0x00	; 0
     890:	62 e6       	ldi	r22, 0x62	; 98
     892:	73 e4       	ldi	r23, 0x43	; 67
     894:	88 e0       	ldi	r24, 0x08	; 8
     896:	d9 dc       	rcall	.-1614   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(9, 153);
     898:	40 e0       	ldi	r20, 0x00	; 0
     89a:	50 e0       	ldi	r21, 0x00	; 0
     89c:	69 e1       	ldi	r22, 0x19	; 25
     89e:	73 e4       	ldi	r23, 0x43	; 67
     8a0:	89 e0       	ldi	r24, 0x09	; 9
     8a2:	d3 dc       	rcall	.-1626   	; 0x24a <reg_servo_angle>
	reg_servo_angle(10, 213);
     8a4:	40 e0       	ldi	r20, 0x00	; 0
     8a6:	50 e0       	ldi	r21, 0x00	; 0
     8a8:	65 e5       	ldi	r22, 0x55	; 85
     8aa:	73 e4       	ldi	r23, 0x43	; 67
     8ac:	8a e0       	ldi	r24, 0x0A	; 10
     8ae:	cd dc       	rcall	.-1638   	; 0x24a <reg_servo_angle>
	reg_servo_angle(11, 63);
     8b0:	40 e0       	ldi	r20, 0x00	; 0
     8b2:	50 e0       	ldi	r21, 0x00	; 0
     8b4:	6c e7       	ldi	r22, 0x7C	; 124
     8b6:	72 e4       	ldi	r23, 0x42	; 66
     8b8:	8b e0       	ldi	r24, 0x0B	; 11
     8ba:	c7 dc       	rcall	.-1650   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(3, 142);
     8bc:	40 e0       	ldi	r20, 0x00	; 0
     8be:	50 e0       	ldi	r21, 0x00	; 0
     8c0:	6e e0       	ldi	r22, 0x0E	; 14
     8c2:	73 e4       	ldi	r23, 0x43	; 67
     8c4:	83 e0       	ldi	r24, 0x03	; 3
     8c6:	c1 dc       	rcall	.-1662   	; 0x24a <reg_servo_angle>
	reg_servo_angle(4, 93);
     8c8:	40 e0       	ldi	r20, 0x00	; 0
     8ca:	50 e0       	ldi	r21, 0x00	; 0
     8cc:	6a eb       	ldi	r22, 0xBA	; 186
     8ce:	72 e4       	ldi	r23, 0x42	; 66
     8d0:	84 e0       	ldi	r24, 0x04	; 4
     8d2:	bb dc       	rcall	.-1674   	; 0x24a <reg_servo_angle>
	reg_servo_angle(5, 226);
     8d4:	40 e0       	ldi	r20, 0x00	; 0
     8d6:	50 e0       	ldi	r21, 0x00	; 0
     8d8:	62 e6       	ldi	r22, 0x62	; 98
     8da:	73 e4       	ldi	r23, 0x43	; 67
     8dc:	85 e0       	ldi	r24, 0x05	; 5
     8de:	b5 dc       	rcall	.-1686   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(12, 142);
     8e0:	40 e0       	ldi	r20, 0x00	; 0
     8e2:	50 e0       	ldi	r21, 0x00	; 0
     8e4:	6e e0       	ldi	r22, 0x0E	; 14
     8e6:	73 e4       	ldi	r23, 0x43	; 67
     8e8:	8c e0       	ldi	r24, 0x0C	; 12
     8ea:	af dc       	rcall	.-1698   	; 0x24a <reg_servo_angle>
	reg_servo_angle(13, 235);
     8ec:	40 e0       	ldi	r20, 0x00	; 0
     8ee:	50 e0       	ldi	r21, 0x00	; 0
     8f0:	6b e6       	ldi	r22, 0x6B	; 107
     8f2:	73 e4       	ldi	r23, 0x43	; 67
     8f4:	8d e0       	ldi	r24, 0x0D	; 13
     8f6:	a9 dc       	rcall	.-1710   	; 0x24a <reg_servo_angle>
	reg_servo_angle(14, 64);
     8f8:	40 e0       	ldi	r20, 0x00	; 0
     8fa:	50 e0       	ldi	r21, 0x00	; 0
     8fc:	60 e8       	ldi	r22, 0x80	; 128
     8fe:	72 e4       	ldi	r23, 0x42	; 66
     900:	8e e0       	ldi	r24, 0x0E	; 14
     902:	a3 dc       	rcall	.-1722   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(0, 153);
     904:	40 e0       	ldi	r20, 0x00	; 0
     906:	50 e0       	ldi	r21, 0x00	; 0
     908:	69 e1       	ldi	r22, 0x19	; 25
     90a:	73 e4       	ldi	r23, 0x43	; 67
     90c:	80 e0       	ldi	r24, 0x00	; 0
     90e:	9d dc       	rcall	.-1734   	; 0x24a <reg_servo_angle>
	reg_servo_angle(1, 60);
     910:	40 e0       	ldi	r20, 0x00	; 0
     912:	50 e0       	ldi	r21, 0x00	; 0
     914:	60 e7       	ldi	r22, 0x70	; 112
     916:	72 e4       	ldi	r23, 0x42	; 66
     918:	81 e0       	ldi	r24, 0x01	; 1
     91a:	97 dc       	rcall	.-1746   	; 0x24a <reg_servo_angle>
	reg_servo_angle(2, 240);
     91c:	40 e0       	ldi	r20, 0x00	; 0
     91e:	50 e0       	ldi	r21, 0x00	; 0
     920:	60 e7       	ldi	r22, 0x70	; 112
     922:	73 e4       	ldi	r23, 0x43	; 67
     924:	82 e0       	ldi	r24, 0x02	; 2
     926:	91 dc       	rcall	.-1758   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(15, 157);
     928:	40 e0       	ldi	r20, 0x00	; 0
     92a:	50 e0       	ldi	r21, 0x00	; 0
     92c:	6d e1       	ldi	r22, 0x1D	; 29
     92e:	73 e4       	ldi	r23, 0x43	; 67
     930:	8f e0       	ldi	r24, 0x0F	; 15
     932:	8b dc       	rcall	.-1770   	; 0x24a <reg_servo_angle>
	reg_servo_angle(16, 203);
     934:	40 e0       	ldi	r20, 0x00	; 0
     936:	50 e0       	ldi	r21, 0x00	; 0
     938:	6b e4       	ldi	r22, 0x4B	; 75
     93a:	73 e4       	ldi	r23, 0x43	; 67
     93c:	80 e1       	ldi	r24, 0x10	; 16
     93e:	85 dc       	rcall	.-1782   	; 0x24a <reg_servo_angle>
	reg_servo_angle(17, 83);
     940:	40 e0       	ldi	r20, 0x00	; 0
     942:	50 e0       	ldi	r21, 0x00	; 0
     944:	66 ea       	ldi	r22, 0xA6	; 166
     946:	72 e4       	ldi	r23, 0x42	; 66
     948:	81 e1       	ldi	r24, 0x11	; 17
     94a:	7f dc       	rcall	.-1794   	; 0x24a <reg_servo_angle>
     94c:	8b e7       	ldi	r24, 0x7B	; 123
     94e:	92 e9       	ldi	r25, 0x92	; 146
     950:	01 97       	sbiw	r24, 0x01	; 1
     952:	f1 f7       	brne	.-4      	; 0x950 <six+0xdc>
     954:	00 c0       	rjmp	.+0      	; 0x956 <six+0xe2>
     956:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     958:	9c cc       	rjmp	.-1736   	; 0x292 <action>
     95a:	08 95       	ret

0000095c <seven>:

void seven(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 157);
     95c:	40 e0       	ldi	r20, 0x00	; 0
     95e:	50 e0       	ldi	r21, 0x00	; 0
     960:	6d e1       	ldi	r22, 0x1D	; 29
     962:	73 e4       	ldi	r23, 0x43	; 67
     964:	86 e0       	ldi	r24, 0x06	; 6
     966:	71 dc       	rcall	.-1822   	; 0x24a <reg_servo_angle>
	reg_servo_angle(7, 97);
     968:	40 e0       	ldi	r20, 0x00	; 0
     96a:	50 e0       	ldi	r21, 0x00	; 0
     96c:	62 ec       	ldi	r22, 0xC2	; 194
     96e:	72 e4       	ldi	r23, 0x42	; 66
     970:	87 e0       	ldi	r24, 0x07	; 7
     972:	6b dc       	rcall	.-1834   	; 0x24a <reg_servo_angle>
	reg_servo_angle(8, 217);
     974:	40 e0       	ldi	r20, 0x00	; 0
     976:	50 e0       	ldi	r21, 0x00	; 0
     978:	69 e5       	ldi	r22, 0x59	; 89
     97a:	73 e4       	ldi	r23, 0x43	; 67
     97c:	88 e0       	ldi	r24, 0x08	; 8
     97e:	65 dc       	rcall	.-1846   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(9, 153);
     980:	40 e0       	ldi	r20, 0x00	; 0
     982:	50 e0       	ldi	r21, 0x00	; 0
     984:	69 e1       	ldi	r22, 0x19	; 25
     986:	73 e4       	ldi	r23, 0x43	; 67
     988:	89 e0       	ldi	r24, 0x09	; 9
     98a:	5f dc       	rcall	.-1858   	; 0x24a <reg_servo_angle>
	reg_servo_angle(10, 213);
     98c:	40 e0       	ldi	r20, 0x00	; 0
     98e:	50 e0       	ldi	r21, 0x00	; 0
     990:	65 e5       	ldi	r22, 0x55	; 85
     992:	73 e4       	ldi	r23, 0x43	; 67
     994:	8a e0       	ldi	r24, 0x0A	; 10
     996:	59 dc       	rcall	.-1870   	; 0x24a <reg_servo_angle>
	reg_servo_angle(11, 63);
     998:	40 e0       	ldi	r20, 0x00	; 0
     99a:	50 e0       	ldi	r21, 0x00	; 0
     99c:	6c e7       	ldi	r22, 0x7C	; 124
     99e:	72 e4       	ldi	r23, 0x42	; 66
     9a0:	8b e0       	ldi	r24, 0x0B	; 11
     9a2:	53 dc       	rcall	.-1882   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(3, 142);
     9a4:	40 e0       	ldi	r20, 0x00	; 0
     9a6:	50 e0       	ldi	r21, 0x00	; 0
     9a8:	6e e0       	ldi	r22, 0x0E	; 14
     9aa:	73 e4       	ldi	r23, 0x43	; 67
     9ac:	83 e0       	ldi	r24, 0x03	; 3
     9ae:	4d dc       	rcall	.-1894   	; 0x24a <reg_servo_angle>
	reg_servo_angle(4, 93);
     9b0:	40 e0       	ldi	r20, 0x00	; 0
     9b2:	50 e0       	ldi	r21, 0x00	; 0
     9b4:	6a eb       	ldi	r22, 0xBA	; 186
     9b6:	72 e4       	ldi	r23, 0x42	; 66
     9b8:	84 e0       	ldi	r24, 0x04	; 4
     9ba:	47 dc       	rcall	.-1906   	; 0x24a <reg_servo_angle>
	reg_servo_angle(5, 226);
     9bc:	40 e0       	ldi	r20, 0x00	; 0
     9be:	50 e0       	ldi	r21, 0x00	; 0
     9c0:	62 e6       	ldi	r22, 0x62	; 98
     9c2:	73 e4       	ldi	r23, 0x43	; 67
     9c4:	85 e0       	ldi	r24, 0x05	; 5
     9c6:	41 dc       	rcall	.-1918   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(12, 142);
     9c8:	40 e0       	ldi	r20, 0x00	; 0
     9ca:	50 e0       	ldi	r21, 0x00	; 0
     9cc:	6e e0       	ldi	r22, 0x0E	; 14
     9ce:	73 e4       	ldi	r23, 0x43	; 67
     9d0:	8c e0       	ldi	r24, 0x0C	; 12
     9d2:	3b dc       	rcall	.-1930   	; 0x24a <reg_servo_angle>
	reg_servo_angle(13, 207);
     9d4:	40 e0       	ldi	r20, 0x00	; 0
     9d6:	50 e0       	ldi	r21, 0x00	; 0
     9d8:	6f e4       	ldi	r22, 0x4F	; 79
     9da:	73 e4       	ldi	r23, 0x43	; 67
     9dc:	8d e0       	ldi	r24, 0x0D	; 13
     9de:	35 dc       	rcall	.-1942   	; 0x24a <reg_servo_angle>
	reg_servo_angle(14, 74);
     9e0:	40 e0       	ldi	r20, 0x00	; 0
     9e2:	50 e0       	ldi	r21, 0x00	; 0
     9e4:	64 e9       	ldi	r22, 0x94	; 148
     9e6:	72 e4       	ldi	r23, 0x42	; 66
     9e8:	8e e0       	ldi	r24, 0x0E	; 14
     9ea:	2f dc       	rcall	.-1954   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(0, 153);
     9ec:	40 e0       	ldi	r20, 0x00	; 0
     9ee:	50 e0       	ldi	r21, 0x00	; 0
     9f0:	69 e1       	ldi	r22, 0x19	; 25
     9f2:	73 e4       	ldi	r23, 0x43	; 67
     9f4:	80 e0       	ldi	r24, 0x00	; 0
     9f6:	29 dc       	rcall	.-1966   	; 0x24a <reg_servo_angle>
	reg_servo_angle(1, 87);
     9f8:	40 e0       	ldi	r20, 0x00	; 0
     9fa:	50 e0       	ldi	r21, 0x00	; 0
     9fc:	6e ea       	ldi	r22, 0xAE	; 174
     9fe:	72 e4       	ldi	r23, 0x42	; 66
     a00:	81 e0       	ldi	r24, 0x01	; 1
     a02:	23 dc       	rcall	.-1978   	; 0x24a <reg_servo_angle>
	reg_servo_angle(2, 237);
     a04:	40 e0       	ldi	r20, 0x00	; 0
     a06:	50 e0       	ldi	r21, 0x00	; 0
     a08:	6d e6       	ldi	r22, 0x6D	; 109
     a0a:	73 e4       	ldi	r23, 0x43	; 67
     a0c:	82 e0       	ldi	r24, 0x02	; 2
     a0e:	1d dc       	rcall	.-1990   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(15, 157);
     a10:	40 e0       	ldi	r20, 0x00	; 0
     a12:	50 e0       	ldi	r21, 0x00	; 0
     a14:	6d e1       	ldi	r22, 0x1D	; 29
     a16:	73 e4       	ldi	r23, 0x43	; 67
     a18:	8f e0       	ldi	r24, 0x0F	; 15
     a1a:	17 dc       	rcall	.-2002   	; 0x24a <reg_servo_angle>
	reg_servo_angle(16, 203);
     a1c:	40 e0       	ldi	r20, 0x00	; 0
     a1e:	50 e0       	ldi	r21, 0x00	; 0
     a20:	6b e4       	ldi	r22, 0x4B	; 75
     a22:	73 e4       	ldi	r23, 0x43	; 67
     a24:	80 e1       	ldi	r24, 0x10	; 16
     a26:	11 dc       	rcall	.-2014   	; 0x24a <reg_servo_angle>
	reg_servo_angle(17, 83);
     a28:	40 e0       	ldi	r20, 0x00	; 0
     a2a:	50 e0       	ldi	r21, 0x00	; 0
     a2c:	66 ea       	ldi	r22, 0xA6	; 166
     a2e:	72 e4       	ldi	r23, 0x42	; 66
     a30:	81 e1       	ldi	r24, 0x11	; 17
     a32:	0b dc       	rcall	.-2026   	; 0x24a <reg_servo_angle>
     a34:	8b e7       	ldi	r24, 0x7B	; 123
     a36:	92 e9       	ldi	r25, 0x92	; 146
     a38:	01 97       	sbiw	r24, 0x01	; 1
     a3a:	f1 f7       	brne	.-4      	; 0xa38 <seven+0xdc>
     a3c:	00 c0       	rjmp	.+0      	; 0xa3e <seven+0xe2>
     a3e:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     a40:	28 cc       	rjmp	.-1968   	; 0x292 <action>
     a42:	08 95       	ret

00000a44 <eight>:

void eight(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 157);
     a44:	40 e0       	ldi	r20, 0x00	; 0
     a46:	50 e0       	ldi	r21, 0x00	; 0
     a48:	6d e1       	ldi	r22, 0x1D	; 29
     a4a:	73 e4       	ldi	r23, 0x43	; 67
     a4c:	86 e0       	ldi	r24, 0x06	; 6
     a4e:	fd db       	rcall	.-2054   	; 0x24a <reg_servo_angle>
	reg_servo_angle(7, 97);
     a50:	40 e0       	ldi	r20, 0x00	; 0
     a52:	50 e0       	ldi	r21, 0x00	; 0
     a54:	62 ec       	ldi	r22, 0xC2	; 194
     a56:	72 e4       	ldi	r23, 0x42	; 66
     a58:	87 e0       	ldi	r24, 0x07	; 7
     a5a:	f7 db       	rcall	.-2066   	; 0x24a <reg_servo_angle>
	reg_servo_angle(8, 217);
     a5c:	40 e0       	ldi	r20, 0x00	; 0
     a5e:	50 e0       	ldi	r21, 0x00	; 0
     a60:	69 e5       	ldi	r22, 0x59	; 89
     a62:	73 e4       	ldi	r23, 0x43	; 67
     a64:	88 e0       	ldi	r24, 0x08	; 8
     a66:	f1 db       	rcall	.-2078   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(9, 153);
     a68:	40 e0       	ldi	r20, 0x00	; 0
     a6a:	50 e0       	ldi	r21, 0x00	; 0
     a6c:	69 e1       	ldi	r22, 0x19	; 25
     a6e:	73 e4       	ldi	r23, 0x43	; 67
     a70:	89 e0       	ldi	r24, 0x09	; 9
     a72:	eb db       	rcall	.-2090   	; 0x24a <reg_servo_angle>
	reg_servo_angle(10, 240);
     a74:	40 e0       	ldi	r20, 0x00	; 0
     a76:	50 e0       	ldi	r21, 0x00	; 0
     a78:	60 e7       	ldi	r22, 0x70	; 112
     a7a:	73 e4       	ldi	r23, 0x43	; 67
     a7c:	8a e0       	ldi	r24, 0x0A	; 10
     a7e:	e5 db       	rcall	.-2102   	; 0x24a <reg_servo_angle>
	reg_servo_angle(11, 60);
     a80:	40 e0       	ldi	r20, 0x00	; 0
     a82:	50 e0       	ldi	r21, 0x00	; 0
     a84:	60 e7       	ldi	r22, 0x70	; 112
     a86:	72 e4       	ldi	r23, 0x42	; 66
     a88:	8b e0       	ldi	r24, 0x0B	; 11
     a8a:	df db       	rcall	.-2114   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(3, 142);
     a8c:	40 e0       	ldi	r20, 0x00	; 0
     a8e:	50 e0       	ldi	r21, 0x00	; 0
     a90:	6e e0       	ldi	r22, 0x0E	; 14
     a92:	73 e4       	ldi	r23, 0x43	; 67
     a94:	83 e0       	ldi	r24, 0x03	; 3
     a96:	d9 db       	rcall	.-2126   	; 0x24a <reg_servo_angle>
	reg_servo_angle(4, 65);
     a98:	40 e0       	ldi	r20, 0x00	; 0
     a9a:	50 e0       	ldi	r21, 0x00	; 0
     a9c:	62 e8       	ldi	r22, 0x82	; 130
     a9e:	72 e4       	ldi	r23, 0x42	; 66
     aa0:	84 e0       	ldi	r24, 0x04	; 4
     aa2:	d3 db       	rcall	.-2138   	; 0x24a <reg_servo_angle>
	reg_servo_angle(5, 236);
     aa4:	40 e0       	ldi	r20, 0x00	; 0
     aa6:	50 e0       	ldi	r21, 0x00	; 0
     aa8:	6c e6       	ldi	r22, 0x6C	; 108
     aaa:	73 e4       	ldi	r23, 0x43	; 67
     aac:	85 e0       	ldi	r24, 0x05	; 5
     aae:	cd db       	rcall	.-2150   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(12, 142);
     ab0:	40 e0       	ldi	r20, 0x00	; 0
     ab2:	50 e0       	ldi	r21, 0x00	; 0
     ab4:	6e e0       	ldi	r22, 0x0E	; 14
     ab6:	73 e4       	ldi	r23, 0x43	; 67
     ab8:	8c e0       	ldi	r24, 0x0C	; 12
     aba:	c7 db       	rcall	.-2162   	; 0x24a <reg_servo_angle>
	reg_servo_angle(13, 207);
     abc:	40 e0       	ldi	r20, 0x00	; 0
     abe:	50 e0       	ldi	r21, 0x00	; 0
     ac0:	6f e4       	ldi	r22, 0x4F	; 79
     ac2:	73 e4       	ldi	r23, 0x43	; 67
     ac4:	8d e0       	ldi	r24, 0x0D	; 13
     ac6:	c1 db       	rcall	.-2174   	; 0x24a <reg_servo_angle>
	reg_servo_angle(14, 74);
     ac8:	40 e0       	ldi	r20, 0x00	; 0
     aca:	50 e0       	ldi	r21, 0x00	; 0
     acc:	64 e9       	ldi	r22, 0x94	; 148
     ace:	72 e4       	ldi	r23, 0x42	; 66
     ad0:	8e e0       	ldi	r24, 0x0E	; 14
     ad2:	bb db       	rcall	.-2186   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(0, 153);
     ad4:	40 e0       	ldi	r20, 0x00	; 0
     ad6:	50 e0       	ldi	r21, 0x00	; 0
     ad8:	69 e1       	ldi	r22, 0x19	; 25
     ada:	73 e4       	ldi	r23, 0x43	; 67
     adc:	80 e0       	ldi	r24, 0x00	; 0
     ade:	b5 db       	rcall	.-2198   	; 0x24a <reg_servo_angle>
	reg_servo_angle(1, 87);
     ae0:	40 e0       	ldi	r20, 0x00	; 0
     ae2:	50 e0       	ldi	r21, 0x00	; 0
     ae4:	6e ea       	ldi	r22, 0xAE	; 174
     ae6:	72 e4       	ldi	r23, 0x42	; 66
     ae8:	81 e0       	ldi	r24, 0x01	; 1
     aea:	af db       	rcall	.-2210   	; 0x24a <reg_servo_angle>
	reg_servo_angle(2, 237);
     aec:	40 e0       	ldi	r20, 0x00	; 0
     aee:	50 e0       	ldi	r21, 0x00	; 0
     af0:	6d e6       	ldi	r22, 0x6D	; 109
     af2:	73 e4       	ldi	r23, 0x43	; 67
     af4:	82 e0       	ldi	r24, 0x02	; 2
     af6:	a9 db       	rcall	.-2222   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(15, 157);
     af8:	40 e0       	ldi	r20, 0x00	; 0
     afa:	50 e0       	ldi	r21, 0x00	; 0
     afc:	6d e1       	ldi	r22, 0x1D	; 29
     afe:	73 e4       	ldi	r23, 0x43	; 67
     b00:	8f e0       	ldi	r24, 0x0F	; 15
     b02:	a3 db       	rcall	.-2234   	; 0x24a <reg_servo_angle>
	reg_servo_angle(16, 240);
     b04:	40 e0       	ldi	r20, 0x00	; 0
     b06:	50 e0       	ldi	r21, 0x00	; 0
     b08:	60 e7       	ldi	r22, 0x70	; 112
     b0a:	73 e4       	ldi	r23, 0x43	; 67
     b0c:	80 e1       	ldi	r24, 0x10	; 16
     b0e:	9d db       	rcall	.-2246   	; 0x24a <reg_servo_angle>
	reg_servo_angle(17, 74);
     b10:	40 e0       	ldi	r20, 0x00	; 0
     b12:	50 e0       	ldi	r21, 0x00	; 0
     b14:	64 e9       	ldi	r22, 0x94	; 148
     b16:	72 e4       	ldi	r23, 0x42	; 66
     b18:	81 e1       	ldi	r24, 0x11	; 17
     b1a:	97 db       	rcall	.-2258   	; 0x24a <reg_servo_angle>
     b1c:	8b e7       	ldi	r24, 0x7B	; 123
     b1e:	92 e9       	ldi	r25, 0x92	; 146
     b20:	01 97       	sbiw	r24, 0x01	; 1
     b22:	f1 f7       	brne	.-4      	; 0xb20 <eight+0xdc>
     b24:	00 c0       	rjmp	.+0      	; 0xb26 <eight+0xe2>
     b26:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     b28:	b4 cb       	rjmp	.-2200   	; 0x292 <action>
     b2a:	08 95       	ret

00000b2c <forward>:
}

//Funktion för gång framåt
void forward(void)
{
	eight();
     b2c:	8b df       	rcall	.-234    	; 0xa44 <eight>
	one();
     b2e:	5e dc       	rcall	.-1860   	; 0x3ec <one>
	two();
     b30:	d1 dc       	rcall	.-1630   	; 0x4d4 <two>
	three();
     b32:	44 dd       	rcall	.-1400   	; 0x5bc <three>
	four();
     b34:	b7 dd       	rcall	.-1170   	; 0x6a4 <four>
	five();
     b36:	2a de       	rcall	.-940    	; 0x78c <five>
	six();
     b38:	9d de       	rcall	.-710    	; 0x874 <six>
	seven();
     b3a:	10 cf       	rjmp	.-480    	; 0x95c <seven>
     b3c:	08 95       	ret

00000b3e <backward>:
}

//Funktion för gång bakåt
void backward(void)
{
	seven();
     b3e:	0e df       	rcall	.-484    	; 0x95c <seven>
	six();
     b40:	99 de       	rcall	.-718    	; 0x874 <six>
	five();
     b42:	24 de       	rcall	.-952    	; 0x78c <five>
	four();
     b44:	af dd       	rcall	.-1186   	; 0x6a4 <four>
	three();
     b46:	3a dd       	rcall	.-1420   	; 0x5bc <three>
	two();
     b48:	c5 dc       	rcall	.-1654   	; 0x4d4 <two>
	one();
     b4a:	50 dc       	rcall	.-1888   	; 0x3ec <one>
	eight();
     b4c:	7b cf       	rjmp	.-266    	; 0xa44 <eight>
     b4e:	08 95       	ret

00000b50 <one_rot>:
//Funktionerna som utgör gångstilarna rotera höger och rotera vänster
void one_rot(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 150);
     b50:	40 e0       	ldi	r20, 0x00	; 0
     b52:	50 e0       	ldi	r21, 0x00	; 0
     b54:	66 e1       	ldi	r22, 0x16	; 22
     b56:	73 e4       	ldi	r23, 0x43	; 67
     b58:	86 e0       	ldi	r24, 0x06	; 6
     b5a:	77 db       	rcall	.-2322   	; 0x24a <reg_servo_angle>
	reg_servo_angle(7, 90);
     b5c:	40 e0       	ldi	r20, 0x00	; 0
     b5e:	50 e0       	ldi	r21, 0x00	; 0
     b60:	64 eb       	ldi	r22, 0xB4	; 180
     b62:	72 e4       	ldi	r23, 0x42	; 66
     b64:	87 e0       	ldi	r24, 0x07	; 7
     b66:	71 db       	rcall	.-2334   	; 0x24a <reg_servo_angle>
	reg_servo_angle(8, 220);
     b68:	40 e0       	ldi	r20, 0x00	; 0
     b6a:	50 e0       	ldi	r21, 0x00	; 0
     b6c:	6c e5       	ldi	r22, 0x5C	; 92
     b6e:	73 e4       	ldi	r23, 0x43	; 67
     b70:	88 e0       	ldi	r24, 0x08	; 8
     b72:	6b db       	rcall	.-2346   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(9, 165);
     b74:	40 e0       	ldi	r20, 0x00	; 0
     b76:	50 e0       	ldi	r21, 0x00	; 0
     b78:	65 e2       	ldi	r22, 0x25	; 37
     b7a:	73 e4       	ldi	r23, 0x43	; 67
     b7c:	89 e0       	ldi	r24, 0x09	; 9
     b7e:	65 db       	rcall	.-2358   	; 0x24a <reg_servo_angle>
	reg_servo_angle(10, 221);
     b80:	40 e0       	ldi	r20, 0x00	; 0
     b82:	50 e0       	ldi	r21, 0x00	; 0
     b84:	6d e5       	ldi	r22, 0x5D	; 93
     b86:	73 e4       	ldi	r23, 0x43	; 67
     b88:	8a e0       	ldi	r24, 0x0A	; 10
     b8a:	5f db       	rcall	.-2370   	; 0x24a <reg_servo_angle>
	reg_servo_angle(11, 82);
     b8c:	40 e0       	ldi	r20, 0x00	; 0
     b8e:	50 e0       	ldi	r21, 0x00	; 0
     b90:	64 ea       	ldi	r22, 0xA4	; 164
     b92:	72 e4       	ldi	r23, 0x42	; 66
     b94:	8b e0       	ldi	r24, 0x0B	; 11
     b96:	59 db       	rcall	.-2382   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(3, 164);
     b98:	40 e0       	ldi	r20, 0x00	; 0
     b9a:	50 e0       	ldi	r21, 0x00	; 0
     b9c:	64 e2       	ldi	r22, 0x24	; 36
     b9e:	73 e4       	ldi	r23, 0x43	; 67
     ba0:	83 e0       	ldi	r24, 0x03	; 3
     ba2:	53 db       	rcall	.-2394   	; 0x24a <reg_servo_angle>
	reg_servo_angle(4, 73);
     ba4:	40 e0       	ldi	r20, 0x00	; 0
     ba6:	50 e0       	ldi	r21, 0x00	; 0
     ba8:	62 e9       	ldi	r22, 0x92	; 146
     baa:	72 e4       	ldi	r23, 0x42	; 66
     bac:	84 e0       	ldi	r24, 0x04	; 4
     bae:	4d db       	rcall	.-2406   	; 0x24a <reg_servo_angle>
	reg_servo_angle(5, 227);
     bb0:	40 e0       	ldi	r20, 0x00	; 0
     bb2:	50 e0       	ldi	r21, 0x00	; 0
     bb4:	63 e6       	ldi	r22, 0x63	; 99
     bb6:	73 e4       	ldi	r23, 0x43	; 67
     bb8:	85 e0       	ldi	r24, 0x05	; 5
     bba:	47 db       	rcall	.-2418   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(12, 150);
     bbc:	40 e0       	ldi	r20, 0x00	; 0
     bbe:	50 e0       	ldi	r21, 0x00	; 0
     bc0:	66 e1       	ldi	r22, 0x16	; 22
     bc2:	73 e4       	ldi	r23, 0x43	; 67
     bc4:	8c e0       	ldi	r24, 0x0C	; 12
     bc6:	41 db       	rcall	.-2430   	; 0x24a <reg_servo_angle>
	reg_servo_angle(13, 210);
     bc8:	40 e0       	ldi	r20, 0x00	; 0
     bca:	50 e0       	ldi	r21, 0x00	; 0
     bcc:	62 e5       	ldi	r22, 0x52	; 82
     bce:	73 e4       	ldi	r23, 0x43	; 67
     bd0:	8d e0       	ldi	r24, 0x0D	; 13
     bd2:	3b db       	rcall	.-2442   	; 0x24a <reg_servo_angle>
	reg_servo_angle(14, 80);
     bd4:	40 e0       	ldi	r20, 0x00	; 0
     bd6:	50 e0       	ldi	r21, 0x00	; 0
     bd8:	60 ea       	ldi	r22, 0xA0	; 160
     bda:	72 e4       	ldi	r23, 0x42	; 66
     bdc:	8e e0       	ldi	r24, 0x0E	; 14
     bde:	35 db       	rcall	.-2454   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(0, 150);
     be0:	40 e0       	ldi	r20, 0x00	; 0
     be2:	50 e0       	ldi	r21, 0x00	; 0
     be4:	66 e1       	ldi	r22, 0x16	; 22
     be6:	73 e4       	ldi	r23, 0x43	; 67
     be8:	80 e0       	ldi	r24, 0x00	; 0
     bea:	2f db       	rcall	.-2466   	; 0x24a <reg_servo_angle>
	reg_servo_angle(1, 90);
     bec:	40 e0       	ldi	r20, 0x00	; 0
     bee:	50 e0       	ldi	r21, 0x00	; 0
     bf0:	64 eb       	ldi	r22, 0xB4	; 180
     bf2:	72 e4       	ldi	r23, 0x42	; 66
     bf4:	81 e0       	ldi	r24, 0x01	; 1
     bf6:	29 db       	rcall	.-2478   	; 0x24a <reg_servo_angle>
	reg_servo_angle(2, 220);
     bf8:	40 e0       	ldi	r20, 0x00	; 0
     bfa:	50 e0       	ldi	r21, 0x00	; 0
     bfc:	6c e5       	ldi	r22, 0x5C	; 92
     bfe:	73 e4       	ldi	r23, 0x43	; 67
     c00:	82 e0       	ldi	r24, 0x02	; 2
     c02:	23 db       	rcall	.-2490   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(15, 165);
     c04:	40 e0       	ldi	r20, 0x00	; 0
     c06:	50 e0       	ldi	r21, 0x00	; 0
     c08:	65 e2       	ldi	r22, 0x25	; 37
     c0a:	73 e4       	ldi	r23, 0x43	; 67
     c0c:	8f e0       	ldi	r24, 0x0F	; 15
     c0e:	1d db       	rcall	.-2502   	; 0x24a <reg_servo_angle>
	reg_servo_angle(16, 221);
     c10:	40 e0       	ldi	r20, 0x00	; 0
     c12:	50 e0       	ldi	r21, 0x00	; 0
     c14:	6d e5       	ldi	r22, 0x5D	; 93
     c16:	73 e4       	ldi	r23, 0x43	; 67
     c18:	80 e1       	ldi	r24, 0x10	; 16
     c1a:	17 db       	rcall	.-2514   	; 0x24a <reg_servo_angle>
	reg_servo_angle(17, 82);
     c1c:	40 e0       	ldi	r20, 0x00	; 0
     c1e:	50 e0       	ldi	r21, 0x00	; 0
     c20:	64 ea       	ldi	r22, 0xA4	; 164
     c22:	72 e4       	ldi	r23, 0x42	; 66
     c24:	81 e1       	ldi	r24, 0x11	; 17
     c26:	11 db       	rcall	.-2526   	; 0x24a <reg_servo_angle>
     c28:	8b e7       	ldi	r24, 0x7B	; 123
     c2a:	92 e9       	ldi	r25, 0x92	; 146
     c2c:	01 97       	sbiw	r24, 0x01	; 1
     c2e:	f1 f7       	brne	.-4      	; 0xc2c <one_rot+0xdc>
     c30:	00 c0       	rjmp	.+0      	; 0xc32 <one_rot+0xe2>
     c32:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     c34:	2e cb       	rjmp	.-2468   	; 0x292 <action>
     c36:	08 95       	ret

00000c38 <two_rot>:

void two_rot(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 150);
     c38:	40 e0       	ldi	r20, 0x00	; 0
     c3a:	50 e0       	ldi	r21, 0x00	; 0
     c3c:	66 e1       	ldi	r22, 0x16	; 22
     c3e:	73 e4       	ldi	r23, 0x43	; 67
     c40:	86 e0       	ldi	r24, 0x06	; 6
     c42:	03 db       	rcall	.-2554   	; 0x24a <reg_servo_angle>
	reg_servo_angle(7, 90);
     c44:	40 e0       	ldi	r20, 0x00	; 0
     c46:	50 e0       	ldi	r21, 0x00	; 0
     c48:	64 eb       	ldi	r22, 0xB4	; 180
     c4a:	72 e4       	ldi	r23, 0x42	; 66
     c4c:	87 e0       	ldi	r24, 0x07	; 7
     c4e:	fd da       	rcall	.-2566   	; 0x24a <reg_servo_angle>
	reg_servo_angle(8, 220);
     c50:	40 e0       	ldi	r20, 0x00	; 0
     c52:	50 e0       	ldi	r21, 0x00	; 0
     c54:	6c e5       	ldi	r22, 0x5C	; 92
     c56:	73 e4       	ldi	r23, 0x43	; 67
     c58:	88 e0       	ldi	r24, 0x08	; 8
     c5a:	f7 da       	rcall	.-2578   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(9, 178);
     c5c:	40 e0       	ldi	r20, 0x00	; 0
     c5e:	50 e0       	ldi	r21, 0x00	; 0
     c60:	62 e3       	ldi	r22, 0x32	; 50
     c62:	73 e4       	ldi	r23, 0x43	; 67
     c64:	89 e0       	ldi	r24, 0x09	; 9
     c66:	f1 da       	rcall	.-2590   	; 0x24a <reg_servo_angle>
	reg_servo_angle(10, 211);
     c68:	40 e0       	ldi	r20, 0x00	; 0
     c6a:	50 e0       	ldi	r21, 0x00	; 0
     c6c:	63 e5       	ldi	r22, 0x53	; 83
     c6e:	73 e4       	ldi	r23, 0x43	; 67
     c70:	8a e0       	ldi	r24, 0x0A	; 10
     c72:	eb da       	rcall	.-2602   	; 0x24a <reg_servo_angle>
	reg_servo_angle(11, 95);
     c74:	40 e0       	ldi	r20, 0x00	; 0
     c76:	50 e0       	ldi	r21, 0x00	; 0
     c78:	6e eb       	ldi	r22, 0xBE	; 190
     c7a:	72 e4       	ldi	r23, 0x42	; 66
     c7c:	8b e0       	ldi	r24, 0x0B	; 11
     c7e:	e5 da       	rcall	.-2614   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(3, 176);
     c80:	40 e0       	ldi	r20, 0x00	; 0
     c82:	50 e0       	ldi	r21, 0x00	; 0
     c84:	60 e3       	ldi	r22, 0x30	; 48
     c86:	73 e4       	ldi	r23, 0x43	; 67
     c88:	83 e0       	ldi	r24, 0x03	; 3
     c8a:	df da       	rcall	.-2626   	; 0x24a <reg_servo_angle>
	reg_servo_angle(4, 75);
     c8c:	40 e0       	ldi	r20, 0x00	; 0
     c8e:	50 e0       	ldi	r21, 0x00	; 0
     c90:	66 e9       	ldi	r22, 0x96	; 150
     c92:	72 e4       	ldi	r23, 0x42	; 66
     c94:	84 e0       	ldi	r24, 0x04	; 4
     c96:	d9 da       	rcall	.-2638   	; 0x24a <reg_servo_angle>
	reg_servo_angle(5, 224);
     c98:	40 e0       	ldi	r20, 0x00	; 0
     c9a:	50 e0       	ldi	r21, 0x00	; 0
     c9c:	60 e6       	ldi	r22, 0x60	; 96
     c9e:	73 e4       	ldi	r23, 0x43	; 67
     ca0:	85 e0       	ldi	r24, 0x05	; 5
     ca2:	d3 da       	rcall	.-2650   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(12, 150);
     ca4:	40 e0       	ldi	r20, 0x00	; 0
     ca6:	50 e0       	ldi	r21, 0x00	; 0
     ca8:	66 e1       	ldi	r22, 0x16	; 22
     caa:	73 e4       	ldi	r23, 0x43	; 67
     cac:	8c e0       	ldi	r24, 0x0C	; 12
     cae:	cd da       	rcall	.-2662   	; 0x24a <reg_servo_angle>
	reg_servo_angle(13, 210);
     cb0:	40 e0       	ldi	r20, 0x00	; 0
     cb2:	50 e0       	ldi	r21, 0x00	; 0
     cb4:	62 e5       	ldi	r22, 0x52	; 82
     cb6:	73 e4       	ldi	r23, 0x43	; 67
     cb8:	8d e0       	ldi	r24, 0x0D	; 13
     cba:	c7 da       	rcall	.-2674   	; 0x24a <reg_servo_angle>
	reg_servo_angle(14, 80);
     cbc:	40 e0       	ldi	r20, 0x00	; 0
     cbe:	50 e0       	ldi	r21, 0x00	; 0
     cc0:	60 ea       	ldi	r22, 0xA0	; 160
     cc2:	72 e4       	ldi	r23, 0x42	; 66
     cc4:	8e e0       	ldi	r24, 0x0E	; 14
     cc6:	c1 da       	rcall	.-2686   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(0, 150);
     cc8:	40 e0       	ldi	r20, 0x00	; 0
     cca:	50 e0       	ldi	r21, 0x00	; 0
     ccc:	66 e1       	ldi	r22, 0x16	; 22
     cce:	73 e4       	ldi	r23, 0x43	; 67
     cd0:	80 e0       	ldi	r24, 0x00	; 0
     cd2:	bb da       	rcall	.-2698   	; 0x24a <reg_servo_angle>
	reg_servo_angle(1, 90);
     cd4:	40 e0       	ldi	r20, 0x00	; 0
     cd6:	50 e0       	ldi	r21, 0x00	; 0
     cd8:	64 eb       	ldi	r22, 0xB4	; 180
     cda:	72 e4       	ldi	r23, 0x42	; 66
     cdc:	81 e0       	ldi	r24, 0x01	; 1
     cde:	b5 da       	rcall	.-2710   	; 0x24a <reg_servo_angle>
	reg_servo_angle(2, 220);
     ce0:	40 e0       	ldi	r20, 0x00	; 0
     ce2:	50 e0       	ldi	r21, 0x00	; 0
     ce4:	6c e5       	ldi	r22, 0x5C	; 92
     ce6:	73 e4       	ldi	r23, 0x43	; 67
     ce8:	82 e0       	ldi	r24, 0x02	; 2
     cea:	af da       	rcall	.-2722   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(15, 178);
     cec:	40 e0       	ldi	r20, 0x00	; 0
     cee:	50 e0       	ldi	r21, 0x00	; 0
     cf0:	62 e3       	ldi	r22, 0x32	; 50
     cf2:	73 e4       	ldi	r23, 0x43	; 67
     cf4:	8f e0       	ldi	r24, 0x0F	; 15
     cf6:	a9 da       	rcall	.-2734   	; 0x24a <reg_servo_angle>
	reg_servo_angle(16, 211);
     cf8:	40 e0       	ldi	r20, 0x00	; 0
     cfa:	50 e0       	ldi	r21, 0x00	; 0
     cfc:	63 e5       	ldi	r22, 0x53	; 83
     cfe:	73 e4       	ldi	r23, 0x43	; 67
     d00:	80 e1       	ldi	r24, 0x10	; 16
     d02:	a3 da       	rcall	.-2746   	; 0x24a <reg_servo_angle>
	reg_servo_angle(17, 95);
     d04:	40 e0       	ldi	r20, 0x00	; 0
     d06:	50 e0       	ldi	r21, 0x00	; 0
     d08:	6e eb       	ldi	r22, 0xBE	; 190
     d0a:	72 e4       	ldi	r23, 0x42	; 66
     d0c:	81 e1       	ldi	r24, 0x11	; 17
     d0e:	9d da       	rcall	.-2758   	; 0x24a <reg_servo_angle>
     d10:	8b e7       	ldi	r24, 0x7B	; 123
     d12:	92 e9       	ldi	r25, 0x92	; 146
     d14:	01 97       	sbiw	r24, 0x01	; 1
     d16:	f1 f7       	brne	.-4      	; 0xd14 <two_rot+0xdc>
     d18:	00 c0       	rjmp	.+0      	; 0xd1a <two_rot+0xe2>
     d1a:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     d1c:	ba ca       	rjmp	.-2700   	; 0x292 <action>
     d1e:	08 95       	ret

00000d20 <three_rot>:

void three_rot(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 150);
     d20:	40 e0       	ldi	r20, 0x00	; 0
     d22:	50 e0       	ldi	r21, 0x00	; 0
     d24:	66 e1       	ldi	r22, 0x16	; 22
     d26:	73 e4       	ldi	r23, 0x43	; 67
     d28:	86 e0       	ldi	r24, 0x06	; 6
     d2a:	8f da       	rcall	.-2786   	; 0x24a <reg_servo_angle>
	reg_servo_angle(7, 90);
     d2c:	40 e0       	ldi	r20, 0x00	; 0
     d2e:	50 e0       	ldi	r21, 0x00	; 0
     d30:	64 eb       	ldi	r22, 0xB4	; 180
     d32:	72 e4       	ldi	r23, 0x42	; 66
     d34:	87 e0       	ldi	r24, 0x07	; 7
     d36:	89 da       	rcall	.-2798   	; 0x24a <reg_servo_angle>
	reg_servo_angle(8, 220);
     d38:	40 e0       	ldi	r20, 0x00	; 0
     d3a:	50 e0       	ldi	r21, 0x00	; 0
     d3c:	6c e5       	ldi	r22, 0x5C	; 92
     d3e:	73 e4       	ldi	r23, 0x43	; 67
     d40:	88 e0       	ldi	r24, 0x08	; 8
     d42:	83 da       	rcall	.-2810   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(9, 178);
     d44:	40 e0       	ldi	r20, 0x00	; 0
     d46:	50 e0       	ldi	r21, 0x00	; 0
     d48:	62 e3       	ldi	r22, 0x32	; 50
     d4a:	73 e4       	ldi	r23, 0x43	; 67
     d4c:	89 e0       	ldi	r24, 0x09	; 9
     d4e:	7d da       	rcall	.-2822   	; 0x24a <reg_servo_angle>
	reg_servo_angle(10, 199);
     d50:	40 e0       	ldi	r20, 0x00	; 0
     d52:	50 e0       	ldi	r21, 0x00	; 0
     d54:	67 e4       	ldi	r22, 0x47	; 71
     d56:	73 e4       	ldi	r23, 0x43	; 67
     d58:	8a e0       	ldi	r24, 0x0A	; 10
     d5a:	77 da       	rcall	.-2834   	; 0x24a <reg_servo_angle>
	reg_servo_angle(11, 102);
     d5c:	40 e0       	ldi	r20, 0x00	; 0
     d5e:	50 e0       	ldi	r21, 0x00	; 0
     d60:	6c ec       	ldi	r22, 0xCC	; 204
     d62:	72 e4       	ldi	r23, 0x42	; 66
     d64:	8b e0       	ldi	r24, 0x0B	; 11
     d66:	71 da       	rcall	.-2846   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(3, 176);
     d68:	40 e0       	ldi	r20, 0x00	; 0
     d6a:	50 e0       	ldi	r21, 0x00	; 0
     d6c:	60 e3       	ldi	r22, 0x30	; 48
     d6e:	73 e4       	ldi	r23, 0x43	; 67
     d70:	83 e0       	ldi	r24, 0x03	; 3
     d72:	6b da       	rcall	.-2858   	; 0x24a <reg_servo_angle>
	reg_servo_angle(4, 89);
     d74:	40 e0       	ldi	r20, 0x00	; 0
     d76:	50 e0       	ldi	r21, 0x00	; 0
     d78:	62 eb       	ldi	r22, 0xB2	; 178
     d7a:	72 e4       	ldi	r23, 0x42	; 66
     d7c:	84 e0       	ldi	r24, 0x04	; 4
     d7e:	65 da       	rcall	.-2870   	; 0x24a <reg_servo_angle>
	reg_servo_angle(5, 217);
     d80:	40 e0       	ldi	r20, 0x00	; 0
     d82:	50 e0       	ldi	r21, 0x00	; 0
     d84:	69 e5       	ldi	r22, 0x59	; 89
     d86:	73 e4       	ldi	r23, 0x43	; 67
     d88:	85 e0       	ldi	r24, 0x05	; 5
     d8a:	5f da       	rcall	.-2882   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(12, 150);
     d8c:	40 e0       	ldi	r20, 0x00	; 0
     d8e:	50 e0       	ldi	r21, 0x00	; 0
     d90:	66 e1       	ldi	r22, 0x16	; 22
     d92:	73 e4       	ldi	r23, 0x43	; 67
     d94:	8c e0       	ldi	r24, 0x0C	; 12
     d96:	59 da       	rcall	.-2894   	; 0x24a <reg_servo_angle>
	reg_servo_angle(13, 210);
     d98:	40 e0       	ldi	r20, 0x00	; 0
     d9a:	50 e0       	ldi	r21, 0x00	; 0
     d9c:	62 e5       	ldi	r22, 0x52	; 82
     d9e:	73 e4       	ldi	r23, 0x43	; 67
     da0:	8d e0       	ldi	r24, 0x0D	; 13
     da2:	53 da       	rcall	.-2906   	; 0x24a <reg_servo_angle>
	reg_servo_angle(14, 80);
     da4:	40 e0       	ldi	r20, 0x00	; 0
     da6:	50 e0       	ldi	r21, 0x00	; 0
     da8:	60 ea       	ldi	r22, 0xA0	; 160
     daa:	72 e4       	ldi	r23, 0x42	; 66
     dac:	8e e0       	ldi	r24, 0x0E	; 14
     dae:	4d da       	rcall	.-2918   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(0, 150);
     db0:	40 e0       	ldi	r20, 0x00	; 0
     db2:	50 e0       	ldi	r21, 0x00	; 0
     db4:	66 e1       	ldi	r22, 0x16	; 22
     db6:	73 e4       	ldi	r23, 0x43	; 67
     db8:	80 e0       	ldi	r24, 0x00	; 0
     dba:	47 da       	rcall	.-2930   	; 0x24a <reg_servo_angle>
	reg_servo_angle(1, 90);
     dbc:	40 e0       	ldi	r20, 0x00	; 0
     dbe:	50 e0       	ldi	r21, 0x00	; 0
     dc0:	64 eb       	ldi	r22, 0xB4	; 180
     dc2:	72 e4       	ldi	r23, 0x42	; 66
     dc4:	81 e0       	ldi	r24, 0x01	; 1
     dc6:	41 da       	rcall	.-2942   	; 0x24a <reg_servo_angle>
	reg_servo_angle(2, 220);
     dc8:	40 e0       	ldi	r20, 0x00	; 0
     dca:	50 e0       	ldi	r21, 0x00	; 0
     dcc:	6c e5       	ldi	r22, 0x5C	; 92
     dce:	73 e4       	ldi	r23, 0x43	; 67
     dd0:	82 e0       	ldi	r24, 0x02	; 2
     dd2:	3b da       	rcall	.-2954   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(15, 178);
     dd4:	40 e0       	ldi	r20, 0x00	; 0
     dd6:	50 e0       	ldi	r21, 0x00	; 0
     dd8:	62 e3       	ldi	r22, 0x32	; 50
     dda:	73 e4       	ldi	r23, 0x43	; 67
     ddc:	8f e0       	ldi	r24, 0x0F	; 15
     dde:	35 da       	rcall	.-2966   	; 0x24a <reg_servo_angle>
	reg_servo_angle(16, 199);
     de0:	40 e0       	ldi	r20, 0x00	; 0
     de2:	50 e0       	ldi	r21, 0x00	; 0
     de4:	67 e4       	ldi	r22, 0x47	; 71
     de6:	73 e4       	ldi	r23, 0x43	; 67
     de8:	80 e1       	ldi	r24, 0x10	; 16
     dea:	2f da       	rcall	.-2978   	; 0x24a <reg_servo_angle>
	reg_servo_angle(17, 102);
     dec:	40 e0       	ldi	r20, 0x00	; 0
     dee:	50 e0       	ldi	r21, 0x00	; 0
     df0:	6c ec       	ldi	r22, 0xCC	; 204
     df2:	72 e4       	ldi	r23, 0x42	; 66
     df4:	81 e1       	ldi	r24, 0x11	; 17
     df6:	29 da       	rcall	.-2990   	; 0x24a <reg_servo_angle>
     df8:	8b e7       	ldi	r24, 0x7B	; 123
     dfa:	92 e9       	ldi	r25, 0x92	; 146
     dfc:	01 97       	sbiw	r24, 0x01	; 1
     dfe:	f1 f7       	brne	.-4      	; 0xdfc <three_rot+0xdc>
     e00:	00 c0       	rjmp	.+0      	; 0xe02 <three_rot+0xe2>
     e02:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     e04:	46 ca       	rjmp	.-2932   	; 0x292 <action>
     e06:	08 95       	ret

00000e08 <four_rot>:

void four_rot(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 150);
     e08:	40 e0       	ldi	r20, 0x00	; 0
     e0a:	50 e0       	ldi	r21, 0x00	; 0
     e0c:	66 e1       	ldi	r22, 0x16	; 22
     e0e:	73 e4       	ldi	r23, 0x43	; 67
     e10:	86 e0       	ldi	r24, 0x06	; 6
     e12:	1b da       	rcall	.-3018   	; 0x24a <reg_servo_angle>
	reg_servo_angle(7, 70);
     e14:	40 e0       	ldi	r20, 0x00	; 0
     e16:	50 e0       	ldi	r21, 0x00	; 0
     e18:	6c e8       	ldi	r22, 0x8C	; 140
     e1a:	72 e4       	ldi	r23, 0x42	; 66
     e1c:	87 e0       	ldi	r24, 0x07	; 7
     e1e:	15 da       	rcall	.-3030   	; 0x24a <reg_servo_angle>
	reg_servo_angle(8, 220);
     e20:	40 e0       	ldi	r20, 0x00	; 0
     e22:	50 e0       	ldi	r21, 0x00	; 0
     e24:	6c e5       	ldi	r22, 0x5C	; 92
     e26:	73 e4       	ldi	r23, 0x43	; 67
     e28:	88 e0       	ldi	r24, 0x08	; 8
     e2a:	0f da       	rcall	.-3042   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(9, 178);
     e2c:	40 e0       	ldi	r20, 0x00	; 0
     e2e:	50 e0       	ldi	r21, 0x00	; 0
     e30:	62 e3       	ldi	r22, 0x32	; 50
     e32:	73 e4       	ldi	r23, 0x43	; 67
     e34:	89 e0       	ldi	r24, 0x09	; 9
     e36:	09 da       	rcall	.-3054   	; 0x24a <reg_servo_angle>
	reg_servo_angle(10, 199);
     e38:	40 e0       	ldi	r20, 0x00	; 0
     e3a:	50 e0       	ldi	r21, 0x00	; 0
     e3c:	67 e4       	ldi	r22, 0x47	; 71
     e3e:	73 e4       	ldi	r23, 0x43	; 67
     e40:	8a e0       	ldi	r24, 0x0A	; 10
     e42:	03 da       	rcall	.-3066   	; 0x24a <reg_servo_angle>
	reg_servo_angle(11, 102);
     e44:	40 e0       	ldi	r20, 0x00	; 0
     e46:	50 e0       	ldi	r21, 0x00	; 0
     e48:	6c ec       	ldi	r22, 0xCC	; 204
     e4a:	72 e4       	ldi	r23, 0x42	; 66
     e4c:	8b e0       	ldi	r24, 0x0B	; 11
     e4e:	fd d9       	rcall	.-3078   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(3, 176);
     e50:	40 e0       	ldi	r20, 0x00	; 0
     e52:	50 e0       	ldi	r21, 0x00	; 0
     e54:	60 e3       	ldi	r22, 0x30	; 48
     e56:	73 e4       	ldi	r23, 0x43	; 67
     e58:	83 e0       	ldi	r24, 0x03	; 3
     e5a:	f7 d9       	rcall	.-3090   	; 0x24a <reg_servo_angle>
	reg_servo_angle(4, 89);
     e5c:	40 e0       	ldi	r20, 0x00	; 0
     e5e:	50 e0       	ldi	r21, 0x00	; 0
     e60:	62 eb       	ldi	r22, 0xB2	; 178
     e62:	72 e4       	ldi	r23, 0x42	; 66
     e64:	84 e0       	ldi	r24, 0x04	; 4
     e66:	f1 d9       	rcall	.-3102   	; 0x24a <reg_servo_angle>
	reg_servo_angle(5, 217);
     e68:	40 e0       	ldi	r20, 0x00	; 0
     e6a:	50 e0       	ldi	r21, 0x00	; 0
     e6c:	69 e5       	ldi	r22, 0x59	; 89
     e6e:	73 e4       	ldi	r23, 0x43	; 67
     e70:	85 e0       	ldi	r24, 0x05	; 5
     e72:	eb d9       	rcall	.-3114   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(12, 150);
     e74:	40 e0       	ldi	r20, 0x00	; 0
     e76:	50 e0       	ldi	r21, 0x00	; 0
     e78:	66 e1       	ldi	r22, 0x16	; 22
     e7a:	73 e4       	ldi	r23, 0x43	; 67
     e7c:	8c e0       	ldi	r24, 0x0C	; 12
     e7e:	e5 d9       	rcall	.-3126   	; 0x24a <reg_servo_angle>
	reg_servo_angle(13, 230);
     e80:	40 e0       	ldi	r20, 0x00	; 0
     e82:	50 e0       	ldi	r21, 0x00	; 0
     e84:	66 e6       	ldi	r22, 0x66	; 102
     e86:	73 e4       	ldi	r23, 0x43	; 67
     e88:	8d e0       	ldi	r24, 0x0D	; 13
     e8a:	df d9       	rcall	.-3138   	; 0x24a <reg_servo_angle>
	reg_servo_angle(14, 80);
     e8c:	40 e0       	ldi	r20, 0x00	; 0
     e8e:	50 e0       	ldi	r21, 0x00	; 0
     e90:	60 ea       	ldi	r22, 0xA0	; 160
     e92:	72 e4       	ldi	r23, 0x42	; 66
     e94:	8e e0       	ldi	r24, 0x0E	; 14
     e96:	d9 d9       	rcall	.-3150   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(0, 150);
     e98:	40 e0       	ldi	r20, 0x00	; 0
     e9a:	50 e0       	ldi	r21, 0x00	; 0
     e9c:	66 e1       	ldi	r22, 0x16	; 22
     e9e:	73 e4       	ldi	r23, 0x43	; 67
     ea0:	80 e0       	ldi	r24, 0x00	; 0
     ea2:	d3 d9       	rcall	.-3162   	; 0x24a <reg_servo_angle>
	reg_servo_angle(1, 70);
     ea4:	40 e0       	ldi	r20, 0x00	; 0
     ea6:	50 e0       	ldi	r21, 0x00	; 0
     ea8:	6c e8       	ldi	r22, 0x8C	; 140
     eaa:	72 e4       	ldi	r23, 0x42	; 66
     eac:	81 e0       	ldi	r24, 0x01	; 1
     eae:	cd d9       	rcall	.-3174   	; 0x24a <reg_servo_angle>
	reg_servo_angle(2, 220);
     eb0:	40 e0       	ldi	r20, 0x00	; 0
     eb2:	50 e0       	ldi	r21, 0x00	; 0
     eb4:	6c e5       	ldi	r22, 0x5C	; 92
     eb6:	73 e4       	ldi	r23, 0x43	; 67
     eb8:	82 e0       	ldi	r24, 0x02	; 2
     eba:	c7 d9       	rcall	.-3186   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(15, 178);
     ebc:	40 e0       	ldi	r20, 0x00	; 0
     ebe:	50 e0       	ldi	r21, 0x00	; 0
     ec0:	62 e3       	ldi	r22, 0x32	; 50
     ec2:	73 e4       	ldi	r23, 0x43	; 67
     ec4:	8f e0       	ldi	r24, 0x0F	; 15
     ec6:	c1 d9       	rcall	.-3198   	; 0x24a <reg_servo_angle>
	reg_servo_angle(16, 199);
     ec8:	40 e0       	ldi	r20, 0x00	; 0
     eca:	50 e0       	ldi	r21, 0x00	; 0
     ecc:	67 e4       	ldi	r22, 0x47	; 71
     ece:	73 e4       	ldi	r23, 0x43	; 67
     ed0:	80 e1       	ldi	r24, 0x10	; 16
     ed2:	bb d9       	rcall	.-3210   	; 0x24a <reg_servo_angle>
	reg_servo_angle(17, 102);
     ed4:	40 e0       	ldi	r20, 0x00	; 0
     ed6:	50 e0       	ldi	r21, 0x00	; 0
     ed8:	6c ec       	ldi	r22, 0xCC	; 204
     eda:	72 e4       	ldi	r23, 0x42	; 66
     edc:	81 e1       	ldi	r24, 0x11	; 17
     ede:	b5 d9       	rcall	.-3222   	; 0x24a <reg_servo_angle>
     ee0:	8b e7       	ldi	r24, 0x7B	; 123
     ee2:	92 e9       	ldi	r25, 0x92	; 146
     ee4:	01 97       	sbiw	r24, 0x01	; 1
     ee6:	f1 f7       	brne	.-4      	; 0xee4 <four_rot+0xdc>
     ee8:	00 c0       	rjmp	.+0      	; 0xeea <four_rot+0xe2>
     eea:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     eec:	d2 c9       	rjmp	.-3164   	; 0x292 <action>
     eee:	08 95       	ret

00000ef0 <five_rot>:

void five_rot(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 150);
     ef0:	40 e0       	ldi	r20, 0x00	; 0
     ef2:	50 e0       	ldi	r21, 0x00	; 0
     ef4:	66 e1       	ldi	r22, 0x16	; 22
     ef6:	73 e4       	ldi	r23, 0x43	; 67
     ef8:	86 e0       	ldi	r24, 0x06	; 6
     efa:	a7 d9       	rcall	.-3250   	; 0x24a <reg_servo_angle>
	reg_servo_angle(7, 70);
     efc:	40 e0       	ldi	r20, 0x00	; 0
     efe:	50 e0       	ldi	r21, 0x00	; 0
     f00:	6c e8       	ldi	r22, 0x8C	; 140
     f02:	72 e4       	ldi	r23, 0x42	; 66
     f04:	87 e0       	ldi	r24, 0x07	; 7
     f06:	a1 d9       	rcall	.-3262   	; 0x24a <reg_servo_angle>
	reg_servo_angle(8, 220);
     f08:	40 e0       	ldi	r20, 0x00	; 0
     f0a:	50 e0       	ldi	r21, 0x00	; 0
     f0c:	6c e5       	ldi	r22, 0x5C	; 92
     f0e:	73 e4       	ldi	r23, 0x43	; 67
     f10:	88 e0       	ldi	r24, 0x08	; 8
     f12:	9b d9       	rcall	.-3274   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(9, 165);
     f14:	40 e0       	ldi	r20, 0x00	; 0
     f16:	50 e0       	ldi	r21, 0x00	; 0
     f18:	65 e2       	ldi	r22, 0x25	; 37
     f1a:	73 e4       	ldi	r23, 0x43	; 67
     f1c:	89 e0       	ldi	r24, 0x09	; 9
     f1e:	95 d9       	rcall	.-3286   	; 0x24a <reg_servo_angle>
	reg_servo_angle(10, 210);
     f20:	40 e0       	ldi	r20, 0x00	; 0
     f22:	50 e0       	ldi	r21, 0x00	; 0
     f24:	62 e5       	ldi	r22, 0x52	; 82
     f26:	73 e4       	ldi	r23, 0x43	; 67
     f28:	8a e0       	ldi	r24, 0x0A	; 10
     f2a:	8f d9       	rcall	.-3298   	; 0x24a <reg_servo_angle>
	reg_servo_angle(11, 85);
     f2c:	40 e0       	ldi	r20, 0x00	; 0
     f2e:	50 e0       	ldi	r21, 0x00	; 0
     f30:	6a ea       	ldi	r22, 0xAA	; 170
     f32:	72 e4       	ldi	r23, 0x42	; 66
     f34:	8b e0       	ldi	r24, 0x0B	; 11
     f36:	89 d9       	rcall	.-3310   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(3, 161);
     f38:	40 e0       	ldi	r20, 0x00	; 0
     f3a:	50 e0       	ldi	r21, 0x00	; 0
     f3c:	61 e2       	ldi	r22, 0x21	; 33
     f3e:	73 e4       	ldi	r23, 0x43	; 67
     f40:	83 e0       	ldi	r24, 0x03	; 3
     f42:	83 d9       	rcall	.-3322   	; 0x24a <reg_servo_angle>
	reg_servo_angle(4, 86);
     f44:	40 e0       	ldi	r20, 0x00	; 0
     f46:	50 e0       	ldi	r21, 0x00	; 0
     f48:	6c ea       	ldi	r22, 0xAC	; 172
     f4a:	72 e4       	ldi	r23, 0x42	; 66
     f4c:	84 e0       	ldi	r24, 0x04	; 4
     f4e:	7d d9       	rcall	.-3334   	; 0x24a <reg_servo_angle>
	reg_servo_angle(5, 222);
     f50:	40 e0       	ldi	r20, 0x00	; 0
     f52:	50 e0       	ldi	r21, 0x00	; 0
     f54:	6e e5       	ldi	r22, 0x5E	; 94
     f56:	73 e4       	ldi	r23, 0x43	; 67
     f58:	85 e0       	ldi	r24, 0x05	; 5
     f5a:	77 d9       	rcall	.-3346   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(12, 150);
     f5c:	40 e0       	ldi	r20, 0x00	; 0
     f5e:	50 e0       	ldi	r21, 0x00	; 0
     f60:	66 e1       	ldi	r22, 0x16	; 22
     f62:	73 e4       	ldi	r23, 0x43	; 67
     f64:	8c e0       	ldi	r24, 0x0C	; 12
     f66:	71 d9       	rcall	.-3358   	; 0x24a <reg_servo_angle>
	reg_servo_angle(13, 230);
     f68:	40 e0       	ldi	r20, 0x00	; 0
     f6a:	50 e0       	ldi	r21, 0x00	; 0
     f6c:	66 e6       	ldi	r22, 0x66	; 102
     f6e:	73 e4       	ldi	r23, 0x43	; 67
     f70:	8d e0       	ldi	r24, 0x0D	; 13
     f72:	6b d9       	rcall	.-3370   	; 0x24a <reg_servo_angle>
	reg_servo_angle(14, 80);
     f74:	40 e0       	ldi	r20, 0x00	; 0
     f76:	50 e0       	ldi	r21, 0x00	; 0
     f78:	60 ea       	ldi	r22, 0xA0	; 160
     f7a:	72 e4       	ldi	r23, 0x42	; 66
     f7c:	8e e0       	ldi	r24, 0x0E	; 14
     f7e:	65 d9       	rcall	.-3382   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(0, 150);
     f80:	40 e0       	ldi	r20, 0x00	; 0
     f82:	50 e0       	ldi	r21, 0x00	; 0
     f84:	66 e1       	ldi	r22, 0x16	; 22
     f86:	73 e4       	ldi	r23, 0x43	; 67
     f88:	80 e0       	ldi	r24, 0x00	; 0
     f8a:	5f d9       	rcall	.-3394   	; 0x24a <reg_servo_angle>
	reg_servo_angle(1, 70);
     f8c:	40 e0       	ldi	r20, 0x00	; 0
     f8e:	50 e0       	ldi	r21, 0x00	; 0
     f90:	6c e8       	ldi	r22, 0x8C	; 140
     f92:	72 e4       	ldi	r23, 0x42	; 66
     f94:	81 e0       	ldi	r24, 0x01	; 1
     f96:	59 d9       	rcall	.-3406   	; 0x24a <reg_servo_angle>
	reg_servo_angle(2, 220);
     f98:	40 e0       	ldi	r20, 0x00	; 0
     f9a:	50 e0       	ldi	r21, 0x00	; 0
     f9c:	6c e5       	ldi	r22, 0x5C	; 92
     f9e:	73 e4       	ldi	r23, 0x43	; 67
     fa0:	82 e0       	ldi	r24, 0x02	; 2
     fa2:	53 d9       	rcall	.-3418   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(15, 165);
     fa4:	40 e0       	ldi	r20, 0x00	; 0
     fa6:	50 e0       	ldi	r21, 0x00	; 0
     fa8:	65 e2       	ldi	r22, 0x25	; 37
     faa:	73 e4       	ldi	r23, 0x43	; 67
     fac:	8f e0       	ldi	r24, 0x0F	; 15
     fae:	4d d9       	rcall	.-3430   	; 0x24a <reg_servo_angle>
	reg_servo_angle(16, 210);
     fb0:	40 e0       	ldi	r20, 0x00	; 0
     fb2:	50 e0       	ldi	r21, 0x00	; 0
     fb4:	62 e5       	ldi	r22, 0x52	; 82
     fb6:	73 e4       	ldi	r23, 0x43	; 67
     fb8:	80 e1       	ldi	r24, 0x10	; 16
     fba:	47 d9       	rcall	.-3442   	; 0x24a <reg_servo_angle>
	reg_servo_angle(17, 85);
     fbc:	40 e0       	ldi	r20, 0x00	; 0
     fbe:	50 e0       	ldi	r21, 0x00	; 0
     fc0:	6a ea       	ldi	r22, 0xAA	; 170
     fc2:	72 e4       	ldi	r23, 0x42	; 66
     fc4:	81 e1       	ldi	r24, 0x11	; 17
     fc6:	41 d9       	rcall	.-3454   	; 0x24a <reg_servo_angle>
     fc8:	8b e7       	ldi	r24, 0x7B	; 123
     fca:	92 e9       	ldi	r25, 0x92	; 146
     fcc:	01 97       	sbiw	r24, 0x01	; 1
     fce:	f1 f7       	brne	.-4      	; 0xfcc <five_rot+0xdc>
     fd0:	00 c0       	rjmp	.+0      	; 0xfd2 <five_rot+0xe2>
     fd2:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     fd4:	5e c9       	rjmp	.-3396   	; 0x292 <action>
     fd6:	08 95       	ret

00000fd8 <six_rot>:

void six_rot(void)
{
	int scale = 3;

	reg_servo_angle(6, 150);
     fd8:	40 e0       	ldi	r20, 0x00	; 0
     fda:	50 e0       	ldi	r21, 0x00	; 0
     fdc:	66 e1       	ldi	r22, 0x16	; 22
     fde:	73 e4       	ldi	r23, 0x43	; 67
     fe0:	86 e0       	ldi	r24, 0x06	; 6
     fe2:	33 d9       	rcall	.-3482   	; 0x24a <reg_servo_angle>
	reg_servo_angle(7, 70);
     fe4:	40 e0       	ldi	r20, 0x00	; 0
     fe6:	50 e0       	ldi	r21, 0x00	; 0
     fe8:	6c e8       	ldi	r22, 0x8C	; 140
     fea:	72 e4       	ldi	r23, 0x42	; 66
     fec:	87 e0       	ldi	r24, 0x07	; 7
     fee:	2d d9       	rcall	.-3494   	; 0x24a <reg_servo_angle>
	reg_servo_angle(8, 220);
     ff0:	40 e0       	ldi	r20, 0x00	; 0
     ff2:	50 e0       	ldi	r21, 0x00	; 0
     ff4:	6c e5       	ldi	r22, 0x5C	; 92
     ff6:	73 e4       	ldi	r23, 0x43	; 67
     ff8:	88 e0       	ldi	r24, 0x08	; 8
     ffa:	27 d9       	rcall	.-3506   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(9, 150);
     ffc:	40 e0       	ldi	r20, 0x00	; 0
     ffe:	50 e0       	ldi	r21, 0x00	; 0
    1000:	66 e1       	ldi	r22, 0x16	; 22
    1002:	73 e4       	ldi	r23, 0x43	; 67
    1004:	89 e0       	ldi	r24, 0x09	; 9
    1006:	21 d9       	rcall	.-3518   	; 0x24a <reg_servo_angle>
	reg_servo_angle(10, 211);
    1008:	40 e0       	ldi	r20, 0x00	; 0
    100a:	50 e0       	ldi	r21, 0x00	; 0
    100c:	63 e5       	ldi	r22, 0x53	; 83
    100e:	73 e4       	ldi	r23, 0x43	; 67
    1010:	8a e0       	ldi	r24, 0x0A	; 10
    1012:	1b d9       	rcall	.-3530   	; 0x24a <reg_servo_angle>
	reg_servo_angle(11, 82);
    1014:	40 e0       	ldi	r20, 0x00	; 0
    1016:	50 e0       	ldi	r21, 0x00	; 0
    1018:	64 ea       	ldi	r22, 0xA4	; 164
    101a:	72 e4       	ldi	r23, 0x42	; 66
    101c:	8b e0       	ldi	r24, 0x0B	; 11
    101e:	15 d9       	rcall	.-3542   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(3, 150);
    1020:	40 e0       	ldi	r20, 0x00	; 0
    1022:	50 e0       	ldi	r21, 0x00	; 0
    1024:	66 e1       	ldi	r22, 0x16	; 22
    1026:	73 e4       	ldi	r23, 0x43	; 67
    1028:	83 e0       	ldi	r24, 0x03	; 3
    102a:	0f d9       	rcall	.-3554   	; 0x24a <reg_servo_angle>
	reg_servo_angle(4, 89);
    102c:	40 e0       	ldi	r20, 0x00	; 0
    102e:	50 e0       	ldi	r21, 0x00	; 0
    1030:	62 eb       	ldi	r22, 0xB2	; 178
    1032:	72 e4       	ldi	r23, 0x42	; 66
    1034:	84 e0       	ldi	r24, 0x04	; 4
    1036:	09 d9       	rcall	.-3566   	; 0x24a <reg_servo_angle>
	reg_servo_angle(5, 218);
    1038:	40 e0       	ldi	r20, 0x00	; 0
    103a:	50 e0       	ldi	r21, 0x00	; 0
    103c:	6a e5       	ldi	r22, 0x5A	; 90
    103e:	73 e4       	ldi	r23, 0x43	; 67
    1040:	85 e0       	ldi	r24, 0x05	; 5
    1042:	03 d9       	rcall	.-3578   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(12, 150);
    1044:	40 e0       	ldi	r20, 0x00	; 0
    1046:	50 e0       	ldi	r21, 0x00	; 0
    1048:	66 e1       	ldi	r22, 0x16	; 22
    104a:	73 e4       	ldi	r23, 0x43	; 67
    104c:	8c e0       	ldi	r24, 0x0C	; 12
    104e:	fd d8       	rcall	.-3590   	; 0x24a <reg_servo_angle>
	reg_servo_angle(13, 230);
    1050:	40 e0       	ldi	r20, 0x00	; 0
    1052:	50 e0       	ldi	r21, 0x00	; 0
    1054:	66 e6       	ldi	r22, 0x66	; 102
    1056:	73 e4       	ldi	r23, 0x43	; 67
    1058:	8d e0       	ldi	r24, 0x0D	; 13
    105a:	f7 d8       	rcall	.-3602   	; 0x24a <reg_servo_angle>
	reg_servo_angle(14, 80);
    105c:	40 e0       	ldi	r20, 0x00	; 0
    105e:	50 e0       	ldi	r21, 0x00	; 0
    1060:	60 ea       	ldi	r22, 0xA0	; 160
    1062:	72 e4       	ldi	r23, 0x42	; 66
    1064:	8e e0       	ldi	r24, 0x0E	; 14
    1066:	f1 d8       	rcall	.-3614   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(0, 150);
    1068:	40 e0       	ldi	r20, 0x00	; 0
    106a:	50 e0       	ldi	r21, 0x00	; 0
    106c:	66 e1       	ldi	r22, 0x16	; 22
    106e:	73 e4       	ldi	r23, 0x43	; 67
    1070:	80 e0       	ldi	r24, 0x00	; 0
    1072:	eb d8       	rcall	.-3626   	; 0x24a <reg_servo_angle>
	reg_servo_angle(1, 70);
    1074:	40 e0       	ldi	r20, 0x00	; 0
    1076:	50 e0       	ldi	r21, 0x00	; 0
    1078:	6c e8       	ldi	r22, 0x8C	; 140
    107a:	72 e4       	ldi	r23, 0x42	; 66
    107c:	81 e0       	ldi	r24, 0x01	; 1
    107e:	e5 d8       	rcall	.-3638   	; 0x24a <reg_servo_angle>
	reg_servo_angle(2, 220);
    1080:	40 e0       	ldi	r20, 0x00	; 0
    1082:	50 e0       	ldi	r21, 0x00	; 0
    1084:	6c e5       	ldi	r22, 0x5C	; 92
    1086:	73 e4       	ldi	r23, 0x43	; 67
    1088:	82 e0       	ldi	r24, 0x02	; 2
    108a:	df d8       	rcall	.-3650   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(15, 150);
    108c:	40 e0       	ldi	r20, 0x00	; 0
    108e:	50 e0       	ldi	r21, 0x00	; 0
    1090:	66 e1       	ldi	r22, 0x16	; 22
    1092:	73 e4       	ldi	r23, 0x43	; 67
    1094:	8f e0       	ldi	r24, 0x0F	; 15
    1096:	d9 d8       	rcall	.-3662   	; 0x24a <reg_servo_angle>
	reg_servo_angle(16, 211);
    1098:	40 e0       	ldi	r20, 0x00	; 0
    109a:	50 e0       	ldi	r21, 0x00	; 0
    109c:	63 e5       	ldi	r22, 0x53	; 83
    109e:	73 e4       	ldi	r23, 0x43	; 67
    10a0:	80 e1       	ldi	r24, 0x10	; 16
    10a2:	d3 d8       	rcall	.-3674   	; 0x24a <reg_servo_angle>
	reg_servo_angle(17, 82);
    10a4:	40 e0       	ldi	r20, 0x00	; 0
    10a6:	50 e0       	ldi	r21, 0x00	; 0
    10a8:	64 ea       	ldi	r22, 0xA4	; 164
    10aa:	72 e4       	ldi	r23, 0x42	; 66
    10ac:	81 e1       	ldi	r24, 0x11	; 17
    10ae:	cd d8       	rcall	.-3686   	; 0x24a <reg_servo_angle>
    10b0:	8b e7       	ldi	r24, 0x7B	; 123
    10b2:	92 e9       	ldi	r25, 0x92	; 146
    10b4:	01 97       	sbiw	r24, 0x01	; 1
    10b6:	f1 f7       	brne	.-4      	; 0x10b4 <six_rot+0xdc>
    10b8:	00 c0       	rjmp	.+0      	; 0x10ba <six_rot+0xe2>
    10ba:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
    10bc:	ea c8       	rjmp	.-3628   	; 0x292 <action>
    10be:	08 95       	ret

000010c0 <seven_rot>:

void seven_rot(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 150);
    10c0:	40 e0       	ldi	r20, 0x00	; 0
    10c2:	50 e0       	ldi	r21, 0x00	; 0
    10c4:	66 e1       	ldi	r22, 0x16	; 22
    10c6:	73 e4       	ldi	r23, 0x43	; 67
    10c8:	86 e0       	ldi	r24, 0x06	; 6
    10ca:	bf d8       	rcall	.-3714   	; 0x24a <reg_servo_angle>
	reg_servo_angle(7, 90);
    10cc:	40 e0       	ldi	r20, 0x00	; 0
    10ce:	50 e0       	ldi	r21, 0x00	; 0
    10d0:	64 eb       	ldi	r22, 0xB4	; 180
    10d2:	72 e4       	ldi	r23, 0x42	; 66
    10d4:	87 e0       	ldi	r24, 0x07	; 7
    10d6:	b9 d8       	rcall	.-3726   	; 0x24a <reg_servo_angle>
	reg_servo_angle(8, 220);
    10d8:	40 e0       	ldi	r20, 0x00	; 0
    10da:	50 e0       	ldi	r21, 0x00	; 0
    10dc:	6c e5       	ldi	r22, 0x5C	; 92
    10de:	73 e4       	ldi	r23, 0x43	; 67
    10e0:	88 e0       	ldi	r24, 0x08	; 8
    10e2:	b3 d8       	rcall	.-3738   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(9, 150);
    10e4:	40 e0       	ldi	r20, 0x00	; 0
    10e6:	50 e0       	ldi	r21, 0x00	; 0
    10e8:	66 e1       	ldi	r22, 0x16	; 22
    10ea:	73 e4       	ldi	r23, 0x43	; 67
    10ec:	89 e0       	ldi	r24, 0x09	; 9
    10ee:	ad d8       	rcall	.-3750   	; 0x24a <reg_servo_angle>
	reg_servo_angle(10, 211);
    10f0:	40 e0       	ldi	r20, 0x00	; 0
    10f2:	50 e0       	ldi	r21, 0x00	; 0
    10f4:	63 e5       	ldi	r22, 0x53	; 83
    10f6:	73 e4       	ldi	r23, 0x43	; 67
    10f8:	8a e0       	ldi	r24, 0x0A	; 10
    10fa:	a7 d8       	rcall	.-3762   	; 0x24a <reg_servo_angle>
	reg_servo_angle(11, 82);
    10fc:	40 e0       	ldi	r20, 0x00	; 0
    10fe:	50 e0       	ldi	r21, 0x00	; 0
    1100:	64 ea       	ldi	r22, 0xA4	; 164
    1102:	72 e4       	ldi	r23, 0x42	; 66
    1104:	8b e0       	ldi	r24, 0x0B	; 11
    1106:	a1 d8       	rcall	.-3774   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(3, 150);
    1108:	40 e0       	ldi	r20, 0x00	; 0
    110a:	50 e0       	ldi	r21, 0x00	; 0
    110c:	66 e1       	ldi	r22, 0x16	; 22
    110e:	73 e4       	ldi	r23, 0x43	; 67
    1110:	83 e0       	ldi	r24, 0x03	; 3
    1112:	9b d8       	rcall	.-3786   	; 0x24a <reg_servo_angle>
	reg_servo_angle(4, 89);
    1114:	40 e0       	ldi	r20, 0x00	; 0
    1116:	50 e0       	ldi	r21, 0x00	; 0
    1118:	62 eb       	ldi	r22, 0xB2	; 178
    111a:	72 e4       	ldi	r23, 0x42	; 66
    111c:	84 e0       	ldi	r24, 0x04	; 4
    111e:	95 d8       	rcall	.-3798   	; 0x24a <reg_servo_angle>
	reg_servo_angle(5, 218);
    1120:	40 e0       	ldi	r20, 0x00	; 0
    1122:	50 e0       	ldi	r21, 0x00	; 0
    1124:	6a e5       	ldi	r22, 0x5A	; 90
    1126:	73 e4       	ldi	r23, 0x43	; 67
    1128:	85 e0       	ldi	r24, 0x05	; 5
    112a:	8f d8       	rcall	.-3810   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(12, 150);
    112c:	40 e0       	ldi	r20, 0x00	; 0
    112e:	50 e0       	ldi	r21, 0x00	; 0
    1130:	66 e1       	ldi	r22, 0x16	; 22
    1132:	73 e4       	ldi	r23, 0x43	; 67
    1134:	8c e0       	ldi	r24, 0x0C	; 12
    1136:	89 d8       	rcall	.-3822   	; 0x24a <reg_servo_angle>
	reg_servo_angle(13, 210);
    1138:	40 e0       	ldi	r20, 0x00	; 0
    113a:	50 e0       	ldi	r21, 0x00	; 0
    113c:	62 e5       	ldi	r22, 0x52	; 82
    113e:	73 e4       	ldi	r23, 0x43	; 67
    1140:	8d e0       	ldi	r24, 0x0D	; 13
    1142:	83 d8       	rcall	.-3834   	; 0x24a <reg_servo_angle>
	reg_servo_angle(14, 80);
    1144:	40 e0       	ldi	r20, 0x00	; 0
    1146:	50 e0       	ldi	r21, 0x00	; 0
    1148:	60 ea       	ldi	r22, 0xA0	; 160
    114a:	72 e4       	ldi	r23, 0x42	; 66
    114c:	8e e0       	ldi	r24, 0x0E	; 14
    114e:	7d d8       	rcall	.-3846   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(0, 150);
    1150:	40 e0       	ldi	r20, 0x00	; 0
    1152:	50 e0       	ldi	r21, 0x00	; 0
    1154:	66 e1       	ldi	r22, 0x16	; 22
    1156:	73 e4       	ldi	r23, 0x43	; 67
    1158:	80 e0       	ldi	r24, 0x00	; 0
    115a:	77 d8       	rcall	.-3858   	; 0x24a <reg_servo_angle>
	reg_servo_angle(1, 90);
    115c:	40 e0       	ldi	r20, 0x00	; 0
    115e:	50 e0       	ldi	r21, 0x00	; 0
    1160:	64 eb       	ldi	r22, 0xB4	; 180
    1162:	72 e4       	ldi	r23, 0x42	; 66
    1164:	81 e0       	ldi	r24, 0x01	; 1
    1166:	71 d8       	rcall	.-3870   	; 0x24a <reg_servo_angle>
	reg_servo_angle(2, 220);
    1168:	40 e0       	ldi	r20, 0x00	; 0
    116a:	50 e0       	ldi	r21, 0x00	; 0
    116c:	6c e5       	ldi	r22, 0x5C	; 92
    116e:	73 e4       	ldi	r23, 0x43	; 67
    1170:	82 e0       	ldi	r24, 0x02	; 2
    1172:	6b d8       	rcall	.-3882   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(15, 150);
    1174:	40 e0       	ldi	r20, 0x00	; 0
    1176:	50 e0       	ldi	r21, 0x00	; 0
    1178:	66 e1       	ldi	r22, 0x16	; 22
    117a:	73 e4       	ldi	r23, 0x43	; 67
    117c:	8f e0       	ldi	r24, 0x0F	; 15
    117e:	65 d8       	rcall	.-3894   	; 0x24a <reg_servo_angle>
	reg_servo_angle(16, 211);
    1180:	40 e0       	ldi	r20, 0x00	; 0
    1182:	50 e0       	ldi	r21, 0x00	; 0
    1184:	63 e5       	ldi	r22, 0x53	; 83
    1186:	73 e4       	ldi	r23, 0x43	; 67
    1188:	80 e1       	ldi	r24, 0x10	; 16
    118a:	5f d8       	rcall	.-3906   	; 0x24a <reg_servo_angle>
	reg_servo_angle(17, 82);
    118c:	40 e0       	ldi	r20, 0x00	; 0
    118e:	50 e0       	ldi	r21, 0x00	; 0
    1190:	64 ea       	ldi	r22, 0xA4	; 164
    1192:	72 e4       	ldi	r23, 0x42	; 66
    1194:	81 e1       	ldi	r24, 0x11	; 17
    1196:	59 d8       	rcall	.-3918   	; 0x24a <reg_servo_angle>
    1198:	8b e7       	ldi	r24, 0x7B	; 123
    119a:	92 e9       	ldi	r25, 0x92	; 146
    119c:	01 97       	sbiw	r24, 0x01	; 1
    119e:	f1 f7       	brne	.-4      	; 0x119c <seven_rot+0xdc>
    11a0:	00 c0       	rjmp	.+0      	; 0x11a2 <seven_rot+0xe2>
    11a2:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
    11a4:	76 c8       	rjmp	.-3860   	; 0x292 <action>
    11a6:	08 95       	ret

000011a8 <eight_rot>:

void eight_rot(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 150);
    11a8:	40 e0       	ldi	r20, 0x00	; 0
    11aa:	50 e0       	ldi	r21, 0x00	; 0
    11ac:	66 e1       	ldi	r22, 0x16	; 22
    11ae:	73 e4       	ldi	r23, 0x43	; 67
    11b0:	86 e0       	ldi	r24, 0x06	; 6
    11b2:	4b d8       	rcall	.-3946   	; 0x24a <reg_servo_angle>
	reg_servo_angle(7, 90);
    11b4:	40 e0       	ldi	r20, 0x00	; 0
    11b6:	50 e0       	ldi	r21, 0x00	; 0
    11b8:	64 eb       	ldi	r22, 0xB4	; 180
    11ba:	72 e4       	ldi	r23, 0x42	; 66
    11bc:	87 e0       	ldi	r24, 0x07	; 7
    11be:	45 d8       	rcall	.-3958   	; 0x24a <reg_servo_angle>
	reg_servo_angle(8, 220);
    11c0:	40 e0       	ldi	r20, 0x00	; 0
    11c2:	50 e0       	ldi	r21, 0x00	; 0
    11c4:	6c e5       	ldi	r22, 0x5C	; 92
    11c6:	73 e4       	ldi	r23, 0x43	; 67
    11c8:	88 e0       	ldi	r24, 0x08	; 8
    11ca:	3f d8       	rcall	.-3970   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(9, 150);
    11cc:	40 e0       	ldi	r20, 0x00	; 0
    11ce:	50 e0       	ldi	r21, 0x00	; 0
    11d0:	66 e1       	ldi	r22, 0x16	; 22
    11d2:	73 e4       	ldi	r23, 0x43	; 67
    11d4:	89 e0       	ldi	r24, 0x09	; 9
    11d6:	39 d8       	rcall	.-3982   	; 0x24a <reg_servo_angle>
	reg_servo_angle(10, 226);
    11d8:	40 e0       	ldi	r20, 0x00	; 0
    11da:	50 e0       	ldi	r21, 0x00	; 0
    11dc:	62 e6       	ldi	r22, 0x62	; 98
    11de:	73 e4       	ldi	r23, 0x43	; 67
    11e0:	8a e0       	ldi	r24, 0x0A	; 10
    11e2:	33 d8       	rcall	.-3994   	; 0x24a <reg_servo_angle>
	reg_servo_angle(11, 75);
    11e4:	40 e0       	ldi	r20, 0x00	; 0
    11e6:	50 e0       	ldi	r21, 0x00	; 0
    11e8:	66 e9       	ldi	r22, 0x96	; 150
    11ea:	72 e4       	ldi	r23, 0x42	; 66
    11ec:	8b e0       	ldi	r24, 0x0B	; 11
    11ee:	2d d8       	rcall	.-4006   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(3, 150);
    11f0:	40 e0       	ldi	r20, 0x00	; 0
    11f2:	50 e0       	ldi	r21, 0x00	; 0
    11f4:	66 e1       	ldi	r22, 0x16	; 22
    11f6:	73 e4       	ldi	r23, 0x43	; 67
    11f8:	83 e0       	ldi	r24, 0x03	; 3
    11fa:	27 d8       	rcall	.-4018   	; 0x24a <reg_servo_angle>
	reg_servo_angle(4, 74);
    11fc:	40 e0       	ldi	r20, 0x00	; 0
    11fe:	50 e0       	ldi	r21, 0x00	; 0
    1200:	64 e9       	ldi	r22, 0x94	; 148
    1202:	72 e4       	ldi	r23, 0x42	; 66
    1204:	84 e0       	ldi	r24, 0x04	; 4
    1206:	21 d8       	rcall	.-4030   	; 0x24a <reg_servo_angle>
	reg_servo_angle(5, 225);
    1208:	40 e0       	ldi	r20, 0x00	; 0
    120a:	50 e0       	ldi	r21, 0x00	; 0
    120c:	61 e6       	ldi	r22, 0x61	; 97
    120e:	73 e4       	ldi	r23, 0x43	; 67
    1210:	85 e0       	ldi	r24, 0x05	; 5
    1212:	1b d8       	rcall	.-4042   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(12, 150);
    1214:	40 e0       	ldi	r20, 0x00	; 0
    1216:	50 e0       	ldi	r21, 0x00	; 0
    1218:	66 e1       	ldi	r22, 0x16	; 22
    121a:	73 e4       	ldi	r23, 0x43	; 67
    121c:	8c e0       	ldi	r24, 0x0C	; 12
    121e:	15 d8       	rcall	.-4054   	; 0x24a <reg_servo_angle>
	reg_servo_angle(13, 210);
    1220:	40 e0       	ldi	r20, 0x00	; 0
    1222:	50 e0       	ldi	r21, 0x00	; 0
    1224:	62 e5       	ldi	r22, 0x52	; 82
    1226:	73 e4       	ldi	r23, 0x43	; 67
    1228:	8d e0       	ldi	r24, 0x0D	; 13
    122a:	0f d8       	rcall	.-4066   	; 0x24a <reg_servo_angle>
	reg_servo_angle(14, 80);
    122c:	40 e0       	ldi	r20, 0x00	; 0
    122e:	50 e0       	ldi	r21, 0x00	; 0
    1230:	60 ea       	ldi	r22, 0xA0	; 160
    1232:	72 e4       	ldi	r23, 0x42	; 66
    1234:	8e e0       	ldi	r24, 0x0E	; 14
    1236:	09 d8       	rcall	.-4078   	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(0, 150);
    1238:	40 e0       	ldi	r20, 0x00	; 0
    123a:	50 e0       	ldi	r21, 0x00	; 0
    123c:	66 e1       	ldi	r22, 0x16	; 22
    123e:	73 e4       	ldi	r23, 0x43	; 67
    1240:	80 e0       	ldi	r24, 0x00	; 0
    1242:	03 d8       	rcall	.-4090   	; 0x24a <reg_servo_angle>
	reg_servo_angle(1, 90);
    1244:	40 e0       	ldi	r20, 0x00	; 0
    1246:	50 e0       	ldi	r21, 0x00	; 0
    1248:	64 eb       	ldi	r22, 0xB4	; 180
    124a:	72 e4       	ldi	r23, 0x42	; 66
    124c:	81 e0       	ldi	r24, 0x01	; 1
    124e:	0e 94 25 01 	call	0x24a	; 0x24a <reg_servo_angle>
	reg_servo_angle(2, 220);
    1252:	40 e0       	ldi	r20, 0x00	; 0
    1254:	50 e0       	ldi	r21, 0x00	; 0
    1256:	6c e5       	ldi	r22, 0x5C	; 92
    1258:	73 e4       	ldi	r23, 0x43	; 67
    125a:	82 e0       	ldi	r24, 0x02	; 2
    125c:	0e 94 25 01 	call	0x24a	; 0x24a <reg_servo_angle>
	
	reg_servo_angle(15, 150);
    1260:	40 e0       	ldi	r20, 0x00	; 0
    1262:	50 e0       	ldi	r21, 0x00	; 0
    1264:	66 e1       	ldi	r22, 0x16	; 22
    1266:	73 e4       	ldi	r23, 0x43	; 67
    1268:	8f e0       	ldi	r24, 0x0F	; 15
    126a:	0e 94 25 01 	call	0x24a	; 0x24a <reg_servo_angle>
	reg_servo_angle(16, 226);
    126e:	40 e0       	ldi	r20, 0x00	; 0
    1270:	50 e0       	ldi	r21, 0x00	; 0
    1272:	62 e6       	ldi	r22, 0x62	; 98
    1274:	73 e4       	ldi	r23, 0x43	; 67
    1276:	80 e1       	ldi	r24, 0x10	; 16
    1278:	0e 94 25 01 	call	0x24a	; 0x24a <reg_servo_angle>
	reg_servo_angle(17, 75);
    127c:	40 e0       	ldi	r20, 0x00	; 0
    127e:	50 e0       	ldi	r21, 0x00	; 0
    1280:	66 e9       	ldi	r22, 0x96	; 150
    1282:	72 e4       	ldi	r23, 0x42	; 66
    1284:	81 e1       	ldi	r24, 0x11	; 17
    1286:	0e 94 25 01 	call	0x24a	; 0x24a <reg_servo_angle>
    128a:	8b e7       	ldi	r24, 0x7B	; 123
    128c:	92 e9       	ldi	r25, 0x92	; 146
    128e:	01 97       	sbiw	r24, 0x01	; 1
    1290:	f1 f7       	brne	.-4      	; 0x128e <eight_rot+0xe6>
    1292:	00 c0       	rjmp	.+0      	; 0x1294 <eight_rot+0xec>
    1294:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
    1296:	0c 94 49 01 	jmp	0x292	; 0x292 <action>
    129a:	08 95       	ret

0000129c <rot_right>:
}

//Funktion för att rotera åt höger (medurs)
void rot_right(void)
{
	seven_rot();
    129c:	11 df       	rcall	.-478    	; 0x10c0 <seven_rot>
	six_rot();
    129e:	9c de       	rcall	.-712    	; 0xfd8 <six_rot>
	five_rot();
    12a0:	27 de       	rcall	.-946    	; 0xef0 <five_rot>
	four_rot();
    12a2:	b2 dd       	rcall	.-1180   	; 0xe08 <four_rot>
	three_rot();
    12a4:	3d dd       	rcall	.-1414   	; 0xd20 <three_rot>
	two_rot();
    12a6:	c8 dc       	rcall	.-1648   	; 0xc38 <two_rot>
	one_rot();
    12a8:	53 dc       	rcall	.-1882   	; 0xb50 <one_rot>
	eight_rot();
    12aa:	7e cf       	rjmp	.-260    	; 0x11a8 <eight_rot>
    12ac:	08 95       	ret

000012ae <rot_left>:
}

//Funktion för at rotera åt vänster (moturs)
void rot_left(void)
{
	seven_rot();
    12ae:	08 df       	rcall	.-496    	; 0x10c0 <seven_rot>
	eight_rot();
    12b0:	7b df       	rcall	.-266    	; 0x11a8 <eight_rot>
	one_rot();
    12b2:	4e dc       	rcall	.-1892   	; 0xb50 <one_rot>
	two_rot();
    12b4:	c1 dc       	rcall	.-1662   	; 0xc38 <two_rot>
	three_rot();
    12b6:	34 dd       	rcall	.-1432   	; 0xd20 <three_rot>
	four_rot();
    12b8:	a7 dd       	rcall	.-1202   	; 0xe08 <four_rot>
	five_rot();
    12ba:	1a de       	rcall	.-972    	; 0xef0 <five_rot>
	six_rot();
    12bc:	8d ce       	rjmp	.-742    	; 0xfd8 <six_rot>
    12be:	08 95       	ret

000012c0 <forward_left>:
//Funktion för att gå framåt-vänster
void forward_left(void)
{
	for(int i = 0; i < 4; i++)
	{
		forward();
    12c0:	35 dc       	rcall	.-1942   	; 0xb2c <forward>
    12c2:	34 dc       	rcall	.-1944   	; 0xb2c <forward>
    12c4:	33 dc       	rcall	.-1946   	; 0xb2c <forward>
    12c6:	32 dc       	rcall	.-1948   	; 0xb2c <forward>
	}
	rot_left();
    12c8:	f2 cf       	rjmp	.-28     	; 0x12ae <rot_left>
    12ca:	08 95       	ret

000012cc <forward_right>:
//Funktion för att gå framåt-höger
void forward_right(void)
{
	for(int i = 0; i < 4; i++)
	{
		forward();
    12cc:	2f dc       	rcall	.-1954   	; 0xb2c <forward>
    12ce:	2e dc       	rcall	.-1956   	; 0xb2c <forward>
    12d0:	2d dc       	rcall	.-1958   	; 0xb2c <forward>
    12d2:	2c dc       	rcall	.-1960   	; 0xb2c <forward>
	}
	rot_right();
    12d4:	e3 cf       	rjmp	.-58     	; 0x129c <rot_right>
    12d6:	08 95       	ret

000012d8 <execute_command>:
/************************************************************************************************************
*********************************************  AVBROTT  *****************************************************
************************************************************************************************************/

void execute_command(void)
{
    12d8:	cf 93       	push	r28
	unsigned char data = 0;
	data = SPDR;
    12da:	ce b5       	in	r28, 0x2e	; 46
	if (is_moving)
    12dc:	90 91 01 01 	lds	r25, 0x0101
    12e0:	99 23       	and	r25, r25
    12e2:	31 f0       	breq	.+12     	; 0x12f0 <execute_command+0x18>
	{
		spi_tranceiver(NOT_READY);
    12e4:	80 ed       	ldi	r24, 0xD0	; 208
    12e6:	0e 94 66 01 	call	0x2cc	; 0x2cc <spi_tranceiver>
		data_sending = false;
    12ea:	10 92 00 01 	sts	0x0100, r1
		return;
    12ee:	45 c0       	rjmp	.+138    	; 0x137a <execute_command+0xa2>
	}
	spi_tranceiver(READY);
    12f0:	8f ef       	ldi	r24, 0xFF	; 255
    12f2:	0e 94 66 01 	call	0x2cc	; 0x2cc <spi_tranceiver>
	switch(data)
    12f6:	8c 2f       	mov	r24, r28
    12f8:	90 e0       	ldi	r25, 0x00	; 0
    12fa:	fc 01       	movw	r30, r24
    12fc:	31 97       	sbiw	r30, 0x01	; 1
    12fe:	e7 30       	cpi	r30, 0x07	; 7
    1300:	f1 05       	cpc	r31, r1
    1302:	08 f0       	brcs	.+2      	; 0x1306 <execute_command+0x2e>
    1304:	38 c0       	rjmp	.+112    	; 0x1376 <execute_command+0x9e>
    1306:	ea 5b       	subi	r30, 0xBA	; 186
    1308:	ff 4f       	sbci	r31, 0xFF	; 255
    130a:	47 c1       	rjmp	.+654    	; 0x159a <__tablejump2__>
	{
		case WALK_FORWARD :
			is_moving = true;
    130c:	81 e0       	ldi	r24, 0x01	; 1
    130e:	80 93 01 01 	sts	0x0101, r24
			forward();
    1312:	0c dc       	rcall	.-2024   	; 0xb2c <forward>
			is_moving = false;
    1314:	10 92 01 01 	sts	0x0101, r1
			led_blink_red(1);
    1318:	81 e0       	ldi	r24, 0x01	; 1
    131a:	90 e0       	ldi	r25, 0x00	; 0
    131c:	0e 94 5f 00 	call	0xbe	; 0xbe <led_blink_red>
			break;
    1320:	2a c0       	rjmp	.+84     	; 0x1376 <execute_command+0x9e>
		
		case WALK_BACKWARD :
			is_moving = true;
    1322:	81 e0       	ldi	r24, 0x01	; 1
    1324:	80 93 01 01 	sts	0x0101, r24
			backward();
    1328:	0a dc       	rcall	.-2028   	; 0xb3e <backward>
			is_moving = false;
    132a:	10 92 01 01 	sts	0x0101, r1
			break;
    132e:	23 c0       	rjmp	.+70     	; 0x1376 <execute_command+0x9e>
		
		case ROTATE_LEFT :
			is_moving = true;
    1330:	81 e0       	ldi	r24, 0x01	; 1
    1332:	80 93 01 01 	sts	0x0101, r24
			rot_left();
    1336:	bb df       	rcall	.-138    	; 0x12ae <rot_left>
			is_moving = false;
    1338:	10 92 01 01 	sts	0x0101, r1
			break;
    133c:	1c c0       	rjmp	.+56     	; 0x1376 <execute_command+0x9e>
		
		case ROTATE_RIGHT :
			is_moving = true;
    133e:	81 e0       	ldi	r24, 0x01	; 1
    1340:	80 93 01 01 	sts	0x0101, r24
			rot_right();
    1344:	ab df       	rcall	.-170    	; 0x129c <rot_right>
			is_moving = false;
    1346:	10 92 01 01 	sts	0x0101, r1
			break;
    134a:	15 c0       	rjmp	.+42     	; 0x1376 <execute_command+0x9e>
			
		case TURN_LEFT :
			is_moving = true;
    134c:	81 e0       	ldi	r24, 0x01	; 1
    134e:	80 93 01 01 	sts	0x0101, r24
			forward_left();
    1352:	b6 df       	rcall	.-148    	; 0x12c0 <forward_left>
			is_moving = false;
    1354:	10 92 01 01 	sts	0x0101, r1
			break;
    1358:	0e c0       	rjmp	.+28     	; 0x1376 <execute_command+0x9e>
			
		case TURN_RIGHT :
			is_moving = true;
    135a:	81 e0       	ldi	r24, 0x01	; 1
    135c:	80 93 01 01 	sts	0x0101, r24
			forward_right();
    1360:	b5 df       	rcall	.-150    	; 0x12cc <forward_right>
			is_moving = false;
    1362:	10 92 01 01 	sts	0x0101, r1
			break;
    1366:	07 c0       	rjmp	.+14     	; 0x1376 <execute_command+0x9e>
			
		case STAND_UP :
			is_moving = true;
    1368:	81 e0       	ldi	r24, 0x01	; 1
    136a:	80 93 01 01 	sts	0x0101, r24
			stand();
    136e:	0e 94 88 01 	call	0x310	; 0x310 <stand>
			is_moving = false;
    1372:	10 92 01 01 	sts	0x0101, r1
			break;
		
		default :
			break;
	}
	data_sending = false;
    1376:	10 92 00 01 	sts	0x0100, r1
	return;
}
    137a:	cf 91       	pop	r28
    137c:	08 95       	ret

0000137e <__vector_19>:

ISR(SPI_STC_vect)  
{  
    137e:	1f 92       	push	r1
    1380:	0f 92       	push	r0
    1382:	0f b6       	in	r0, 0x3f	; 63
    1384:	0f 92       	push	r0
    1386:	11 24       	eor	r1, r1
    1388:	0b b6       	in	r0, 0x3b	; 59
    138a:	0f 92       	push	r0
    138c:	2f 93       	push	r18
    138e:	3f 93       	push	r19
    1390:	4f 93       	push	r20
    1392:	5f 93       	push	r21
    1394:	6f 93       	push	r22
    1396:	7f 93       	push	r23
    1398:	8f 93       	push	r24
    139a:	9f 93       	push	r25
    139c:	af 93       	push	r26
    139e:	bf 93       	push	r27
    13a0:	ef 93       	push	r30
    13a2:	ff 93       	push	r31
	//led_blink_green(1);
	if (!(data_sending))
    13a4:	80 91 00 01 	lds	r24, 0x0100
    13a8:	81 11       	cpse	r24, r1
    13aa:	04 c0       	rjmp	.+8      	; 0x13b4 <__vector_19+0x36>
	{
		data_sending = true;
    13ac:	81 e0       	ldi	r24, 0x01	; 1
    13ae:	80 93 00 01 	sts	0x0100, r24
		execute_command();
    13b2:	92 df       	rcall	.-220    	; 0x12d8 <execute_command>
	}
}
    13b4:	ff 91       	pop	r31
    13b6:	ef 91       	pop	r30
    13b8:	bf 91       	pop	r27
    13ba:	af 91       	pop	r26
    13bc:	9f 91       	pop	r25
    13be:	8f 91       	pop	r24
    13c0:	7f 91       	pop	r23
    13c2:	6f 91       	pop	r22
    13c4:	5f 91       	pop	r21
    13c6:	4f 91       	pop	r20
    13c8:	3f 91       	pop	r19
    13ca:	2f 91       	pop	r18
    13cc:	0f 90       	pop	r0
    13ce:	0b be       	out	0x3b, r0	; 59
    13d0:	0f 90       	pop	r0
    13d2:	0f be       	out	0x3f, r0	; 63
    13d4:	0f 90       	pop	r0
    13d6:	1f 90       	pop	r1
    13d8:	18 95       	reti

000013da <__fixunssfsi>:
    13da:	33 d0       	rcall	.+102    	; 0x1442 <__fp_splitA>
    13dc:	88 f0       	brcs	.+34     	; 0x1400 <__fixunssfsi+0x26>
    13de:	9f 57       	subi	r25, 0x7F	; 127
    13e0:	90 f0       	brcs	.+36     	; 0x1406 <__fixunssfsi+0x2c>
    13e2:	b9 2f       	mov	r27, r25
    13e4:	99 27       	eor	r25, r25
    13e6:	b7 51       	subi	r27, 0x17	; 23
    13e8:	a0 f0       	brcs	.+40     	; 0x1412 <__fixunssfsi+0x38>
    13ea:	d1 f0       	breq	.+52     	; 0x1420 <__fixunssfsi+0x46>
    13ec:	66 0f       	add	r22, r22
    13ee:	77 1f       	adc	r23, r23
    13f0:	88 1f       	adc	r24, r24
    13f2:	99 1f       	adc	r25, r25
    13f4:	1a f0       	brmi	.+6      	; 0x13fc <__fixunssfsi+0x22>
    13f6:	ba 95       	dec	r27
    13f8:	c9 f7       	brne	.-14     	; 0x13ec <__fixunssfsi+0x12>
    13fa:	12 c0       	rjmp	.+36     	; 0x1420 <__fixunssfsi+0x46>
    13fc:	b1 30       	cpi	r27, 0x01	; 1
    13fe:	81 f0       	breq	.+32     	; 0x1420 <__fixunssfsi+0x46>
    1400:	3a d0       	rcall	.+116    	; 0x1476 <__fp_zero>
    1402:	b1 e0       	ldi	r27, 0x01	; 1
    1404:	08 95       	ret
    1406:	37 c0       	rjmp	.+110    	; 0x1476 <__fp_zero>
    1408:	67 2f       	mov	r22, r23
    140a:	78 2f       	mov	r23, r24
    140c:	88 27       	eor	r24, r24
    140e:	b8 5f       	subi	r27, 0xF8	; 248
    1410:	39 f0       	breq	.+14     	; 0x1420 <__fixunssfsi+0x46>
    1412:	b9 3f       	cpi	r27, 0xF9	; 249
    1414:	cc f3       	brlt	.-14     	; 0x1408 <__fixunssfsi+0x2e>
    1416:	86 95       	lsr	r24
    1418:	77 95       	ror	r23
    141a:	67 95       	ror	r22
    141c:	b3 95       	inc	r27
    141e:	d9 f7       	brne	.-10     	; 0x1416 <__fixunssfsi+0x3c>
    1420:	3e f4       	brtc	.+14     	; 0x1430 <__fixunssfsi+0x56>
    1422:	90 95       	com	r25
    1424:	80 95       	com	r24
    1426:	70 95       	com	r23
    1428:	61 95       	neg	r22
    142a:	7f 4f       	sbci	r23, 0xFF	; 255
    142c:	8f 4f       	sbci	r24, 0xFF	; 255
    142e:	9f 4f       	sbci	r25, 0xFF	; 255
    1430:	08 95       	ret

00001432 <__fp_split3>:
    1432:	57 fd       	sbrc	r21, 7
    1434:	90 58       	subi	r25, 0x80	; 128
    1436:	44 0f       	add	r20, r20
    1438:	55 1f       	adc	r21, r21
    143a:	59 f0       	breq	.+22     	; 0x1452 <__fp_splitA+0x10>
    143c:	5f 3f       	cpi	r21, 0xFF	; 255
    143e:	71 f0       	breq	.+28     	; 0x145c <__fp_splitA+0x1a>
    1440:	47 95       	ror	r20

00001442 <__fp_splitA>:
    1442:	88 0f       	add	r24, r24
    1444:	97 fb       	bst	r25, 7
    1446:	99 1f       	adc	r25, r25
    1448:	61 f0       	breq	.+24     	; 0x1462 <__fp_splitA+0x20>
    144a:	9f 3f       	cpi	r25, 0xFF	; 255
    144c:	79 f0       	breq	.+30     	; 0x146c <__fp_splitA+0x2a>
    144e:	87 95       	ror	r24
    1450:	08 95       	ret
    1452:	12 16       	cp	r1, r18
    1454:	13 06       	cpc	r1, r19
    1456:	14 06       	cpc	r1, r20
    1458:	55 1f       	adc	r21, r21
    145a:	f2 cf       	rjmp	.-28     	; 0x1440 <__fp_split3+0xe>
    145c:	46 95       	lsr	r20
    145e:	f1 df       	rcall	.-30     	; 0x1442 <__fp_splitA>
    1460:	08 c0       	rjmp	.+16     	; 0x1472 <__fp_splitA+0x30>
    1462:	16 16       	cp	r1, r22
    1464:	17 06       	cpc	r1, r23
    1466:	18 06       	cpc	r1, r24
    1468:	99 1f       	adc	r25, r25
    146a:	f1 cf       	rjmp	.-30     	; 0x144e <__fp_splitA+0xc>
    146c:	86 95       	lsr	r24
    146e:	71 05       	cpc	r23, r1
    1470:	61 05       	cpc	r22, r1
    1472:	08 94       	sec
    1474:	08 95       	ret

00001476 <__fp_zero>:
    1476:	e8 94       	clt

00001478 <__fp_szero>:
    1478:	bb 27       	eor	r27, r27
    147a:	66 27       	eor	r22, r22
    147c:	77 27       	eor	r23, r23
    147e:	cb 01       	movw	r24, r22
    1480:	97 f9       	bld	r25, 7
    1482:	08 95       	ret

00001484 <__mulsf3>:
    1484:	0b d0       	rcall	.+22     	; 0x149c <__mulsf3x>
    1486:	78 c0       	rjmp	.+240    	; 0x1578 <__fp_round>
    1488:	69 d0       	rcall	.+210    	; 0x155c <__fp_pscA>
    148a:	28 f0       	brcs	.+10     	; 0x1496 <__mulsf3+0x12>
    148c:	6e d0       	rcall	.+220    	; 0x156a <__fp_pscB>
    148e:	18 f0       	brcs	.+6      	; 0x1496 <__mulsf3+0x12>
    1490:	95 23       	and	r25, r21
    1492:	09 f0       	breq	.+2      	; 0x1496 <__mulsf3+0x12>
    1494:	5a c0       	rjmp	.+180    	; 0x154a <__fp_inf>
    1496:	5f c0       	rjmp	.+190    	; 0x1556 <__fp_nan>
    1498:	11 24       	eor	r1, r1
    149a:	ee cf       	rjmp	.-36     	; 0x1478 <__fp_szero>

0000149c <__mulsf3x>:
    149c:	ca df       	rcall	.-108    	; 0x1432 <__fp_split3>
    149e:	a0 f3       	brcs	.-24     	; 0x1488 <__mulsf3+0x4>

000014a0 <__mulsf3_pse>:
    14a0:	95 9f       	mul	r25, r21
    14a2:	d1 f3       	breq	.-12     	; 0x1498 <__mulsf3+0x14>
    14a4:	95 0f       	add	r25, r21
    14a6:	50 e0       	ldi	r21, 0x00	; 0
    14a8:	55 1f       	adc	r21, r21
    14aa:	62 9f       	mul	r22, r18
    14ac:	f0 01       	movw	r30, r0
    14ae:	72 9f       	mul	r23, r18
    14b0:	bb 27       	eor	r27, r27
    14b2:	f0 0d       	add	r31, r0
    14b4:	b1 1d       	adc	r27, r1
    14b6:	63 9f       	mul	r22, r19
    14b8:	aa 27       	eor	r26, r26
    14ba:	f0 0d       	add	r31, r0
    14bc:	b1 1d       	adc	r27, r1
    14be:	aa 1f       	adc	r26, r26
    14c0:	64 9f       	mul	r22, r20
    14c2:	66 27       	eor	r22, r22
    14c4:	b0 0d       	add	r27, r0
    14c6:	a1 1d       	adc	r26, r1
    14c8:	66 1f       	adc	r22, r22
    14ca:	82 9f       	mul	r24, r18
    14cc:	22 27       	eor	r18, r18
    14ce:	b0 0d       	add	r27, r0
    14d0:	a1 1d       	adc	r26, r1
    14d2:	62 1f       	adc	r22, r18
    14d4:	73 9f       	mul	r23, r19
    14d6:	b0 0d       	add	r27, r0
    14d8:	a1 1d       	adc	r26, r1
    14da:	62 1f       	adc	r22, r18
    14dc:	83 9f       	mul	r24, r19
    14de:	a0 0d       	add	r26, r0
    14e0:	61 1d       	adc	r22, r1
    14e2:	22 1f       	adc	r18, r18
    14e4:	74 9f       	mul	r23, r20
    14e6:	33 27       	eor	r19, r19
    14e8:	a0 0d       	add	r26, r0
    14ea:	61 1d       	adc	r22, r1
    14ec:	23 1f       	adc	r18, r19
    14ee:	84 9f       	mul	r24, r20
    14f0:	60 0d       	add	r22, r0
    14f2:	21 1d       	adc	r18, r1
    14f4:	82 2f       	mov	r24, r18
    14f6:	76 2f       	mov	r23, r22
    14f8:	6a 2f       	mov	r22, r26
    14fa:	11 24       	eor	r1, r1
    14fc:	9f 57       	subi	r25, 0x7F	; 127
    14fe:	50 40       	sbci	r21, 0x00	; 0
    1500:	8a f0       	brmi	.+34     	; 0x1524 <__mulsf3_pse+0x84>
    1502:	e1 f0       	breq	.+56     	; 0x153c <__mulsf3_pse+0x9c>
    1504:	88 23       	and	r24, r24
    1506:	4a f0       	brmi	.+18     	; 0x151a <__mulsf3_pse+0x7a>
    1508:	ee 0f       	add	r30, r30
    150a:	ff 1f       	adc	r31, r31
    150c:	bb 1f       	adc	r27, r27
    150e:	66 1f       	adc	r22, r22
    1510:	77 1f       	adc	r23, r23
    1512:	88 1f       	adc	r24, r24
    1514:	91 50       	subi	r25, 0x01	; 1
    1516:	50 40       	sbci	r21, 0x00	; 0
    1518:	a9 f7       	brne	.-22     	; 0x1504 <__mulsf3_pse+0x64>
    151a:	9e 3f       	cpi	r25, 0xFE	; 254
    151c:	51 05       	cpc	r21, r1
    151e:	70 f0       	brcs	.+28     	; 0x153c <__mulsf3_pse+0x9c>
    1520:	14 c0       	rjmp	.+40     	; 0x154a <__fp_inf>
    1522:	aa cf       	rjmp	.-172    	; 0x1478 <__fp_szero>
    1524:	5f 3f       	cpi	r21, 0xFF	; 255
    1526:	ec f3       	brlt	.-6      	; 0x1522 <__mulsf3_pse+0x82>
    1528:	98 3e       	cpi	r25, 0xE8	; 232
    152a:	dc f3       	brlt	.-10     	; 0x1522 <__mulsf3_pse+0x82>
    152c:	86 95       	lsr	r24
    152e:	77 95       	ror	r23
    1530:	67 95       	ror	r22
    1532:	b7 95       	ror	r27
    1534:	f7 95       	ror	r31
    1536:	e7 95       	ror	r30
    1538:	9f 5f       	subi	r25, 0xFF	; 255
    153a:	c1 f7       	brne	.-16     	; 0x152c <__mulsf3_pse+0x8c>
    153c:	fe 2b       	or	r31, r30
    153e:	88 0f       	add	r24, r24
    1540:	91 1d       	adc	r25, r1
    1542:	96 95       	lsr	r25
    1544:	87 95       	ror	r24
    1546:	97 f9       	bld	r25, 7
    1548:	08 95       	ret

0000154a <__fp_inf>:
    154a:	97 f9       	bld	r25, 7
    154c:	9f 67       	ori	r25, 0x7F	; 127
    154e:	80 e8       	ldi	r24, 0x80	; 128
    1550:	70 e0       	ldi	r23, 0x00	; 0
    1552:	60 e0       	ldi	r22, 0x00	; 0
    1554:	08 95       	ret

00001556 <__fp_nan>:
    1556:	9f ef       	ldi	r25, 0xFF	; 255
    1558:	80 ec       	ldi	r24, 0xC0	; 192
    155a:	08 95       	ret

0000155c <__fp_pscA>:
    155c:	00 24       	eor	r0, r0
    155e:	0a 94       	dec	r0
    1560:	16 16       	cp	r1, r22
    1562:	17 06       	cpc	r1, r23
    1564:	18 06       	cpc	r1, r24
    1566:	09 06       	cpc	r0, r25
    1568:	08 95       	ret

0000156a <__fp_pscB>:
    156a:	00 24       	eor	r0, r0
    156c:	0a 94       	dec	r0
    156e:	12 16       	cp	r1, r18
    1570:	13 06       	cpc	r1, r19
    1572:	14 06       	cpc	r1, r20
    1574:	05 06       	cpc	r0, r21
    1576:	08 95       	ret

00001578 <__fp_round>:
    1578:	09 2e       	mov	r0, r25
    157a:	03 94       	inc	r0
    157c:	00 0c       	add	r0, r0
    157e:	11 f4       	brne	.+4      	; 0x1584 <__fp_round+0xc>
    1580:	88 23       	and	r24, r24
    1582:	52 f0       	brmi	.+20     	; 0x1598 <__fp_round+0x20>
    1584:	bb 0f       	add	r27, r27
    1586:	40 f4       	brcc	.+16     	; 0x1598 <__fp_round+0x20>
    1588:	bf 2b       	or	r27, r31
    158a:	11 f4       	brne	.+4      	; 0x1590 <__fp_round+0x18>
    158c:	60 ff       	sbrs	r22, 0
    158e:	04 c0       	rjmp	.+8      	; 0x1598 <__fp_round+0x20>
    1590:	6f 5f       	subi	r22, 0xFF	; 255
    1592:	7f 4f       	sbci	r23, 0xFF	; 255
    1594:	8f 4f       	sbci	r24, 0xFF	; 255
    1596:	9f 4f       	sbci	r25, 0xFF	; 255
    1598:	08 95       	ret

0000159a <__tablejump2__>:
    159a:	ee 0f       	add	r30, r30
    159c:	ff 1f       	adc	r31, r31

0000159e <__tablejump__>:
    159e:	05 90       	lpm	r0, Z+
    15a0:	f4 91       	lpm	r31, Z
    15a2:	e0 2d       	mov	r30, r0
    15a4:	09 94       	ijmp

000015a6 <_exit>:
    15a6:	f8 94       	cli

000015a8 <__stop_program>:
    15a8:	ff cf       	rjmp	.-2      	; 0x15a8 <__stop_program>
