
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001632  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000002  00800100  00800100  000016a6  2**0
                  ALLOC
  2 .comment      00000030  00000000  00000000  000016a6  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000208  00000000  00000000  000016d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000049de  00000000  00000000  000018de  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000006f2  00000000  00000000  000062bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000015c8  00000000  00000000  000069ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000494  00000000  00000000  00007f78  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000051d  00000000  00000000  0000840c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000c3e  00000000  00000000  00008929  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000001a8  00000000  00000000  00009567  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	4c c0       	rjmp	.+152    	; 0x9a <__ctors_end>
       2:	00 00       	nop
       4:	5b c0       	rjmp	.+182    	; 0xbc <__bad_interrupt>
       6:	00 00       	nop
       8:	59 c0       	rjmp	.+178    	; 0xbc <__bad_interrupt>
       a:	00 00       	nop
       c:	57 c0       	rjmp	.+174    	; 0xbc <__bad_interrupt>
       e:	00 00       	nop
      10:	55 c0       	rjmp	.+170    	; 0xbc <__bad_interrupt>
      12:	00 00       	nop
      14:	53 c0       	rjmp	.+166    	; 0xbc <__bad_interrupt>
      16:	00 00       	nop
      18:	51 c0       	rjmp	.+162    	; 0xbc <__bad_interrupt>
      1a:	00 00       	nop
      1c:	4f c0       	rjmp	.+158    	; 0xbc <__bad_interrupt>
      1e:	00 00       	nop
      20:	4d c0       	rjmp	.+154    	; 0xbc <__bad_interrupt>
      22:	00 00       	nop
      24:	4b c0       	rjmp	.+150    	; 0xbc <__bad_interrupt>
      26:	00 00       	nop
      28:	49 c0       	rjmp	.+146    	; 0xbc <__bad_interrupt>
      2a:	00 00       	nop
      2c:	47 c0       	rjmp	.+142    	; 0xbc <__bad_interrupt>
      2e:	00 00       	nop
      30:	45 c0       	rjmp	.+138    	; 0xbc <__bad_interrupt>
      32:	00 00       	nop
      34:	43 c0       	rjmp	.+134    	; 0xbc <__bad_interrupt>
      36:	00 00       	nop
      38:	41 c0       	rjmp	.+130    	; 0xbc <__bad_interrupt>
      3a:	00 00       	nop
      3c:	3f c0       	rjmp	.+126    	; 0xbc <__bad_interrupt>
      3e:	00 00       	nop
      40:	3d c0       	rjmp	.+122    	; 0xbc <__bad_interrupt>
      42:	00 00       	nop
      44:	3b c0       	rjmp	.+118    	; 0xbc <__bad_interrupt>
      46:	00 00       	nop
      48:	39 c0       	rjmp	.+114    	; 0xbc <__bad_interrupt>
      4a:	00 00       	nop
      4c:	0c 94 03 0a 	jmp	0x1406	; 0x1406 <__vector_19>
      50:	35 c0       	rjmp	.+106    	; 0xbc <__bad_interrupt>
      52:	00 00       	nop
      54:	33 c0       	rjmp	.+102    	; 0xbc <__bad_interrupt>
      56:	00 00       	nop
      58:	31 c0       	rjmp	.+98     	; 0xbc <__bad_interrupt>
      5a:	00 00       	nop
      5c:	2f c0       	rjmp	.+94     	; 0xbc <__bad_interrupt>
      5e:	00 00       	nop
      60:	2d c0       	rjmp	.+90     	; 0xbc <__bad_interrupt>
      62:	00 00       	nop
      64:	2b c0       	rjmp	.+86     	; 0xbc <__bad_interrupt>
      66:	00 00       	nop
      68:	29 c0       	rjmp	.+82     	; 0xbc <__bad_interrupt>
      6a:	00 00       	nop
      6c:	27 c0       	rjmp	.+78     	; 0xbc <__bad_interrupt>
      6e:	00 00       	nop
      70:	25 c0       	rjmp	.+74     	; 0xbc <__bad_interrupt>
      72:	00 00       	nop
      74:	23 c0       	rjmp	.+70     	; 0xbc <__bad_interrupt>
      76:	00 00       	nop
      78:	21 c0       	rjmp	.+66     	; 0xbc <__bad_interrupt>
      7a:	00 00       	nop
      7c:	1f c0       	rjmp	.+62     	; 0xbc <__bad_interrupt>
      7e:	00 00       	nop
      80:	1d c0       	rjmp	.+58     	; 0xbc <__bad_interrupt>
      82:	00 00       	nop
      84:	1b c0       	rjmp	.+54     	; 0xbc <__bad_interrupt>
      86:	00 00       	nop
      88:	19 c0       	rjmp	.+50     	; 0xbc <__bad_interrupt>
      8a:	00 00       	nop
      8c:	ca 09       	sbc	r28, r10
      8e:	d5 09       	sbc	r29, r5
      90:	dc 09       	sbc	r29, r12
      92:	e3 09       	sbc	r30, r3
      94:	ea 09       	sbc	r30, r10
      96:	f1 09       	sbc	r31, r1
      98:	f8 09       	sbc	r31, r8

0000009a <__ctors_end>:
      9a:	11 24       	eor	r1, r1
      9c:	1f be       	out	0x3f, r1	; 63
      9e:	cf ef       	ldi	r28, 0xFF	; 255
      a0:	d0 e4       	ldi	r29, 0x40	; 64
      a2:	de bf       	out	0x3e, r29	; 62
      a4:	cd bf       	out	0x3d, r28	; 61

000000a6 <__do_clear_bss>:
      a6:	21 e0       	ldi	r18, 0x01	; 1
      a8:	a0 e0       	ldi	r26, 0x00	; 0
      aa:	b1 e0       	ldi	r27, 0x01	; 1
      ac:	01 c0       	rjmp	.+2      	; 0xb0 <.do_clear_bss_start>

000000ae <.do_clear_bss_loop>:
      ae:	1d 92       	st	X+, r1

000000b0 <.do_clear_bss_start>:
      b0:	a2 30       	cpi	r26, 0x02	; 2
      b2:	b2 07       	cpc	r27, r18
      b4:	e1 f7       	brne	.-8      	; 0xae <.do_clear_bss_loop>
      b6:	22 d0       	rcall	.+68     	; 0xfc <main>
      b8:	0c 94 17 0b 	jmp	0x162e	; 0x162e <_exit>

000000bc <__bad_interrupt>:
      bc:	a1 cf       	rjmp	.-190    	; 0x0 <__vectors>

000000be <led_blink_red>:
#include "led.h"

void led_blink_red (uint16_t i)
{
	//Blink LED "i" number of times
	for (; i>0; --i)
      be:	00 97       	sbiw	r24, 0x00	; 0
      c0:	b9 f0       	breq	.+46     	; 0xf0 <led_blink_red+0x32>
	{
		PORTB|=(1<<0);
      c2:	28 9a       	sbi	0x05, 0	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      c4:	2f ef       	ldi	r18, 0xFF	; 255
      c6:	39 e6       	ldi	r19, 0x69	; 105
      c8:	48 e1       	ldi	r20, 0x18	; 24
      ca:	21 50       	subi	r18, 0x01	; 1
      cc:	30 40       	sbci	r19, 0x00	; 0
      ce:	40 40       	sbci	r20, 0x00	; 0
      d0:	e1 f7       	brne	.-8      	; 0xca <led_blink_red+0xc>
      d2:	00 c0       	rjmp	.+0      	; 0xd4 <led_blink_red+0x16>
      d4:	00 00       	nop
		_delay_ms(500);
		PORTB=(0<<0);
      d6:	15 b8       	out	0x05, r1	; 5
      d8:	2f ef       	ldi	r18, 0xFF	; 255
      da:	39 e6       	ldi	r19, 0x69	; 105
      dc:	48 e1       	ldi	r20, 0x18	; 24
      de:	21 50       	subi	r18, 0x01	; 1
      e0:	30 40       	sbci	r19, 0x00	; 0
      e2:	40 40       	sbci	r20, 0x00	; 0
      e4:	e1 f7       	brne	.-8      	; 0xde <led_blink_red+0x20>
      e6:	00 c0       	rjmp	.+0      	; 0xe8 <led_blink_red+0x2a>
      e8:	00 00       	nop
#include "led.h"

void led_blink_red (uint16_t i)
{
	//Blink LED "i" number of times
	for (; i>0; --i)
      ea:	01 97       	sbiw	r24, 0x01	; 1
      ec:	00 97       	sbiw	r24, 0x00	; 0
      ee:	49 f7       	brne	.-46     	; 0xc2 <led_blink_red+0x4>
      f0:	08 95       	ret

000000f2 <main_init>:
#include "walk.h"

void main_init(void)
{
	spi_init();
      f2:	ee d0       	rcall	.+476    	; 0x2d0 <spi_init>
	data_direction_init();
      f4:	fa d0       	rcall	.+500    	; 0x2ea <data_direction_init>
	uart_init();
      f6:	04 d1       	rcall	.+520    	; 0x300 <uart_init>
	servo_init();
      f8:	df c0       	rjmp	.+446    	; 0x2b8 <servo_init>
      fa:	08 95       	ret

000000fc <main>:
/************************************************************************************************************
************************************************  HUVUDFUNKTION  ********************************************
************************************************************************************************************/

int main(void)
{
      fc:	cf 93       	push	r28
      fe:	df 93       	push	r29
	main_init();
     100:	f8 df       	rcall	.-16     	; 0xf2 <main_init>
     102:	2f ef       	ldi	r18, 0xFF	; 255
     104:	87 ea       	ldi	r24, 0xA7	; 167
     106:	91 e6       	ldi	r25, 0x61	; 97
     108:	21 50       	subi	r18, 0x01	; 1
     10a:	80 40       	sbci	r24, 0x00	; 0
     10c:	90 40       	sbci	r25, 0x00	; 0
     10e:	e1 f7       	brne	.-8      	; 0x108 <main+0xc>
     110:	00 c0       	rjmp	.+0      	; 0x112 <main+0x16>
     112:	00 00       	nop
	_delay_ms(2000);
	stand();
     114:	08 d1       	rcall	.+528    	; 0x326 <stand>
     116:	2f ef       	ldi	r18, 0xFF	; 255
     118:	83 e2       	ldi	r24, 0x23	; 35
     11a:	94 ef       	ldi	r25, 0xF4	; 244
     11c:	21 50       	subi	r18, 0x01	; 1
     11e:	80 40       	sbci	r24, 0x00	; 0
     120:	90 40       	sbci	r25, 0x00	; 0
     122:	e1 f7       	brne	.-8      	; 0x11c <main+0x20>
     124:	00 c0       	rjmp	.+0      	; 0x126 <main+0x2a>
     126:	00 00       	nop
     128:	c0 e1       	ldi	r28, 0x10	; 16
     12a:	d0 e0       	ldi	r29, 0x00	; 0
	_delay_ms(5000);
	
	for(int i = 0; i < 16; i++)
	{
		rot_right();
     12c:	0e 94 92 09 	call	0x1324	; 0x1324 <rot_right>
     130:	21 97       	sbiw	r28, 0x01	; 1
	main_init();
	_delay_ms(2000);
	stand();
	_delay_ms(5000);
	
	for(int i = 0; i < 16; i++)
     132:	20 97       	sbiw	r28, 0x00	; 0
     134:	d9 f7       	brne	.-10     	; 0x12c <main+0x30>
     136:	c3 e1       	ldi	r28, 0x13	; 19
     138:	d0 e0       	ldi	r29, 0x00	; 0
		rot_right();
	}
	
	for(int i = 0; i < 19; i++)
	{
		rot_left();
     13a:	0e 94 9b 09 	call	0x1336	; 0x1336 <rot_left>
     13e:	21 97       	sbiw	r28, 0x01	; 1
	for(int i = 0; i < 16; i++)
	{
		rot_right();
	}
	
	for(int i = 0; i < 19; i++)
     140:	20 97       	sbiw	r28, 0x00	; 0
     142:	d9 f7       	brne	.-10     	; 0x13a <main+0x3e>
	}
	
*/
	
	return 0;
}
     144:	80 e0       	ldi	r24, 0x00	; 0
     146:	90 e0       	ldi	r25, 0x00	; 0
     148:	df 91       	pop	r29
     14a:	cf 91       	pop	r28
     14c:	08 95       	ret

0000014e <send_servo_command>:

	const uint8_t highByte2 = (uint8_t)((higherLimit >> 8) & 0xff);
	const uint8_t lowByte2 = (uint8_t)(higherLimit & 0xff);
	const uint8_t params2[3] = {HIGHER_ANGLE_LIMIT, lowByte2, highByte2};
	send_servo_command(servoId, WRITE, 3, params2);
}
     14e:	df 92       	push	r13
     150:	ef 92       	push	r14
     152:	ff 92       	push	r15
     154:	0f 93       	push	r16
     156:	1f 93       	push	r17
     158:	cf 93       	push	r28
     15a:	df 93       	push	r29
     15c:	c8 2f       	mov	r28, r24
     15e:	e6 2e       	mov	r14, r22
     160:	d4 2e       	mov	r13, r20
     162:	02 2f       	mov	r16, r18
     164:	13 2f       	mov	r17, r19
     166:	c8 d0       	rcall	.+400    	; 0x2f8 <send_mode>
     168:	e0 ec       	ldi	r30, 0xC0	; 192
     16a:	f0 e0       	ldi	r31, 0x00	; 0
     16c:	80 81       	ld	r24, Z
     16e:	80 83       	st	Z, r24
     170:	8f ef       	ldi	r24, 0xFF	; 255
     172:	d1 d0       	rcall	.+418    	; 0x316 <uart_transmit>
     174:	8f ef       	ldi	r24, 0xFF	; 255
     176:	cf d0       	rcall	.+414    	; 0x316 <uart_transmit>
     178:	8c 2f       	mov	r24, r28
     17a:	cd d0       	rcall	.+410    	; 0x316 <uart_transmit>
     17c:	82 e0       	ldi	r24, 0x02	; 2
     17e:	8d 0d       	add	r24, r13
     180:	ca d0       	rcall	.+404    	; 0x316 <uart_transmit>
     182:	8e 2d       	mov	r24, r14
     184:	c8 d0       	rcall	.+400    	; 0x316 <uart_transmit>
     186:	e3 94       	inc	r14
     188:	e3 94       	inc	r14
     18a:	ed 0c       	add	r14, r13
     18c:	ec 0e       	add	r14, r28
     18e:	dd 20       	and	r13, r13
     190:	61 f0       	breq	.+24     	; 0x1aa <send_servo_command+0x5c>
     192:	c0 2f       	mov	r28, r16
     194:	d1 2f       	mov	r29, r17
     196:	f1 2c       	mov	r15, r1
     198:	8e 01       	movw	r16, r28
     19a:	89 91       	ld	r24, Y+
     19c:	bc d0       	rcall	.+376    	; 0x316 <uart_transmit>
     19e:	f8 01       	movw	r30, r16
     1a0:	80 81       	ld	r24, Z
     1a2:	e8 0e       	add	r14, r24
     1a4:	f3 94       	inc	r15
     1a6:	fd 10       	cpse	r15, r13
     1a8:	f7 cf       	rjmp	.-18     	; 0x198 <send_servo_command+0x4a>
     1aa:	f8 94       	cli
     1ac:	8e 2d       	mov	r24, r14
     1ae:	80 95       	com	r24
     1b0:	b2 d0       	rcall	.+356    	; 0x316 <uart_transmit>
     1b2:	e0 ec       	ldi	r30, 0xC0	; 192
     1b4:	f0 e0       	ldi	r31, 0x00	; 0
     1b6:	80 81       	ld	r24, Z
     1b8:	86 ff       	sbrs	r24, 6
     1ba:	fd cf       	rjmp	.-6      	; 0x1b6 <send_servo_command+0x68>
     1bc:	99 d0       	rcall	.+306    	; 0x2f0 <recieve_mode>
     1be:	78 94       	sei
     1c0:	df 91       	pop	r29
     1c2:	cf 91       	pop	r28
     1c4:	1f 91       	pop	r17
     1c6:	0f 91       	pop	r16
     1c8:	ff 90       	pop	r15
     1ca:	ef 90       	pop	r14
     1cc:	df 90       	pop	r13
     1ce:	08 95       	ret

000001d0 <set_servo_status_return_level>:
     1d0:	cf 93       	push	r28
     1d2:	df 93       	push	r29
     1d4:	00 d0       	rcall	.+0      	; 0x1d6 <set_servo_status_return_level+0x6>
     1d6:	cd b7       	in	r28, 0x3d	; 61
     1d8:	de b7       	in	r29, 0x3e	; 62
     1da:	90 e1       	ldi	r25, 0x10	; 16
     1dc:	99 83       	std	Y+1, r25	; 0x01
     1de:	6a 83       	std	Y+2, r22	; 0x02
     1e0:	9e 01       	movw	r18, r28
     1e2:	2f 5f       	subi	r18, 0xFF	; 255
     1e4:	3f 4f       	sbci	r19, 0xFF	; 255
     1e6:	42 e0       	ldi	r20, 0x02	; 2
     1e8:	63 e0       	ldi	r22, 0x03	; 3
     1ea:	b1 df       	rcall	.-158    	; 0x14e <send_servo_command>
     1ec:	0f 90       	pop	r0
     1ee:	0f 90       	pop	r0
     1f0:	df 91       	pop	r29
     1f2:	cf 91       	pop	r28
     1f4:	08 95       	ret

000001f6 <set_servo_max_speed>:
     1f6:	cf 93       	push	r28
     1f8:	df 93       	push	r29
     1fa:	00 d0       	rcall	.+0      	; 0x1fc <set_servo_max_speed+0x6>
     1fc:	1f 92       	push	r1
     1fe:	cd b7       	in	r28, 0x3d	; 61
     200:	de b7       	in	r29, 0x3e	; 62
     202:	90 e2       	ldi	r25, 0x20	; 32
     204:	99 83       	std	Y+1, r25	; 0x01
     206:	6a 83       	std	Y+2, r22	; 0x02
     208:	7b 83       	std	Y+3, r23	; 0x03
     20a:	9e 01       	movw	r18, r28
     20c:	2f 5f       	subi	r18, 0xFF	; 255
     20e:	3f 4f       	sbci	r19, 0xFF	; 255
     210:	43 e0       	ldi	r20, 0x03	; 3
     212:	63 e0       	ldi	r22, 0x03	; 3
     214:	9c df       	rcall	.-200    	; 0x14e <send_servo_command>
     216:	0f 90       	pop	r0
     218:	0f 90       	pop	r0
     21a:	0f 90       	pop	r0
     21c:	df 91       	pop	r29
     21e:	cf 91       	pop	r28
     220:	08 95       	ret

00000222 <set_servo_torque>:
     222:	cf 93       	push	r28
     224:	df 93       	push	r29
     226:	00 d0       	rcall	.+0      	; 0x228 <set_servo_torque+0x6>
     228:	1f 92       	push	r1
     22a:	cd b7       	in	r28, 0x3d	; 61
     22c:	de b7       	in	r29, 0x3e	; 62
     22e:	92 e2       	ldi	r25, 0x22	; 34
     230:	99 83       	std	Y+1, r25	; 0x01
     232:	6a 83       	std	Y+2, r22	; 0x02
     234:	7b 83       	std	Y+3, r23	; 0x03
     236:	9e 01       	movw	r18, r28
     238:	2f 5f       	subi	r18, 0xFF	; 255
     23a:	3f 4f       	sbci	r19, 0xFF	; 255
     23c:	43 e0       	ldi	r20, 0x03	; 3
     23e:	63 e0       	ldi	r22, 0x03	; 3
     240:	86 df       	rcall	.-244    	; 0x14e <send_servo_command>
     242:	0f 90       	pop	r0
     244:	0f 90       	pop	r0
     246:	0f 90       	pop	r0
     248:	df 91       	pop	r29
     24a:	cf 91       	pop	r28
     24c:	08 95       	ret

0000024e <reg_servo_angle>:

//Laddar ett servo med en vinkel
void reg_servo_angle (const uint8_t servoId, const float angle)
{
     24e:	1f 93       	push	r17
     250:	cf 93       	push	r28
     252:	df 93       	push	r29
     254:	00 d0       	rcall	.+0      	; 0x256 <reg_servo_angle+0x8>
     256:	1f 92       	push	r1
     258:	cd b7       	in	r28, 0x3d	; 61
     25a:	de b7       	in	r29, 0x3e	; 62
     25c:	18 2f       	mov	r17, r24
     25e:	cb 01       	movw	r24, r22
     260:	ba 01       	movw	r22, r20
	const uint16_t angleValue = (uint16_t)(angle * (1023.0 / 300.0));
     262:	21 e7       	ldi	r18, 0x71	; 113
     264:	3d e3       	ldi	r19, 0x3D	; 61
     266:	4a e5       	ldi	r20, 0x5A	; 90
     268:	50 e4       	ldi	r21, 0x40	; 64
     26a:	0e 94 86 0a 	call	0x150c	; 0x150c <__mulsf3>
     26e:	0e 94 31 0a 	call	0x1462	; 0x1462 <__fixunssfsi>
	const uint8_t highByte = (uint8_t)((angleValue >> 8) & 0xff);
	const uint8_t lowByte = (uint8_t)(angleValue & 0xff);
	const uint8_t params[3] = {GOAL_ANGLE, lowByte, highByte};
     272:	8e e1       	ldi	r24, 0x1E	; 30
     274:	89 83       	std	Y+1, r24	; 0x01
//Laddar ett servo med en vinkel
void reg_servo_angle (const uint8_t servoId, const float angle)
{
	const uint16_t angleValue = (uint16_t)(angle * (1023.0 / 300.0));
	const uint8_t highByte = (uint8_t)((angleValue >> 8) & 0xff);
	const uint8_t lowByte = (uint8_t)(angleValue & 0xff);
     276:	6a 83       	std	Y+2, r22	; 0x02

//Laddar ett servo med en vinkel
void reg_servo_angle (const uint8_t servoId, const float angle)
{
	const uint16_t angleValue = (uint16_t)(angle * (1023.0 / 300.0));
	const uint8_t highByte = (uint8_t)((angleValue >> 8) & 0xff);
     278:	7b 83       	std	Y+3, r23	; 0x03
	const uint8_t lowByte = (uint8_t)(angleValue & 0xff);
	const uint8_t params[3] = {GOAL_ANGLE, lowByte, highByte};
	send_servo_command (servoId, REG, 3, params);
     27a:	9e 01       	movw	r18, r28
     27c:	2f 5f       	subi	r18, 0xFF	; 255
     27e:	3f 4f       	sbci	r19, 0xFF	; 255
     280:	43 e0       	ldi	r20, 0x03	; 3
     282:	64 e0       	ldi	r22, 0x04	; 4
     284:	81 2f       	mov	r24, r17
     286:	63 df       	rcall	.-314    	; 0x14e <send_servo_command>
}
     288:	0f 90       	pop	r0
     28a:	0f 90       	pop	r0
     28c:	0f 90       	pop	r0
     28e:	df 91       	pop	r29
     290:	cf 91       	pop	r28
     292:	1f 91       	pop	r17
     294:	08 95       	ret

00000296 <action>:

//Utför de instruktioner som servona har laddats med
void action(void)
{
     296:	cf 93       	push	r28
     298:	df 93       	push	r29
     29a:	1f 92       	push	r1
     29c:	cd b7       	in	r28, 0x3d	; 61
     29e:	de b7       	in	r29, 0x3e	; 62
	const uint8_t params[1] = {0};
     2a0:	19 82       	std	Y+1, r1	; 0x01
	send_servo_command (0xfe, ACTION, 0, params);
     2a2:	9e 01       	movw	r18, r28
     2a4:	2f 5f       	subi	r18, 0xFF	; 255
     2a6:	3f 4f       	sbci	r19, 0xFF	; 255
     2a8:	40 e0       	ldi	r20, 0x00	; 0
     2aa:	65 e0       	ldi	r22, 0x05	; 5
     2ac:	8e ef       	ldi	r24, 0xFE	; 254
     2ae:	4f df       	rcall	.-354    	; 0x14e <send_servo_command>
}
     2b0:	0f 90       	pop	r0
     2b2:	df 91       	pop	r29
     2b4:	cf 91       	pop	r28
     2b6:	08 95       	ret

000002b8 <servo_init>:
************************************************************************************************************/

//Initiera standardinställningar för servona
void servo_init(void)
{
	set_servo_status_return_level(0xfe, 0x01);
     2b8:	61 e0       	ldi	r22, 0x01	; 1
     2ba:	8e ef       	ldi	r24, 0xFE	; 254
     2bc:	89 df       	rcall	.-238    	; 0x1d0 <set_servo_status_return_level>
	set_servo_torque(0xfe, 1023);
     2be:	6f ef       	ldi	r22, 0xFF	; 255
     2c0:	73 e0       	ldi	r23, 0x03	; 3
     2c2:	8e ef       	ldi	r24, 0xFE	; 254
     2c4:	ae df       	rcall	.-164    	; 0x222 <set_servo_torque>
	set_servo_max_speed(0xfe, 150);
     2c6:	66 e9       	ldi	r22, 0x96	; 150
     2c8:	70 e0       	ldi	r23, 0x00	; 0
     2ca:	8e ef       	ldi	r24, 0xFE	; 254
     2cc:	94 cf       	rjmp	.-216    	; 0x1f6 <set_servo_max_speed>
     2ce:	08 95       	ret

000002d0 <spi_init>:

#include "spi_slave.h"

void spi_init(void)
{
	SPCR |= (1 << SPIE);
     2d0:	8c b5       	in	r24, 0x2c	; 44
     2d2:	80 68       	ori	r24, 0x80	; 128
     2d4:	8c bd       	out	0x2c, r24	; 44
	SPCR |= (1 << SPE);  //Enable SPI
     2d6:	8c b5       	in	r24, 0x2c	; 44
     2d8:	80 64       	ori	r24, 0x40	; 64
     2da:	8c bd       	out	0x2c, r24	; 44
     2dc:	08 95       	ret

000002de <spi_tranceiver>:
}

//Function to send and receive data
unsigned char spi_tranceiver (unsigned char indata)
{	
	SPDR = indata;											//Load data into buffer
     2de:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF)));							//Wait until transmission complete
     2e0:	0d b4       	in	r0, 0x2d	; 45
     2e2:	07 fe       	sbrs	r0, 7
     2e4:	fd cf       	rjmp	.-6      	; 0x2e0 <spi_tranceiver+0x2>
	return SPDR;											//Return received data
     2e6:	8e b5       	in	r24, 0x2e	; 46
}
     2e8:	08 95       	ret

000002ea <data_direction_init>:

void data_direction_init(void)
{
	DDRB = (1<<DDB0)|(1<<DDB1)|(1<<DDB2)|(1<<DDB6);			//Set PB0, PB1, PB2 and PB6 (MISO) as outputs	
     2ea:	87 e4       	ldi	r24, 0x47	; 71
     2ec:	84 b9       	out	0x04, r24	; 4
     2ee:	08 95       	ret

000002f0 <recieve_mode>:
﻿#include "uart.h"

//Startar Recieve Mode
void recieve_mode(void)
{
	UCSR0B = (0<<TXEN0)|(1<<RXEN0);
     2f0:	80 e1       	ldi	r24, 0x10	; 16
     2f2:	80 93 c1 00 	sts	0x00C1, r24
     2f6:	08 95       	ret

000002f8 <send_mode>:
}

//Startar Send Mode
void send_mode(void)
{
	UCSR0B = (1<<TXEN0)|(0<<RXEN0);
     2f8:	88 e0       	ldi	r24, 0x08	; 8
     2fa:	80 93 c1 00 	sts	0x00C1, r24
     2fe:	08 95       	ret

00000300 <uart_init>:
}

//Initiera UART
void uart_init(void)
{
	UBRR0H = (unsigned char)(BAUDRATE>>8);							//Skifta registret 8 bitar åt höger
     300:	10 92 c5 00 	sts	0x00C5, r1
	UBRR0L = (unsigned char)BAUDRATE;							//Sätt baudrate
     304:	10 92 c4 00 	sts	0x00C4, r1
	UCSR0C = (0<<USBS0)|(1<<UCSZ00)|(1<<UCSZ01)|(0<<UPM01);			//Sätter 1 stoppbit, samt 8-bitars dataformat
     308:	86 e0       	ldi	r24, 0x06	; 6
     30a:	80 93 c2 00 	sts	0x00C2, r24
﻿#include "uart.h"

//Startar Recieve Mode
void recieve_mode(void)
{
	UCSR0B = (0<<TXEN0)|(1<<RXEN0);
     30e:	80 e1       	ldi	r24, 0x10	; 16
     310:	80 93 c1 00 	sts	0x00C1, r24
     314:	08 95       	ret

00000316 <uart_transmit>:
}

//Skicka med UART
void uart_transmit(unsigned char data)
{
	while(!(UCSR0A & (1<<UDRE0)));									//Väntar på att "transmit-buffern" ska bli tom genom att kolla UDREn-flaggan
     316:	e0 ec       	ldi	r30, 0xC0	; 192
     318:	f0 e0       	ldi	r31, 0x00	; 0
     31a:	90 81       	ld	r25, Z
     31c:	95 ff       	sbrs	r25, 5
     31e:	fd cf       	rjmp	.-6      	; 0x31a <uart_transmit+0x4>
	UDR0 = data;												    //Ladda in datan i registret (UDR = Uart Data Register)
     320:	80 93 c6 00 	sts	0x00C6, r24
     324:	08 95       	ret

00000326 <stand>:
************************************************************************************************************/

//Funktion för att roboten ska ställa sig upp
void stand(void)
{
	reg_servo_angle(0, STAND_DEG_00);
     326:	40 e0       	ldi	r20, 0x00	; 0
     328:	50 e0       	ldi	r21, 0x00	; 0
     32a:	66 e1       	ldi	r22, 0x16	; 22
     32c:	73 e4       	ldi	r23, 0x43	; 67
     32e:	80 e0       	ldi	r24, 0x00	; 0
     330:	8e df       	rcall	.-228    	; 0x24e <reg_servo_angle>
	reg_servo_angle(3, STAND_DEG_03);
     332:	40 e0       	ldi	r20, 0x00	; 0
     334:	50 e0       	ldi	r21, 0x00	; 0
     336:	66 e1       	ldi	r22, 0x16	; 22
     338:	73 e4       	ldi	r23, 0x43	; 67
     33a:	83 e0       	ldi	r24, 0x03	; 3
     33c:	88 df       	rcall	.-240    	; 0x24e <reg_servo_angle>
	reg_servo_angle(6, STAND_DEG_06);
     33e:	40 e0       	ldi	r20, 0x00	; 0
     340:	50 e0       	ldi	r21, 0x00	; 0
     342:	66 e1       	ldi	r22, 0x16	; 22
     344:	73 e4       	ldi	r23, 0x43	; 67
     346:	86 e0       	ldi	r24, 0x06	; 6
     348:	82 df       	rcall	.-252    	; 0x24e <reg_servo_angle>
	reg_servo_angle(9, STAND_DEG_09);
     34a:	40 e0       	ldi	r20, 0x00	; 0
     34c:	50 e0       	ldi	r21, 0x00	; 0
     34e:	66 e1       	ldi	r22, 0x16	; 22
     350:	73 e4       	ldi	r23, 0x43	; 67
     352:	89 e0       	ldi	r24, 0x09	; 9
     354:	7c df       	rcall	.-264    	; 0x24e <reg_servo_angle>
	reg_servo_angle(12, STAND_DEG_12);
     356:	40 e0       	ldi	r20, 0x00	; 0
     358:	50 e0       	ldi	r21, 0x00	; 0
     35a:	66 e1       	ldi	r22, 0x16	; 22
     35c:	73 e4       	ldi	r23, 0x43	; 67
     35e:	8c e0       	ldi	r24, 0x0C	; 12
     360:	76 df       	rcall	.-276    	; 0x24e <reg_servo_angle>
	reg_servo_angle(15, STAND_DEG_15);
     362:	40 e0       	ldi	r20, 0x00	; 0
     364:	50 e0       	ldi	r21, 0x00	; 0
     366:	66 e1       	ldi	r22, 0x16	; 22
     368:	73 e4       	ldi	r23, 0x43	; 67
     36a:	8f e0       	ldi	r24, 0x0F	; 15
     36c:	70 df       	rcall	.-288    	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(1, STAND_DEG_01);
     36e:	40 e0       	ldi	r20, 0x00	; 0
     370:	50 e0       	ldi	r21, 0x00	; 0
     372:	64 eb       	ldi	r22, 0xB4	; 180
     374:	72 e4       	ldi	r23, 0x42	; 66
     376:	81 e0       	ldi	r24, 0x01	; 1
     378:	6a df       	rcall	.-300    	; 0x24e <reg_servo_angle>
	reg_servo_angle(4, STAND_DEG_04);
     37a:	40 e0       	ldi	r20, 0x00	; 0
     37c:	50 e0       	ldi	r21, 0x00	; 0
     37e:	64 eb       	ldi	r22, 0xB4	; 180
     380:	72 e4       	ldi	r23, 0x42	; 66
     382:	84 e0       	ldi	r24, 0x04	; 4
     384:	64 df       	rcall	.-312    	; 0x24e <reg_servo_angle>
	reg_servo_angle(7, STAND_DEG_07);
     386:	40 e0       	ldi	r20, 0x00	; 0
     388:	50 e0       	ldi	r21, 0x00	; 0
     38a:	64 eb       	ldi	r22, 0xB4	; 180
     38c:	72 e4       	ldi	r23, 0x42	; 66
     38e:	87 e0       	ldi	r24, 0x07	; 7
     390:	5e df       	rcall	.-324    	; 0x24e <reg_servo_angle>
	reg_servo_angle(10, STAND_DEG_10);
     392:	40 e0       	ldi	r20, 0x00	; 0
     394:	50 e0       	ldi	r21, 0x00	; 0
     396:	62 e5       	ldi	r22, 0x52	; 82
     398:	73 e4       	ldi	r23, 0x43	; 67
     39a:	8a e0       	ldi	r24, 0x0A	; 10
     39c:	58 df       	rcall	.-336    	; 0x24e <reg_servo_angle>
	reg_servo_angle(13, STAND_DEG_13);
     39e:	40 e0       	ldi	r20, 0x00	; 0
     3a0:	50 e0       	ldi	r21, 0x00	; 0
     3a2:	62 e5       	ldi	r22, 0x52	; 82
     3a4:	73 e4       	ldi	r23, 0x43	; 67
     3a6:	8d e0       	ldi	r24, 0x0D	; 13
     3a8:	52 df       	rcall	.-348    	; 0x24e <reg_servo_angle>
	reg_servo_angle(16, STAND_DEG_16);
     3aa:	40 e0       	ldi	r20, 0x00	; 0
     3ac:	50 e0       	ldi	r21, 0x00	; 0
     3ae:	62 e5       	ldi	r22, 0x52	; 82
     3b0:	73 e4       	ldi	r23, 0x43	; 67
     3b2:	80 e1       	ldi	r24, 0x10	; 16
     3b4:	4c df       	rcall	.-360    	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(2, STAND_DEG_02);
     3b6:	40 e0       	ldi	r20, 0x00	; 0
     3b8:	50 e0       	ldi	r21, 0x00	; 0
     3ba:	66 e6       	ldi	r22, 0x66	; 102
     3bc:	73 e4       	ldi	r23, 0x43	; 67
     3be:	82 e0       	ldi	r24, 0x02	; 2
     3c0:	46 df       	rcall	.-372    	; 0x24e <reg_servo_angle>
	reg_servo_angle(5, STAND_DEG_05);
     3c2:	40 e0       	ldi	r20, 0x00	; 0
     3c4:	50 e0       	ldi	r21, 0x00	; 0
     3c6:	66 e6       	ldi	r22, 0x66	; 102
     3c8:	73 e4       	ldi	r23, 0x43	; 67
     3ca:	85 e0       	ldi	r24, 0x05	; 5
     3cc:	40 df       	rcall	.-384    	; 0x24e <reg_servo_angle>
	reg_servo_angle(8, STAND_DEG_08);
     3ce:	40 e0       	ldi	r20, 0x00	; 0
     3d0:	50 e0       	ldi	r21, 0x00	; 0
     3d2:	66 e6       	ldi	r22, 0x66	; 102
     3d4:	73 e4       	ldi	r23, 0x43	; 67
     3d6:	88 e0       	ldi	r24, 0x08	; 8
     3d8:	3a df       	rcall	.-396    	; 0x24e <reg_servo_angle>
	reg_servo_angle(11, STAND_DEG_11);
     3da:	40 e0       	ldi	r20, 0x00	; 0
     3dc:	50 e0       	ldi	r21, 0x00	; 0
     3de:	6c e8       	ldi	r22, 0x8C	; 140
     3e0:	72 e4       	ldi	r23, 0x42	; 66
     3e2:	8b e0       	ldi	r24, 0x0B	; 11
     3e4:	34 df       	rcall	.-408    	; 0x24e <reg_servo_angle>
	reg_servo_angle(14, STAND_DEG_14);
     3e6:	40 e0       	ldi	r20, 0x00	; 0
     3e8:	50 e0       	ldi	r21, 0x00	; 0
     3ea:	6c e8       	ldi	r22, 0x8C	; 140
     3ec:	72 e4       	ldi	r23, 0x42	; 66
     3ee:	8e e0       	ldi	r24, 0x0E	; 14
     3f0:	2e df       	rcall	.-420    	; 0x24e <reg_servo_angle>
	reg_servo_angle(17, STAND_DEG_17);
     3f2:	40 e0       	ldi	r20, 0x00	; 0
     3f4:	50 e0       	ldi	r21, 0x00	; 0
     3f6:	6c e8       	ldi	r22, 0x8C	; 140
     3f8:	72 e4       	ldi	r23, 0x42	; 66
     3fa:	81 e1       	ldi	r24, 0x11	; 17
     3fc:	28 df       	rcall	.-432    	; 0x24e <reg_servo_angle>
	action();
     3fe:	4b cf       	rjmp	.-362    	; 0x296 <action>
     400:	08 95       	ret

00000402 <one>:
//Funktioner som utgör gångstilarna för rörelse framåt och bakåt
void one(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 153);
     402:	40 e0       	ldi	r20, 0x00	; 0
     404:	50 e0       	ldi	r21, 0x00	; 0
     406:	69 e1       	ldi	r22, 0x19	; 25
     408:	73 e4       	ldi	r23, 0x43	; 67
     40a:	86 e0       	ldi	r24, 0x06	; 6
     40c:	20 df       	rcall	.-448    	; 0x24e <reg_servo_angle>
	reg_servo_angle(7, 92);
     40e:	40 e0       	ldi	r20, 0x00	; 0
     410:	50 e0       	ldi	r21, 0x00	; 0
     412:	68 eb       	ldi	r22, 0xB8	; 184
     414:	72 e4       	ldi	r23, 0x42	; 66
     416:	87 e0       	ldi	r24, 0x07	; 7
     418:	1a df       	rcall	.-460    	; 0x24e <reg_servo_angle>
	reg_servo_angle(8, 227);
     41a:	40 e0       	ldi	r20, 0x00	; 0
     41c:	50 e0       	ldi	r21, 0x00	; 0
     41e:	63 e6       	ldi	r22, 0x63	; 99
     420:	73 e4       	ldi	r23, 0x43	; 67
     422:	88 e0       	ldi	r24, 0x08	; 8
     424:	14 df       	rcall	.-472    	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(9, 147);
     426:	40 e0       	ldi	r20, 0x00	; 0
     428:	50 e0       	ldi	r21, 0x00	; 0
     42a:	63 e1       	ldi	r22, 0x13	; 19
     42c:	73 e4       	ldi	r23, 0x43	; 67
     42e:	89 e0       	ldi	r24, 0x09	; 9
     430:	0e df       	rcall	.-484    	; 0x24e <reg_servo_angle>
	reg_servo_angle(10, 240);
     432:	40 e0       	ldi	r20, 0x00	; 0
     434:	50 e0       	ldi	r21, 0x00	; 0
     436:	60 e7       	ldi	r22, 0x70	; 112
     438:	73 e4       	ldi	r23, 0x43	; 67
     43a:	8a e0       	ldi	r24, 0x0A	; 10
     43c:	08 df       	rcall	.-496    	; 0x24e <reg_servo_angle>
	reg_servo_angle(11, 62);
     43e:	40 e0       	ldi	r20, 0x00	; 0
     440:	50 e0       	ldi	r21, 0x00	; 0
     442:	68 e7       	ldi	r22, 0x78	; 120
     444:	72 e4       	ldi	r23, 0x42	; 66
     446:	8b e0       	ldi	r24, 0x0B	; 11
     448:	02 df       	rcall	.-508    	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(3, 150);
     44a:	40 e0       	ldi	r20, 0x00	; 0
     44c:	50 e0       	ldi	r21, 0x00	; 0
     44e:	66 e1       	ldi	r22, 0x16	; 22
     450:	73 e4       	ldi	r23, 0x43	; 67
     452:	83 e0       	ldi	r24, 0x03	; 3
     454:	fc de       	rcall	.-520    	; 0x24e <reg_servo_angle>
	reg_servo_angle(4, 64);
     456:	40 e0       	ldi	r20, 0x00	; 0
     458:	50 e0       	ldi	r21, 0x00	; 0
     45a:	60 e8       	ldi	r22, 0x80	; 128
     45c:	72 e4       	ldi	r23, 0x42	; 66
     45e:	84 e0       	ldi	r24, 0x04	; 4
     460:	f6 de       	rcall	.-532    	; 0x24e <reg_servo_angle>
	reg_servo_angle(5, 237);
     462:	40 e0       	ldi	r20, 0x00	; 0
     464:	50 e0       	ldi	r21, 0x00	; 0
     466:	6d e6       	ldi	r22, 0x6D	; 109
     468:	73 e4       	ldi	r23, 0x43	; 67
     46a:	85 e0       	ldi	r24, 0x05	; 5
     46c:	f0 de       	rcall	.-544    	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(12, 150);
     46e:	40 e0       	ldi	r20, 0x00	; 0
     470:	50 e0       	ldi	r21, 0x00	; 0
     472:	66 e1       	ldi	r22, 0x16	; 22
     474:	73 e4       	ldi	r23, 0x43	; 67
     476:	8c e0       	ldi	r24, 0x0C	; 12
     478:	ea de       	rcall	.-556    	; 0x24e <reg_servo_angle>
	reg_servo_angle(13, 208);
     47a:	40 e0       	ldi	r20, 0x00	; 0
     47c:	50 e0       	ldi	r21, 0x00	; 0
     47e:	60 e5       	ldi	r22, 0x50	; 80
     480:	73 e4       	ldi	r23, 0x43	; 67
     482:	8d e0       	ldi	r24, 0x0D	; 13
     484:	e4 de       	rcall	.-568    	; 0x24e <reg_servo_angle>
	reg_servo_angle(14, 73);
     486:	40 e0       	ldi	r20, 0x00	; 0
     488:	50 e0       	ldi	r21, 0x00	; 0
     48a:	62 e9       	ldi	r22, 0x92	; 146
     48c:	72 e4       	ldi	r23, 0x42	; 66
     48e:	8e e0       	ldi	r24, 0x0E	; 14
     490:	de de       	rcall	.-580    	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(0, 147);
     492:	40 e0       	ldi	r20, 0x00	; 0
     494:	50 e0       	ldi	r21, 0x00	; 0
     496:	63 e1       	ldi	r22, 0x13	; 19
     498:	73 e4       	ldi	r23, 0x43	; 67
     49a:	80 e0       	ldi	r24, 0x00	; 0
     49c:	d8 de       	rcall	.-592    	; 0x24e <reg_servo_angle>
	reg_servo_angle(1, 92);
     49e:	40 e0       	ldi	r20, 0x00	; 0
     4a0:	50 e0       	ldi	r21, 0x00	; 0
     4a2:	68 eb       	ldi	r22, 0xB8	; 184
     4a4:	72 e4       	ldi	r23, 0x42	; 66
     4a6:	81 e0       	ldi	r24, 0x01	; 1
     4a8:	d2 de       	rcall	.-604    	; 0x24e <reg_servo_angle>
	reg_servo_angle(2, 227);
     4aa:	40 e0       	ldi	r20, 0x00	; 0
     4ac:	50 e0       	ldi	r21, 0x00	; 0
     4ae:	63 e6       	ldi	r22, 0x63	; 99
     4b0:	73 e4       	ldi	r23, 0x43	; 67
     4b2:	82 e0       	ldi	r24, 0x02	; 2
     4b4:	cc de       	rcall	.-616    	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(15, 153);
     4b6:	40 e0       	ldi	r20, 0x00	; 0
     4b8:	50 e0       	ldi	r21, 0x00	; 0
     4ba:	69 e1       	ldi	r22, 0x19	; 25
     4bc:	73 e4       	ldi	r23, 0x43	; 67
     4be:	8f e0       	ldi	r24, 0x0F	; 15
     4c0:	c6 de       	rcall	.-628    	; 0x24e <reg_servo_angle>
	reg_servo_angle(16, 240);
     4c2:	40 e0       	ldi	r20, 0x00	; 0
     4c4:	50 e0       	ldi	r21, 0x00	; 0
     4c6:	60 e7       	ldi	r22, 0x70	; 112
     4c8:	73 e4       	ldi	r23, 0x43	; 67
     4ca:	80 e1       	ldi	r24, 0x10	; 16
     4cc:	c0 de       	rcall	.-640    	; 0x24e <reg_servo_angle>
	reg_servo_angle(17, 62);
     4ce:	40 e0       	ldi	r20, 0x00	; 0
     4d0:	50 e0       	ldi	r21, 0x00	; 0
     4d2:	68 e7       	ldi	r22, 0x78	; 120
     4d4:	72 e4       	ldi	r23, 0x42	; 66
     4d6:	81 e1       	ldi	r24, 0x11	; 17
     4d8:	ba de       	rcall	.-652    	; 0x24e <reg_servo_angle>
     4da:	2f ef       	ldi	r18, 0xFF	; 255
     4dc:	82 e5       	ldi	r24, 0x52	; 82
     4de:	97 e0       	ldi	r25, 0x07	; 7
     4e0:	21 50       	subi	r18, 0x01	; 1
     4e2:	80 40       	sbci	r24, 0x00	; 0
     4e4:	90 40       	sbci	r25, 0x00	; 0
     4e6:	e1 f7       	brne	.-8      	; 0x4e0 <one+0xde>
     4e8:	00 c0       	rjmp	.+0      	; 0x4ea <one+0xe8>
     4ea:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     4ec:	d4 ce       	rjmp	.-600    	; 0x296 <action>
     4ee:	08 95       	ret

000004f0 <two>:

void two(void)
{
	int scale = 3;

	reg_servo_angle(6, 147);
     4f0:	40 e0       	ldi	r20, 0x00	; 0
     4f2:	50 e0       	ldi	r21, 0x00	; 0
     4f4:	63 e1       	ldi	r22, 0x13	; 19
     4f6:	73 e4       	ldi	r23, 0x43	; 67
     4f8:	86 e0       	ldi	r24, 0x06	; 6
     4fa:	a9 de       	rcall	.-686    	; 0x24e <reg_servo_angle>
	reg_servo_angle(7, 87);
     4fc:	40 e0       	ldi	r20, 0x00	; 0
     4fe:	50 e0       	ldi	r21, 0x00	; 0
     500:	6e ea       	ldi	r22, 0xAE	; 174
     502:	72 e4       	ldi	r23, 0x42	; 66
     504:	87 e0       	ldi	r24, 0x07	; 7
     506:	a3 de       	rcall	.-698    	; 0x24e <reg_servo_angle>
	reg_servo_angle(8, 237);
     508:	40 e0       	ldi	r20, 0x00	; 0
     50a:	50 e0       	ldi	r21, 0x00	; 0
     50c:	6d e6       	ldi	r22, 0x6D	; 109
     50e:	73 e4       	ldi	r23, 0x43	; 67
     510:	88 e0       	ldi	r24, 0x08	; 8
     512:	9d de       	rcall	.-710    	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(9, 143);
     514:	40 e0       	ldi	r20, 0x00	; 0
     516:	50 e0       	ldi	r21, 0x00	; 0
     518:	6f e0       	ldi	r22, 0x0F	; 15
     51a:	73 e4       	ldi	r23, 0x43	; 67
     51c:	89 e0       	ldi	r24, 0x09	; 9
     51e:	97 de       	rcall	.-722    	; 0x24e <reg_servo_angle>
	reg_servo_angle(10, 235);
     520:	40 e0       	ldi	r20, 0x00	; 0
     522:	50 e0       	ldi	r21, 0x00	; 0
     524:	6b e6       	ldi	r22, 0x6B	; 107
     526:	73 e4       	ldi	r23, 0x43	; 67
     528:	8a e0       	ldi	r24, 0x0A	; 10
     52a:	91 de       	rcall	.-734    	; 0x24e <reg_servo_angle>
	reg_servo_angle(11, 74);
     52c:	40 e0       	ldi	r20, 0x00	; 0
     52e:	50 e0       	ldi	r21, 0x00	; 0
     530:	64 e9       	ldi	r22, 0x94	; 148
     532:	72 e4       	ldi	r23, 0x42	; 66
     534:	8b e0       	ldi	r24, 0x0B	; 11
     536:	8b de       	rcall	.-746    	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(3, 158);
     538:	40 e0       	ldi	r20, 0x00	; 0
     53a:	50 e0       	ldi	r21, 0x00	; 0
     53c:	6e e1       	ldi	r22, 0x1E	; 30
     53e:	73 e4       	ldi	r23, 0x43	; 67
     540:	83 e0       	ldi	r24, 0x03	; 3
     542:	85 de       	rcall	.-758    	; 0x24e <reg_servo_angle>
	reg_servo_angle(4, 70);
     544:	40 e0       	ldi	r20, 0x00	; 0
     546:	50 e0       	ldi	r21, 0x00	; 0
     548:	6c e8       	ldi	r22, 0x8C	; 140
     54a:	72 e4       	ldi	r23, 0x42	; 66
     54c:	84 e0       	ldi	r24, 0x04	; 4
     54e:	7f de       	rcall	.-770    	; 0x24e <reg_servo_angle>
	reg_servo_angle(5, 236);
     550:	40 e0       	ldi	r20, 0x00	; 0
     552:	50 e0       	ldi	r21, 0x00	; 0
     554:	6c e6       	ldi	r22, 0x6C	; 108
     556:	73 e4       	ldi	r23, 0x43	; 67
     558:	85 e0       	ldi	r24, 0x05	; 5
     55a:	79 de       	rcall	.-782    	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(12, 158);
     55c:	40 e0       	ldi	r20, 0x00	; 0
     55e:	50 e0       	ldi	r21, 0x00	; 0
     560:	6e e1       	ldi	r22, 0x1E	; 30
     562:	73 e4       	ldi	r23, 0x43	; 67
     564:	8c e0       	ldi	r24, 0x0C	; 12
     566:	73 de       	rcall	.-794    	; 0x24e <reg_servo_angle>
	reg_servo_angle(13, 207);
     568:	40 e0       	ldi	r20, 0x00	; 0
     56a:	50 e0       	ldi	r21, 0x00	; 0
     56c:	6f e4       	ldi	r22, 0x4F	; 79
     56e:	73 e4       	ldi	r23, 0x43	; 67
     570:	8d e0       	ldi	r24, 0x0D	; 13
     572:	6d de       	rcall	.-806    	; 0x24e <reg_servo_angle>
	reg_servo_angle(14, 74);
     574:	40 e0       	ldi	r20, 0x00	; 0
     576:	50 e0       	ldi	r21, 0x00	; 0
     578:	64 e9       	ldi	r22, 0x94	; 148
     57a:	72 e4       	ldi	r23, 0x42	; 66
     57c:	8e e0       	ldi	r24, 0x0E	; 14
     57e:	67 de       	rcall	.-818    	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(0, 143);
     580:	40 e0       	ldi	r20, 0x00	; 0
     582:	50 e0       	ldi	r21, 0x00	; 0
     584:	6f e0       	ldi	r22, 0x0F	; 15
     586:	73 e4       	ldi	r23, 0x43	; 67
     588:	80 e0       	ldi	r24, 0x00	; 0
     58a:	61 de       	rcall	.-830    	; 0x24e <reg_servo_angle>
	reg_servo_angle(1, 97);
     58c:	40 e0       	ldi	r20, 0x00	; 0
     58e:	50 e0       	ldi	r21, 0x00	; 0
     590:	62 ec       	ldi	r22, 0xC2	; 194
     592:	72 e4       	ldi	r23, 0x42	; 66
     594:	81 e0       	ldi	r24, 0x01	; 1
     596:	5b de       	rcall	.-842    	; 0x24e <reg_servo_angle>
	reg_servo_angle(2, 217);
     598:	40 e0       	ldi	r20, 0x00	; 0
     59a:	50 e0       	ldi	r21, 0x00	; 0
     59c:	69 e5       	ldi	r22, 0x59	; 89
     59e:	73 e4       	ldi	r23, 0x43	; 67
     5a0:	82 e0       	ldi	r24, 0x02	; 2
     5a2:	55 de       	rcall	.-854    	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(15, 147);
     5a4:	40 e0       	ldi	r20, 0x00	; 0
     5a6:	50 e0       	ldi	r21, 0x00	; 0
     5a8:	63 e1       	ldi	r22, 0x13	; 19
     5aa:	73 e4       	ldi	r23, 0x43	; 67
     5ac:	8f e0       	ldi	r24, 0x0F	; 15
     5ae:	4f de       	rcall	.-866    	; 0x24e <reg_servo_angle>
	reg_servo_angle(16, 240);
     5b0:	40 e0       	ldi	r20, 0x00	; 0
     5b2:	50 e0       	ldi	r21, 0x00	; 0
     5b4:	60 e7       	ldi	r22, 0x70	; 112
     5b6:	73 e4       	ldi	r23, 0x43	; 67
     5b8:	80 e1       	ldi	r24, 0x10	; 16
     5ba:	49 de       	rcall	.-878    	; 0x24e <reg_servo_angle>
	reg_servo_angle(17, 60);
     5bc:	40 e0       	ldi	r20, 0x00	; 0
     5be:	50 e0       	ldi	r21, 0x00	; 0
     5c0:	60 e7       	ldi	r22, 0x70	; 112
     5c2:	72 e4       	ldi	r23, 0x42	; 66
     5c4:	81 e1       	ldi	r24, 0x11	; 17
     5c6:	43 de       	rcall	.-890    	; 0x24e <reg_servo_angle>
     5c8:	2f ef       	ldi	r18, 0xFF	; 255
     5ca:	82 e5       	ldi	r24, 0x52	; 82
     5cc:	97 e0       	ldi	r25, 0x07	; 7
     5ce:	21 50       	subi	r18, 0x01	; 1
     5d0:	80 40       	sbci	r24, 0x00	; 0
     5d2:	90 40       	sbci	r25, 0x00	; 0
     5d4:	e1 f7       	brne	.-8      	; 0x5ce <two+0xde>
     5d6:	00 c0       	rjmp	.+0      	; 0x5d8 <two+0xe8>
     5d8:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     5da:	5d ce       	rjmp	.-838    	; 0x296 <action>
     5dc:	08 95       	ret

000005de <three>:

void three(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 147);
     5de:	40 e0       	ldi	r20, 0x00	; 0
     5e0:	50 e0       	ldi	r21, 0x00	; 0
     5e2:	63 e1       	ldi	r22, 0x13	; 19
     5e4:	73 e4       	ldi	r23, 0x43	; 67
     5e6:	86 e0       	ldi	r24, 0x06	; 6
     5e8:	32 de       	rcall	.-924    	; 0x24e <reg_servo_angle>
	reg_servo_angle(7, 87);
     5ea:	40 e0       	ldi	r20, 0x00	; 0
     5ec:	50 e0       	ldi	r21, 0x00	; 0
     5ee:	6e ea       	ldi	r22, 0xAE	; 174
     5f0:	72 e4       	ldi	r23, 0x42	; 66
     5f2:	87 e0       	ldi	r24, 0x07	; 7
     5f4:	2c de       	rcall	.-936    	; 0x24e <reg_servo_angle>
	reg_servo_angle(8, 237);
     5f6:	40 e0       	ldi	r20, 0x00	; 0
     5f8:	50 e0       	ldi	r21, 0x00	; 0
     5fa:	6d e6       	ldi	r22, 0x6D	; 109
     5fc:	73 e4       	ldi	r23, 0x43	; 67
     5fe:	88 e0       	ldi	r24, 0x08	; 8
     600:	26 de       	rcall	.-948    	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(9, 143);
     602:	40 e0       	ldi	r20, 0x00	; 0
     604:	50 e0       	ldi	r21, 0x00	; 0
     606:	6f e0       	ldi	r22, 0x0F	; 15
     608:	73 e4       	ldi	r23, 0x43	; 67
     60a:	89 e0       	ldi	r24, 0x09	; 9
     60c:	20 de       	rcall	.-960    	; 0x24e <reg_servo_angle>
	reg_servo_angle(10, 203);
     60e:	40 e0       	ldi	r20, 0x00	; 0
     610:	50 e0       	ldi	r21, 0x00	; 0
     612:	6b e4       	ldi	r22, 0x4B	; 75
     614:	73 e4       	ldi	r23, 0x43	; 67
     616:	8a e0       	ldi	r24, 0x0A	; 10
     618:	1a de       	rcall	.-972    	; 0x24e <reg_servo_angle>
	reg_servo_angle(11, 83);
     61a:	40 e0       	ldi	r20, 0x00	; 0
     61c:	50 e0       	ldi	r21, 0x00	; 0
     61e:	66 ea       	ldi	r22, 0xA6	; 166
     620:	72 e4       	ldi	r23, 0x42	; 66
     622:	8b e0       	ldi	r24, 0x0B	; 11
     624:	14 de       	rcall	.-984    	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(3, 158);
     626:	40 e0       	ldi	r20, 0x00	; 0
     628:	50 e0       	ldi	r21, 0x00	; 0
     62a:	6e e1       	ldi	r22, 0x1E	; 30
     62c:	73 e4       	ldi	r23, 0x43	; 67
     62e:	83 e0       	ldi	r24, 0x03	; 3
     630:	0e de       	rcall	.-996    	; 0x24e <reg_servo_angle>
	reg_servo_angle(4, 93);
     632:	40 e0       	ldi	r20, 0x00	; 0
     634:	50 e0       	ldi	r21, 0x00	; 0
     636:	6a eb       	ldi	r22, 0xBA	; 186
     638:	72 e4       	ldi	r23, 0x42	; 66
     63a:	84 e0       	ldi	r24, 0x04	; 4
     63c:	08 de       	rcall	.-1008   	; 0x24e <reg_servo_angle>
	reg_servo_angle(5, 226);
     63e:	40 e0       	ldi	r20, 0x00	; 0
     640:	50 e0       	ldi	r21, 0x00	; 0
     642:	62 e6       	ldi	r22, 0x62	; 98
     644:	73 e4       	ldi	r23, 0x43	; 67
     646:	85 e0       	ldi	r24, 0x05	; 5
     648:	02 de       	rcall	.-1020   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(12, 158);
     64a:	40 e0       	ldi	r20, 0x00	; 0
     64c:	50 e0       	ldi	r21, 0x00	; 0
     64e:	6e e1       	ldi	r22, 0x1E	; 30
     650:	73 e4       	ldi	r23, 0x43	; 67
     652:	8c e0       	ldi	r24, 0x0C	; 12
     654:	fc dd       	rcall	.-1032   	; 0x24e <reg_servo_angle>
	reg_servo_angle(13, 207);
     656:	40 e0       	ldi	r20, 0x00	; 0
     658:	50 e0       	ldi	r21, 0x00	; 0
     65a:	6f e4       	ldi	r22, 0x4F	; 79
     65c:	73 e4       	ldi	r23, 0x43	; 67
     65e:	8d e0       	ldi	r24, 0x0D	; 13
     660:	f6 dd       	rcall	.-1044   	; 0x24e <reg_servo_angle>
	reg_servo_angle(14, 74);
     662:	40 e0       	ldi	r20, 0x00	; 0
     664:	50 e0       	ldi	r21, 0x00	; 0
     666:	64 e9       	ldi	r22, 0x94	; 148
     668:	72 e4       	ldi	r23, 0x42	; 66
     66a:	8e e0       	ldi	r24, 0x0E	; 14
     66c:	f0 dd       	rcall	.-1056   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(0, 143);
     66e:	40 e0       	ldi	r20, 0x00	; 0
     670:	50 e0       	ldi	r21, 0x00	; 0
     672:	6f e0       	ldi	r22, 0x0F	; 15
     674:	73 e4       	ldi	r23, 0x43	; 67
     676:	80 e0       	ldi	r24, 0x00	; 0
     678:	ea dd       	rcall	.-1068   	; 0x24e <reg_servo_angle>
	reg_servo_angle(1, 97);
     67a:	40 e0       	ldi	r20, 0x00	; 0
     67c:	50 e0       	ldi	r21, 0x00	; 0
     67e:	62 ec       	ldi	r22, 0xC2	; 194
     680:	72 e4       	ldi	r23, 0x42	; 66
     682:	81 e0       	ldi	r24, 0x01	; 1
     684:	e4 dd       	rcall	.-1080   	; 0x24e <reg_servo_angle>
	reg_servo_angle(2, 217);
     686:	40 e0       	ldi	r20, 0x00	; 0
     688:	50 e0       	ldi	r21, 0x00	; 0
     68a:	69 e5       	ldi	r22, 0x59	; 89
     68c:	73 e4       	ldi	r23, 0x43	; 67
     68e:	82 e0       	ldi	r24, 0x02	; 2
     690:	de dd       	rcall	.-1092   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(15, 147);
     692:	40 e0       	ldi	r20, 0x00	; 0
     694:	50 e0       	ldi	r21, 0x00	; 0
     696:	63 e1       	ldi	r22, 0x13	; 19
     698:	73 e4       	ldi	r23, 0x43	; 67
     69a:	8f e0       	ldi	r24, 0x0F	; 15
     69c:	d8 dd       	rcall	.-1104   	; 0x24e <reg_servo_angle>
	reg_servo_angle(16, 213);
     69e:	40 e0       	ldi	r20, 0x00	; 0
     6a0:	50 e0       	ldi	r21, 0x00	; 0
     6a2:	65 e5       	ldi	r22, 0x55	; 85
     6a4:	73 e4       	ldi	r23, 0x43	; 67
     6a6:	80 e1       	ldi	r24, 0x10	; 16
     6a8:	d2 dd       	rcall	.-1116   	; 0x24e <reg_servo_angle>
	reg_servo_angle(17, 63);
     6aa:	40 e0       	ldi	r20, 0x00	; 0
     6ac:	50 e0       	ldi	r21, 0x00	; 0
     6ae:	6c e7       	ldi	r22, 0x7C	; 124
     6b0:	72 e4       	ldi	r23, 0x42	; 66
     6b2:	81 e1       	ldi	r24, 0x11	; 17
     6b4:	cc dd       	rcall	.-1128   	; 0x24e <reg_servo_angle>
     6b6:	2f ef       	ldi	r18, 0xFF	; 255
     6b8:	82 e5       	ldi	r24, 0x52	; 82
     6ba:	97 e0       	ldi	r25, 0x07	; 7
     6bc:	21 50       	subi	r18, 0x01	; 1
     6be:	80 40       	sbci	r24, 0x00	; 0
     6c0:	90 40       	sbci	r25, 0x00	; 0
     6c2:	e1 f7       	brne	.-8      	; 0x6bc <three+0xde>
     6c4:	00 c0       	rjmp	.+0      	; 0x6c6 <three+0xe8>
     6c6:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     6c8:	e6 cd       	rjmp	.-1076   	; 0x296 <action>
     6ca:	08 95       	ret

000006cc <four>:

void four(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 147);
     6cc:	40 e0       	ldi	r20, 0x00	; 0
     6ce:	50 e0       	ldi	r21, 0x00	; 0
     6d0:	63 e1       	ldi	r22, 0x13	; 19
     6d2:	73 e4       	ldi	r23, 0x43	; 67
     6d4:	86 e0       	ldi	r24, 0x06	; 6
     6d6:	bb dd       	rcall	.-1162   	; 0x24e <reg_servo_angle>
	reg_servo_angle(7, 60);
     6d8:	40 e0       	ldi	r20, 0x00	; 0
     6da:	50 e0       	ldi	r21, 0x00	; 0
     6dc:	60 e7       	ldi	r22, 0x70	; 112
     6de:	72 e4       	ldi	r23, 0x42	; 66
     6e0:	87 e0       	ldi	r24, 0x07	; 7
     6e2:	b5 dd       	rcall	.-1174   	; 0x24e <reg_servo_angle>
	reg_servo_angle(8, 240);
     6e4:	40 e0       	ldi	r20, 0x00	; 0
     6e6:	50 e0       	ldi	r21, 0x00	; 0
     6e8:	60 e7       	ldi	r22, 0x70	; 112
     6ea:	73 e4       	ldi	r23, 0x43	; 67
     6ec:	88 e0       	ldi	r24, 0x08	; 8
     6ee:	af dd       	rcall	.-1186   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(9, 143);
     6f0:	40 e0       	ldi	r20, 0x00	; 0
     6f2:	50 e0       	ldi	r21, 0x00	; 0
     6f4:	6f e0       	ldi	r22, 0x0F	; 15
     6f6:	73 e4       	ldi	r23, 0x43	; 67
     6f8:	89 e0       	ldi	r24, 0x09	; 9
     6fa:	a9 dd       	rcall	.-1198   	; 0x24e <reg_servo_angle>
	reg_servo_angle(10, 203);
     6fc:	40 e0       	ldi	r20, 0x00	; 0
     6fe:	50 e0       	ldi	r21, 0x00	; 0
     700:	6b e4       	ldi	r22, 0x4B	; 75
     702:	73 e4       	ldi	r23, 0x43	; 67
     704:	8a e0       	ldi	r24, 0x0A	; 10
     706:	a3 dd       	rcall	.-1210   	; 0x24e <reg_servo_angle>
	reg_servo_angle(11, 83);
     708:	40 e0       	ldi	r20, 0x00	; 0
     70a:	50 e0       	ldi	r21, 0x00	; 0
     70c:	66 ea       	ldi	r22, 0xA6	; 166
     70e:	72 e4       	ldi	r23, 0x42	; 66
     710:	8b e0       	ldi	r24, 0x0B	; 11
     712:	9d dd       	rcall	.-1222   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(3, 158);
     714:	40 e0       	ldi	r20, 0x00	; 0
     716:	50 e0       	ldi	r21, 0x00	; 0
     718:	6e e1       	ldi	r22, 0x1E	; 30
     71a:	73 e4       	ldi	r23, 0x43	; 67
     71c:	83 e0       	ldi	r24, 0x03	; 3
     71e:	97 dd       	rcall	.-1234   	; 0x24e <reg_servo_angle>
	reg_servo_angle(4, 93);
     720:	40 e0       	ldi	r20, 0x00	; 0
     722:	50 e0       	ldi	r21, 0x00	; 0
     724:	6a eb       	ldi	r22, 0xBA	; 186
     726:	72 e4       	ldi	r23, 0x42	; 66
     728:	84 e0       	ldi	r24, 0x04	; 4
     72a:	91 dd       	rcall	.-1246   	; 0x24e <reg_servo_angle>
	reg_servo_angle(5, 226);
     72c:	40 e0       	ldi	r20, 0x00	; 0
     72e:	50 e0       	ldi	r21, 0x00	; 0
     730:	62 e6       	ldi	r22, 0x62	; 98
     732:	73 e4       	ldi	r23, 0x43	; 67
     734:	85 e0       	ldi	r24, 0x05	; 5
     736:	8b dd       	rcall	.-1258   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(12, 158);
     738:	40 e0       	ldi	r20, 0x00	; 0
     73a:	50 e0       	ldi	r21, 0x00	; 0
     73c:	6e e1       	ldi	r22, 0x1E	; 30
     73e:	73 e4       	ldi	r23, 0x43	; 67
     740:	8c e0       	ldi	r24, 0x0C	; 12
     742:	85 dd       	rcall	.-1270   	; 0x24e <reg_servo_angle>
	reg_servo_angle(13, 234);
     744:	40 e0       	ldi	r20, 0x00	; 0
     746:	50 e0       	ldi	r21, 0x00	; 0
     748:	6a e6       	ldi	r22, 0x6A	; 106
     74a:	73 e4       	ldi	r23, 0x43	; 67
     74c:	8d e0       	ldi	r24, 0x0D	; 13
     74e:	7f dd       	rcall	.-1282   	; 0x24e <reg_servo_angle>
	reg_servo_angle(14, 64);
     750:	40 e0       	ldi	r20, 0x00	; 0
     752:	50 e0       	ldi	r21, 0x00	; 0
     754:	60 e8       	ldi	r22, 0x80	; 128
     756:	72 e4       	ldi	r23, 0x42	; 66
     758:	8e e0       	ldi	r24, 0x0E	; 14
     75a:	79 dd       	rcall	.-1294   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(0, 143);
     75c:	40 e0       	ldi	r20, 0x00	; 0
     75e:	50 e0       	ldi	r21, 0x00	; 0
     760:	6f e0       	ldi	r22, 0x0F	; 15
     762:	73 e4       	ldi	r23, 0x43	; 67
     764:	80 e0       	ldi	r24, 0x00	; 0
     766:	73 dd       	rcall	.-1306   	; 0x24e <reg_servo_angle>
	reg_servo_angle(1, 60);
     768:	40 e0       	ldi	r20, 0x00	; 0
     76a:	50 e0       	ldi	r21, 0x00	; 0
     76c:	60 e7       	ldi	r22, 0x70	; 112
     76e:	72 e4       	ldi	r23, 0x42	; 66
     770:	81 e0       	ldi	r24, 0x01	; 1
     772:	6d dd       	rcall	.-1318   	; 0x24e <reg_servo_angle>
	reg_servo_angle(2, 226);
     774:	40 e0       	ldi	r20, 0x00	; 0
     776:	50 e0       	ldi	r21, 0x00	; 0
     778:	62 e6       	ldi	r22, 0x62	; 98
     77a:	73 e4       	ldi	r23, 0x43	; 67
     77c:	82 e0       	ldi	r24, 0x02	; 2
     77e:	67 dd       	rcall	.-1330   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(15, 147);
     780:	40 e0       	ldi	r20, 0x00	; 0
     782:	50 e0       	ldi	r21, 0x00	; 0
     784:	63 e1       	ldi	r22, 0x13	; 19
     786:	73 e4       	ldi	r23, 0x43	; 67
     788:	8f e0       	ldi	r24, 0x0F	; 15
     78a:	61 dd       	rcall	.-1342   	; 0x24e <reg_servo_angle>
	reg_servo_angle(16, 213);
     78c:	40 e0       	ldi	r20, 0x00	; 0
     78e:	50 e0       	ldi	r21, 0x00	; 0
     790:	65 e5       	ldi	r22, 0x55	; 85
     792:	73 e4       	ldi	r23, 0x43	; 67
     794:	80 e1       	ldi	r24, 0x10	; 16
     796:	5b dd       	rcall	.-1354   	; 0x24e <reg_servo_angle>
	reg_servo_angle(17, 63);
     798:	40 e0       	ldi	r20, 0x00	; 0
     79a:	50 e0       	ldi	r21, 0x00	; 0
     79c:	6c e7       	ldi	r22, 0x7C	; 124
     79e:	72 e4       	ldi	r23, 0x42	; 66
     7a0:	81 e1       	ldi	r24, 0x11	; 17
     7a2:	55 dd       	rcall	.-1366   	; 0x24e <reg_servo_angle>
     7a4:	2f ef       	ldi	r18, 0xFF	; 255
     7a6:	82 e5       	ldi	r24, 0x52	; 82
     7a8:	97 e0       	ldi	r25, 0x07	; 7
     7aa:	21 50       	subi	r18, 0x01	; 1
     7ac:	80 40       	sbci	r24, 0x00	; 0
     7ae:	90 40       	sbci	r25, 0x00	; 0
     7b0:	e1 f7       	brne	.-8      	; 0x7aa <four+0xde>
     7b2:	00 c0       	rjmp	.+0      	; 0x7b4 <four+0xe8>
     7b4:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     7b6:	6f cd       	rjmp	.-1314   	; 0x296 <action>
     7b8:	08 95       	ret

000007ba <five>:

void five(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 153);
     7ba:	40 e0       	ldi	r20, 0x00	; 0
     7bc:	50 e0       	ldi	r21, 0x00	; 0
     7be:	69 e1       	ldi	r22, 0x19	; 25
     7c0:	73 e4       	ldi	r23, 0x43	; 67
     7c2:	86 e0       	ldi	r24, 0x06	; 6
     7c4:	44 dd       	rcall	.-1400   	; 0x24e <reg_servo_angle>
	reg_servo_angle(7, 60);
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	60 e7       	ldi	r22, 0x70	; 112
     7cc:	72 e4       	ldi	r23, 0x42	; 66
     7ce:	87 e0       	ldi	r24, 0x07	; 7
     7d0:	3e dd       	rcall	.-1412   	; 0x24e <reg_servo_angle>
	reg_servo_angle(8, 238);
     7d2:	40 e0       	ldi	r20, 0x00	; 0
     7d4:	50 e0       	ldi	r21, 0x00	; 0
     7d6:	6e e6       	ldi	r22, 0x6E	; 110
     7d8:	73 e4       	ldi	r23, 0x43	; 67
     7da:	88 e0       	ldi	r24, 0x08	; 8
     7dc:	38 dd       	rcall	.-1424   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(9, 147);
     7de:	40 e0       	ldi	r20, 0x00	; 0
     7e0:	50 e0       	ldi	r21, 0x00	; 0
     7e2:	63 e1       	ldi	r22, 0x13	; 19
     7e4:	73 e4       	ldi	r23, 0x43	; 67
     7e6:	89 e0       	ldi	r24, 0x09	; 9
     7e8:	32 dd       	rcall	.-1436   	; 0x24e <reg_servo_angle>
	reg_servo_angle(10, 208);
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e0       	ldi	r21, 0x00	; 0
     7ee:	60 e5       	ldi	r22, 0x50	; 80
     7f0:	73 e4       	ldi	r23, 0x43	; 67
     7f2:	8a e0       	ldi	r24, 0x0A	; 10
     7f4:	2c dd       	rcall	.-1448   	; 0x24e <reg_servo_angle>
	reg_servo_angle(11, 73);
     7f6:	40 e0       	ldi	r20, 0x00	; 0
     7f8:	50 e0       	ldi	r21, 0x00	; 0
     7fa:	62 e9       	ldi	r22, 0x92	; 146
     7fc:	72 e4       	ldi	r23, 0x42	; 66
     7fe:	8b e0       	ldi	r24, 0x0B	; 11
     800:	26 dd       	rcall	.-1460   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(3, 150);
     802:	40 e0       	ldi	r20, 0x00	; 0
     804:	50 e0       	ldi	r21, 0x00	; 0
     806:	66 e1       	ldi	r22, 0x16	; 22
     808:	73 e4       	ldi	r23, 0x43	; 67
     80a:	83 e0       	ldi	r24, 0x03	; 3
     80c:	20 dd       	rcall	.-1472   	; 0x24e <reg_servo_angle>
	reg_servo_angle(4, 92);
     80e:	40 e0       	ldi	r20, 0x00	; 0
     810:	50 e0       	ldi	r21, 0x00	; 0
     812:	68 eb       	ldi	r22, 0xB8	; 184
     814:	72 e4       	ldi	r23, 0x42	; 66
     816:	84 e0       	ldi	r24, 0x04	; 4
     818:	1a dd       	rcall	.-1484   	; 0x24e <reg_servo_angle>
	reg_servo_angle(5, 227);
     81a:	40 e0       	ldi	r20, 0x00	; 0
     81c:	50 e0       	ldi	r21, 0x00	; 0
     81e:	63 e6       	ldi	r22, 0x63	; 99
     820:	73 e4       	ldi	r23, 0x43	; 67
     822:	85 e0       	ldi	r24, 0x05	; 5
     824:	14 dd       	rcall	.-1496   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(12, 150);
     826:	40 e0       	ldi	r20, 0x00	; 0
     828:	50 e0       	ldi	r21, 0x00	; 0
     82a:	66 e1       	ldi	r22, 0x16	; 22
     82c:	73 e4       	ldi	r23, 0x43	; 67
     82e:	8c e0       	ldi	r24, 0x0C	; 12
     830:	0e dd       	rcall	.-1508   	; 0x24e <reg_servo_angle>
	reg_servo_angle(13, 235);
     832:	40 e0       	ldi	r20, 0x00	; 0
     834:	50 e0       	ldi	r21, 0x00	; 0
     836:	6b e6       	ldi	r22, 0x6B	; 107
     838:	73 e4       	ldi	r23, 0x43	; 67
     83a:	8d e0       	ldi	r24, 0x0D	; 13
     83c:	08 dd       	rcall	.-1520   	; 0x24e <reg_servo_angle>
	reg_servo_angle(14, 63);
     83e:	40 e0       	ldi	r20, 0x00	; 0
     840:	50 e0       	ldi	r21, 0x00	; 0
     842:	6c e7       	ldi	r22, 0x7C	; 124
     844:	72 e4       	ldi	r23, 0x42	; 66
     846:	8e e0       	ldi	r24, 0x0E	; 14
     848:	02 dd       	rcall	.-1532   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(0, 147);
     84a:	40 e0       	ldi	r20, 0x00	; 0
     84c:	50 e0       	ldi	r21, 0x00	; 0
     84e:	63 e1       	ldi	r22, 0x13	; 19
     850:	73 e4       	ldi	r23, 0x43	; 67
     852:	80 e0       	ldi	r24, 0x00	; 0
     854:	fc dc       	rcall	.-1544   	; 0x24e <reg_servo_angle>
	reg_servo_angle(1, 60);
     856:	40 e0       	ldi	r20, 0x00	; 0
     858:	50 e0       	ldi	r21, 0x00	; 0
     85a:	60 e7       	ldi	r22, 0x70	; 112
     85c:	72 e4       	ldi	r23, 0x42	; 66
     85e:	81 e0       	ldi	r24, 0x01	; 1
     860:	f6 dc       	rcall	.-1556   	; 0x24e <reg_servo_angle>
	reg_servo_angle(2, 238);
     862:	40 e0       	ldi	r20, 0x00	; 0
     864:	50 e0       	ldi	r21, 0x00	; 0
     866:	6e e6       	ldi	r22, 0x6E	; 110
     868:	73 e4       	ldi	r23, 0x43	; 67
     86a:	82 e0       	ldi	r24, 0x02	; 2
     86c:	f0 dc       	rcall	.-1568   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(15, 153);
     86e:	40 e0       	ldi	r20, 0x00	; 0
     870:	50 e0       	ldi	r21, 0x00	; 0
     872:	69 e1       	ldi	r22, 0x19	; 25
     874:	73 e4       	ldi	r23, 0x43	; 67
     876:	8f e0       	ldi	r24, 0x0F	; 15
     878:	ea dc       	rcall	.-1580   	; 0x24e <reg_servo_angle>
	reg_servo_angle(16, 208);
     87a:	40 e0       	ldi	r20, 0x00	; 0
     87c:	50 e0       	ldi	r21, 0x00	; 0
     87e:	60 e5       	ldi	r22, 0x50	; 80
     880:	73 e4       	ldi	r23, 0x43	; 67
     882:	80 e1       	ldi	r24, 0x10	; 16
     884:	e4 dc       	rcall	.-1592   	; 0x24e <reg_servo_angle>
	reg_servo_angle(17, 73);
     886:	40 e0       	ldi	r20, 0x00	; 0
     888:	50 e0       	ldi	r21, 0x00	; 0
     88a:	62 e9       	ldi	r22, 0x92	; 146
     88c:	72 e4       	ldi	r23, 0x42	; 66
     88e:	81 e1       	ldi	r24, 0x11	; 17
     890:	de dc       	rcall	.-1604   	; 0x24e <reg_servo_angle>
     892:	2f ef       	ldi	r18, 0xFF	; 255
     894:	82 e5       	ldi	r24, 0x52	; 82
     896:	97 e0       	ldi	r25, 0x07	; 7
     898:	21 50       	subi	r18, 0x01	; 1
     89a:	80 40       	sbci	r24, 0x00	; 0
     89c:	90 40       	sbci	r25, 0x00	; 0
     89e:	e1 f7       	brne	.-8      	; 0x898 <five+0xde>
     8a0:	00 c0       	rjmp	.+0      	; 0x8a2 <five+0xe8>
     8a2:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     8a4:	f8 cc       	rjmp	.-1552   	; 0x296 <action>
     8a6:	08 95       	ret

000008a8 <six>:

void six(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 157);
     8a8:	40 e0       	ldi	r20, 0x00	; 0
     8aa:	50 e0       	ldi	r21, 0x00	; 0
     8ac:	6d e1       	ldi	r22, 0x1D	; 29
     8ae:	73 e4       	ldi	r23, 0x43	; 67
     8b0:	86 e0       	ldi	r24, 0x06	; 6
     8b2:	cd dc       	rcall	.-1638   	; 0x24e <reg_servo_angle>
	reg_servo_angle(7, 60);
     8b4:	40 e0       	ldi	r20, 0x00	; 0
     8b6:	50 e0       	ldi	r21, 0x00	; 0
     8b8:	60 e7       	ldi	r22, 0x70	; 112
     8ba:	72 e4       	ldi	r23, 0x42	; 66
     8bc:	87 e0       	ldi	r24, 0x07	; 7
     8be:	c7 dc       	rcall	.-1650   	; 0x24e <reg_servo_angle>
	reg_servo_angle(8, 226);
     8c0:	40 e0       	ldi	r20, 0x00	; 0
     8c2:	50 e0       	ldi	r21, 0x00	; 0
     8c4:	62 e6       	ldi	r22, 0x62	; 98
     8c6:	73 e4       	ldi	r23, 0x43	; 67
     8c8:	88 e0       	ldi	r24, 0x08	; 8
     8ca:	c1 dc       	rcall	.-1662   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(9, 153);
     8cc:	40 e0       	ldi	r20, 0x00	; 0
     8ce:	50 e0       	ldi	r21, 0x00	; 0
     8d0:	69 e1       	ldi	r22, 0x19	; 25
     8d2:	73 e4       	ldi	r23, 0x43	; 67
     8d4:	89 e0       	ldi	r24, 0x09	; 9
     8d6:	bb dc       	rcall	.-1674   	; 0x24e <reg_servo_angle>
	reg_servo_angle(10, 213);
     8d8:	40 e0       	ldi	r20, 0x00	; 0
     8da:	50 e0       	ldi	r21, 0x00	; 0
     8dc:	65 e5       	ldi	r22, 0x55	; 85
     8de:	73 e4       	ldi	r23, 0x43	; 67
     8e0:	8a e0       	ldi	r24, 0x0A	; 10
     8e2:	b5 dc       	rcall	.-1686   	; 0x24e <reg_servo_angle>
	reg_servo_angle(11, 63);
     8e4:	40 e0       	ldi	r20, 0x00	; 0
     8e6:	50 e0       	ldi	r21, 0x00	; 0
     8e8:	6c e7       	ldi	r22, 0x7C	; 124
     8ea:	72 e4       	ldi	r23, 0x42	; 66
     8ec:	8b e0       	ldi	r24, 0x0B	; 11
     8ee:	af dc       	rcall	.-1698   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(3, 142);
     8f0:	40 e0       	ldi	r20, 0x00	; 0
     8f2:	50 e0       	ldi	r21, 0x00	; 0
     8f4:	6e e0       	ldi	r22, 0x0E	; 14
     8f6:	73 e4       	ldi	r23, 0x43	; 67
     8f8:	83 e0       	ldi	r24, 0x03	; 3
     8fa:	a9 dc       	rcall	.-1710   	; 0x24e <reg_servo_angle>
	reg_servo_angle(4, 93);
     8fc:	40 e0       	ldi	r20, 0x00	; 0
     8fe:	50 e0       	ldi	r21, 0x00	; 0
     900:	6a eb       	ldi	r22, 0xBA	; 186
     902:	72 e4       	ldi	r23, 0x42	; 66
     904:	84 e0       	ldi	r24, 0x04	; 4
     906:	a3 dc       	rcall	.-1722   	; 0x24e <reg_servo_angle>
	reg_servo_angle(5, 226);
     908:	40 e0       	ldi	r20, 0x00	; 0
     90a:	50 e0       	ldi	r21, 0x00	; 0
     90c:	62 e6       	ldi	r22, 0x62	; 98
     90e:	73 e4       	ldi	r23, 0x43	; 67
     910:	85 e0       	ldi	r24, 0x05	; 5
     912:	9d dc       	rcall	.-1734   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(12, 142);
     914:	40 e0       	ldi	r20, 0x00	; 0
     916:	50 e0       	ldi	r21, 0x00	; 0
     918:	6e e0       	ldi	r22, 0x0E	; 14
     91a:	73 e4       	ldi	r23, 0x43	; 67
     91c:	8c e0       	ldi	r24, 0x0C	; 12
     91e:	97 dc       	rcall	.-1746   	; 0x24e <reg_servo_angle>
	reg_servo_angle(13, 235);
     920:	40 e0       	ldi	r20, 0x00	; 0
     922:	50 e0       	ldi	r21, 0x00	; 0
     924:	6b e6       	ldi	r22, 0x6B	; 107
     926:	73 e4       	ldi	r23, 0x43	; 67
     928:	8d e0       	ldi	r24, 0x0D	; 13
     92a:	91 dc       	rcall	.-1758   	; 0x24e <reg_servo_angle>
	reg_servo_angle(14, 64);
     92c:	40 e0       	ldi	r20, 0x00	; 0
     92e:	50 e0       	ldi	r21, 0x00	; 0
     930:	60 e8       	ldi	r22, 0x80	; 128
     932:	72 e4       	ldi	r23, 0x42	; 66
     934:	8e e0       	ldi	r24, 0x0E	; 14
     936:	8b dc       	rcall	.-1770   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(0, 153);
     938:	40 e0       	ldi	r20, 0x00	; 0
     93a:	50 e0       	ldi	r21, 0x00	; 0
     93c:	69 e1       	ldi	r22, 0x19	; 25
     93e:	73 e4       	ldi	r23, 0x43	; 67
     940:	80 e0       	ldi	r24, 0x00	; 0
     942:	85 dc       	rcall	.-1782   	; 0x24e <reg_servo_angle>
	reg_servo_angle(1, 60);
     944:	40 e0       	ldi	r20, 0x00	; 0
     946:	50 e0       	ldi	r21, 0x00	; 0
     948:	60 e7       	ldi	r22, 0x70	; 112
     94a:	72 e4       	ldi	r23, 0x42	; 66
     94c:	81 e0       	ldi	r24, 0x01	; 1
     94e:	7f dc       	rcall	.-1794   	; 0x24e <reg_servo_angle>
	reg_servo_angle(2, 240);
     950:	40 e0       	ldi	r20, 0x00	; 0
     952:	50 e0       	ldi	r21, 0x00	; 0
     954:	60 e7       	ldi	r22, 0x70	; 112
     956:	73 e4       	ldi	r23, 0x43	; 67
     958:	82 e0       	ldi	r24, 0x02	; 2
     95a:	79 dc       	rcall	.-1806   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(15, 157);
     95c:	40 e0       	ldi	r20, 0x00	; 0
     95e:	50 e0       	ldi	r21, 0x00	; 0
     960:	6d e1       	ldi	r22, 0x1D	; 29
     962:	73 e4       	ldi	r23, 0x43	; 67
     964:	8f e0       	ldi	r24, 0x0F	; 15
     966:	73 dc       	rcall	.-1818   	; 0x24e <reg_servo_angle>
	reg_servo_angle(16, 203);
     968:	40 e0       	ldi	r20, 0x00	; 0
     96a:	50 e0       	ldi	r21, 0x00	; 0
     96c:	6b e4       	ldi	r22, 0x4B	; 75
     96e:	73 e4       	ldi	r23, 0x43	; 67
     970:	80 e1       	ldi	r24, 0x10	; 16
     972:	6d dc       	rcall	.-1830   	; 0x24e <reg_servo_angle>
	reg_servo_angle(17, 83);
     974:	40 e0       	ldi	r20, 0x00	; 0
     976:	50 e0       	ldi	r21, 0x00	; 0
     978:	66 ea       	ldi	r22, 0xA6	; 166
     97a:	72 e4       	ldi	r23, 0x42	; 66
     97c:	81 e1       	ldi	r24, 0x11	; 17
     97e:	67 dc       	rcall	.-1842   	; 0x24e <reg_servo_angle>
     980:	2f ef       	ldi	r18, 0xFF	; 255
     982:	82 e5       	ldi	r24, 0x52	; 82
     984:	97 e0       	ldi	r25, 0x07	; 7
     986:	21 50       	subi	r18, 0x01	; 1
     988:	80 40       	sbci	r24, 0x00	; 0
     98a:	90 40       	sbci	r25, 0x00	; 0
     98c:	e1 f7       	brne	.-8      	; 0x986 <six+0xde>
     98e:	00 c0       	rjmp	.+0      	; 0x990 <six+0xe8>
     990:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     992:	81 cc       	rjmp	.-1790   	; 0x296 <action>
     994:	08 95       	ret

00000996 <seven>:

void seven(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 157);
     996:	40 e0       	ldi	r20, 0x00	; 0
     998:	50 e0       	ldi	r21, 0x00	; 0
     99a:	6d e1       	ldi	r22, 0x1D	; 29
     99c:	73 e4       	ldi	r23, 0x43	; 67
     99e:	86 e0       	ldi	r24, 0x06	; 6
     9a0:	56 dc       	rcall	.-1876   	; 0x24e <reg_servo_angle>
	reg_servo_angle(7, 97);
     9a2:	40 e0       	ldi	r20, 0x00	; 0
     9a4:	50 e0       	ldi	r21, 0x00	; 0
     9a6:	62 ec       	ldi	r22, 0xC2	; 194
     9a8:	72 e4       	ldi	r23, 0x42	; 66
     9aa:	87 e0       	ldi	r24, 0x07	; 7
     9ac:	50 dc       	rcall	.-1888   	; 0x24e <reg_servo_angle>
	reg_servo_angle(8, 217);
     9ae:	40 e0       	ldi	r20, 0x00	; 0
     9b0:	50 e0       	ldi	r21, 0x00	; 0
     9b2:	69 e5       	ldi	r22, 0x59	; 89
     9b4:	73 e4       	ldi	r23, 0x43	; 67
     9b6:	88 e0       	ldi	r24, 0x08	; 8
     9b8:	4a dc       	rcall	.-1900   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(9, 153);
     9ba:	40 e0       	ldi	r20, 0x00	; 0
     9bc:	50 e0       	ldi	r21, 0x00	; 0
     9be:	69 e1       	ldi	r22, 0x19	; 25
     9c0:	73 e4       	ldi	r23, 0x43	; 67
     9c2:	89 e0       	ldi	r24, 0x09	; 9
     9c4:	44 dc       	rcall	.-1912   	; 0x24e <reg_servo_angle>
	reg_servo_angle(10, 213);
     9c6:	40 e0       	ldi	r20, 0x00	; 0
     9c8:	50 e0       	ldi	r21, 0x00	; 0
     9ca:	65 e5       	ldi	r22, 0x55	; 85
     9cc:	73 e4       	ldi	r23, 0x43	; 67
     9ce:	8a e0       	ldi	r24, 0x0A	; 10
     9d0:	3e dc       	rcall	.-1924   	; 0x24e <reg_servo_angle>
	reg_servo_angle(11, 63);
     9d2:	40 e0       	ldi	r20, 0x00	; 0
     9d4:	50 e0       	ldi	r21, 0x00	; 0
     9d6:	6c e7       	ldi	r22, 0x7C	; 124
     9d8:	72 e4       	ldi	r23, 0x42	; 66
     9da:	8b e0       	ldi	r24, 0x0B	; 11
     9dc:	38 dc       	rcall	.-1936   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(3, 142);
     9de:	40 e0       	ldi	r20, 0x00	; 0
     9e0:	50 e0       	ldi	r21, 0x00	; 0
     9e2:	6e e0       	ldi	r22, 0x0E	; 14
     9e4:	73 e4       	ldi	r23, 0x43	; 67
     9e6:	83 e0       	ldi	r24, 0x03	; 3
     9e8:	32 dc       	rcall	.-1948   	; 0x24e <reg_servo_angle>
	reg_servo_angle(4, 93);
     9ea:	40 e0       	ldi	r20, 0x00	; 0
     9ec:	50 e0       	ldi	r21, 0x00	; 0
     9ee:	6a eb       	ldi	r22, 0xBA	; 186
     9f0:	72 e4       	ldi	r23, 0x42	; 66
     9f2:	84 e0       	ldi	r24, 0x04	; 4
     9f4:	2c dc       	rcall	.-1960   	; 0x24e <reg_servo_angle>
	reg_servo_angle(5, 226);
     9f6:	40 e0       	ldi	r20, 0x00	; 0
     9f8:	50 e0       	ldi	r21, 0x00	; 0
     9fa:	62 e6       	ldi	r22, 0x62	; 98
     9fc:	73 e4       	ldi	r23, 0x43	; 67
     9fe:	85 e0       	ldi	r24, 0x05	; 5
     a00:	26 dc       	rcall	.-1972   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(12, 142);
     a02:	40 e0       	ldi	r20, 0x00	; 0
     a04:	50 e0       	ldi	r21, 0x00	; 0
     a06:	6e e0       	ldi	r22, 0x0E	; 14
     a08:	73 e4       	ldi	r23, 0x43	; 67
     a0a:	8c e0       	ldi	r24, 0x0C	; 12
     a0c:	20 dc       	rcall	.-1984   	; 0x24e <reg_servo_angle>
	reg_servo_angle(13, 207);
     a0e:	40 e0       	ldi	r20, 0x00	; 0
     a10:	50 e0       	ldi	r21, 0x00	; 0
     a12:	6f e4       	ldi	r22, 0x4F	; 79
     a14:	73 e4       	ldi	r23, 0x43	; 67
     a16:	8d e0       	ldi	r24, 0x0D	; 13
     a18:	1a dc       	rcall	.-1996   	; 0x24e <reg_servo_angle>
	reg_servo_angle(14, 74);
     a1a:	40 e0       	ldi	r20, 0x00	; 0
     a1c:	50 e0       	ldi	r21, 0x00	; 0
     a1e:	64 e9       	ldi	r22, 0x94	; 148
     a20:	72 e4       	ldi	r23, 0x42	; 66
     a22:	8e e0       	ldi	r24, 0x0E	; 14
     a24:	14 dc       	rcall	.-2008   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(0, 153);
     a26:	40 e0       	ldi	r20, 0x00	; 0
     a28:	50 e0       	ldi	r21, 0x00	; 0
     a2a:	69 e1       	ldi	r22, 0x19	; 25
     a2c:	73 e4       	ldi	r23, 0x43	; 67
     a2e:	80 e0       	ldi	r24, 0x00	; 0
     a30:	0e dc       	rcall	.-2020   	; 0x24e <reg_servo_angle>
	reg_servo_angle(1, 87);
     a32:	40 e0       	ldi	r20, 0x00	; 0
     a34:	50 e0       	ldi	r21, 0x00	; 0
     a36:	6e ea       	ldi	r22, 0xAE	; 174
     a38:	72 e4       	ldi	r23, 0x42	; 66
     a3a:	81 e0       	ldi	r24, 0x01	; 1
     a3c:	08 dc       	rcall	.-2032   	; 0x24e <reg_servo_angle>
	reg_servo_angle(2, 237);
     a3e:	40 e0       	ldi	r20, 0x00	; 0
     a40:	50 e0       	ldi	r21, 0x00	; 0
     a42:	6d e6       	ldi	r22, 0x6D	; 109
     a44:	73 e4       	ldi	r23, 0x43	; 67
     a46:	82 e0       	ldi	r24, 0x02	; 2
     a48:	02 dc       	rcall	.-2044   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(15, 157);
     a4a:	40 e0       	ldi	r20, 0x00	; 0
     a4c:	50 e0       	ldi	r21, 0x00	; 0
     a4e:	6d e1       	ldi	r22, 0x1D	; 29
     a50:	73 e4       	ldi	r23, 0x43	; 67
     a52:	8f e0       	ldi	r24, 0x0F	; 15
     a54:	fc db       	rcall	.-2056   	; 0x24e <reg_servo_angle>
	reg_servo_angle(16, 203);
     a56:	40 e0       	ldi	r20, 0x00	; 0
     a58:	50 e0       	ldi	r21, 0x00	; 0
     a5a:	6b e4       	ldi	r22, 0x4B	; 75
     a5c:	73 e4       	ldi	r23, 0x43	; 67
     a5e:	80 e1       	ldi	r24, 0x10	; 16
     a60:	f6 db       	rcall	.-2068   	; 0x24e <reg_servo_angle>
	reg_servo_angle(17, 83);
     a62:	40 e0       	ldi	r20, 0x00	; 0
     a64:	50 e0       	ldi	r21, 0x00	; 0
     a66:	66 ea       	ldi	r22, 0xA6	; 166
     a68:	72 e4       	ldi	r23, 0x42	; 66
     a6a:	81 e1       	ldi	r24, 0x11	; 17
     a6c:	f0 db       	rcall	.-2080   	; 0x24e <reg_servo_angle>
     a6e:	2f ef       	ldi	r18, 0xFF	; 255
     a70:	82 e5       	ldi	r24, 0x52	; 82
     a72:	97 e0       	ldi	r25, 0x07	; 7
     a74:	21 50       	subi	r18, 0x01	; 1
     a76:	80 40       	sbci	r24, 0x00	; 0
     a78:	90 40       	sbci	r25, 0x00	; 0
     a7a:	e1 f7       	brne	.-8      	; 0xa74 <seven+0xde>
     a7c:	00 c0       	rjmp	.+0      	; 0xa7e <seven+0xe8>
     a7e:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     a80:	0a cc       	rjmp	.-2028   	; 0x296 <action>
     a82:	08 95       	ret

00000a84 <eight>:

void eight(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 157);
     a84:	40 e0       	ldi	r20, 0x00	; 0
     a86:	50 e0       	ldi	r21, 0x00	; 0
     a88:	6d e1       	ldi	r22, 0x1D	; 29
     a8a:	73 e4       	ldi	r23, 0x43	; 67
     a8c:	86 e0       	ldi	r24, 0x06	; 6
     a8e:	df db       	rcall	.-2114   	; 0x24e <reg_servo_angle>
	reg_servo_angle(7, 97);
     a90:	40 e0       	ldi	r20, 0x00	; 0
     a92:	50 e0       	ldi	r21, 0x00	; 0
     a94:	62 ec       	ldi	r22, 0xC2	; 194
     a96:	72 e4       	ldi	r23, 0x42	; 66
     a98:	87 e0       	ldi	r24, 0x07	; 7
     a9a:	d9 db       	rcall	.-2126   	; 0x24e <reg_servo_angle>
	reg_servo_angle(8, 217);
     a9c:	40 e0       	ldi	r20, 0x00	; 0
     a9e:	50 e0       	ldi	r21, 0x00	; 0
     aa0:	69 e5       	ldi	r22, 0x59	; 89
     aa2:	73 e4       	ldi	r23, 0x43	; 67
     aa4:	88 e0       	ldi	r24, 0x08	; 8
     aa6:	d3 db       	rcall	.-2138   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(9, 153);
     aa8:	40 e0       	ldi	r20, 0x00	; 0
     aaa:	50 e0       	ldi	r21, 0x00	; 0
     aac:	69 e1       	ldi	r22, 0x19	; 25
     aae:	73 e4       	ldi	r23, 0x43	; 67
     ab0:	89 e0       	ldi	r24, 0x09	; 9
     ab2:	cd db       	rcall	.-2150   	; 0x24e <reg_servo_angle>
	reg_servo_angle(10, 240);
     ab4:	40 e0       	ldi	r20, 0x00	; 0
     ab6:	50 e0       	ldi	r21, 0x00	; 0
     ab8:	60 e7       	ldi	r22, 0x70	; 112
     aba:	73 e4       	ldi	r23, 0x43	; 67
     abc:	8a e0       	ldi	r24, 0x0A	; 10
     abe:	c7 db       	rcall	.-2162   	; 0x24e <reg_servo_angle>
	reg_servo_angle(11, 60);
     ac0:	40 e0       	ldi	r20, 0x00	; 0
     ac2:	50 e0       	ldi	r21, 0x00	; 0
     ac4:	60 e7       	ldi	r22, 0x70	; 112
     ac6:	72 e4       	ldi	r23, 0x42	; 66
     ac8:	8b e0       	ldi	r24, 0x0B	; 11
     aca:	c1 db       	rcall	.-2174   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(3, 142);
     acc:	40 e0       	ldi	r20, 0x00	; 0
     ace:	50 e0       	ldi	r21, 0x00	; 0
     ad0:	6e e0       	ldi	r22, 0x0E	; 14
     ad2:	73 e4       	ldi	r23, 0x43	; 67
     ad4:	83 e0       	ldi	r24, 0x03	; 3
     ad6:	bb db       	rcall	.-2186   	; 0x24e <reg_servo_angle>
	reg_servo_angle(4, 65);
     ad8:	40 e0       	ldi	r20, 0x00	; 0
     ada:	50 e0       	ldi	r21, 0x00	; 0
     adc:	62 e8       	ldi	r22, 0x82	; 130
     ade:	72 e4       	ldi	r23, 0x42	; 66
     ae0:	84 e0       	ldi	r24, 0x04	; 4
     ae2:	b5 db       	rcall	.-2198   	; 0x24e <reg_servo_angle>
	reg_servo_angle(5, 236);
     ae4:	40 e0       	ldi	r20, 0x00	; 0
     ae6:	50 e0       	ldi	r21, 0x00	; 0
     ae8:	6c e6       	ldi	r22, 0x6C	; 108
     aea:	73 e4       	ldi	r23, 0x43	; 67
     aec:	85 e0       	ldi	r24, 0x05	; 5
     aee:	af db       	rcall	.-2210   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(12, 142);
     af0:	40 e0       	ldi	r20, 0x00	; 0
     af2:	50 e0       	ldi	r21, 0x00	; 0
     af4:	6e e0       	ldi	r22, 0x0E	; 14
     af6:	73 e4       	ldi	r23, 0x43	; 67
     af8:	8c e0       	ldi	r24, 0x0C	; 12
     afa:	a9 db       	rcall	.-2222   	; 0x24e <reg_servo_angle>
	reg_servo_angle(13, 207);
     afc:	40 e0       	ldi	r20, 0x00	; 0
     afe:	50 e0       	ldi	r21, 0x00	; 0
     b00:	6f e4       	ldi	r22, 0x4F	; 79
     b02:	73 e4       	ldi	r23, 0x43	; 67
     b04:	8d e0       	ldi	r24, 0x0D	; 13
     b06:	a3 db       	rcall	.-2234   	; 0x24e <reg_servo_angle>
	reg_servo_angle(14, 74);
     b08:	40 e0       	ldi	r20, 0x00	; 0
     b0a:	50 e0       	ldi	r21, 0x00	; 0
     b0c:	64 e9       	ldi	r22, 0x94	; 148
     b0e:	72 e4       	ldi	r23, 0x42	; 66
     b10:	8e e0       	ldi	r24, 0x0E	; 14
     b12:	9d db       	rcall	.-2246   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(0, 153);
     b14:	40 e0       	ldi	r20, 0x00	; 0
     b16:	50 e0       	ldi	r21, 0x00	; 0
     b18:	69 e1       	ldi	r22, 0x19	; 25
     b1a:	73 e4       	ldi	r23, 0x43	; 67
     b1c:	80 e0       	ldi	r24, 0x00	; 0
     b1e:	97 db       	rcall	.-2258   	; 0x24e <reg_servo_angle>
	reg_servo_angle(1, 87);
     b20:	40 e0       	ldi	r20, 0x00	; 0
     b22:	50 e0       	ldi	r21, 0x00	; 0
     b24:	6e ea       	ldi	r22, 0xAE	; 174
     b26:	72 e4       	ldi	r23, 0x42	; 66
     b28:	81 e0       	ldi	r24, 0x01	; 1
     b2a:	91 db       	rcall	.-2270   	; 0x24e <reg_servo_angle>
	reg_servo_angle(2, 237);
     b2c:	40 e0       	ldi	r20, 0x00	; 0
     b2e:	50 e0       	ldi	r21, 0x00	; 0
     b30:	6d e6       	ldi	r22, 0x6D	; 109
     b32:	73 e4       	ldi	r23, 0x43	; 67
     b34:	82 e0       	ldi	r24, 0x02	; 2
     b36:	8b db       	rcall	.-2282   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(15, 157);
     b38:	40 e0       	ldi	r20, 0x00	; 0
     b3a:	50 e0       	ldi	r21, 0x00	; 0
     b3c:	6d e1       	ldi	r22, 0x1D	; 29
     b3e:	73 e4       	ldi	r23, 0x43	; 67
     b40:	8f e0       	ldi	r24, 0x0F	; 15
     b42:	85 db       	rcall	.-2294   	; 0x24e <reg_servo_angle>
	reg_servo_angle(16, 240);
     b44:	40 e0       	ldi	r20, 0x00	; 0
     b46:	50 e0       	ldi	r21, 0x00	; 0
     b48:	60 e7       	ldi	r22, 0x70	; 112
     b4a:	73 e4       	ldi	r23, 0x43	; 67
     b4c:	80 e1       	ldi	r24, 0x10	; 16
     b4e:	7f db       	rcall	.-2306   	; 0x24e <reg_servo_angle>
	reg_servo_angle(17, 74);
     b50:	40 e0       	ldi	r20, 0x00	; 0
     b52:	50 e0       	ldi	r21, 0x00	; 0
     b54:	64 e9       	ldi	r22, 0x94	; 148
     b56:	72 e4       	ldi	r23, 0x42	; 66
     b58:	81 e1       	ldi	r24, 0x11	; 17
     b5a:	79 db       	rcall	.-2318   	; 0x24e <reg_servo_angle>
     b5c:	2f ef       	ldi	r18, 0xFF	; 255
     b5e:	82 e5       	ldi	r24, 0x52	; 82
     b60:	97 e0       	ldi	r25, 0x07	; 7
     b62:	21 50       	subi	r18, 0x01	; 1
     b64:	80 40       	sbci	r24, 0x00	; 0
     b66:	90 40       	sbci	r25, 0x00	; 0
     b68:	e1 f7       	brne	.-8      	; 0xb62 <eight+0xde>
     b6a:	00 c0       	rjmp	.+0      	; 0xb6c <eight+0xe8>
     b6c:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     b6e:	93 cb       	rjmp	.-2266   	; 0x296 <action>
     b70:	08 95       	ret

00000b72 <forward>:
}

//Funktion för gång framåt
void forward(void)
{
	eight();
     b72:	88 df       	rcall	.-240    	; 0xa84 <eight>
	one();
     b74:	46 dc       	rcall	.-1908   	; 0x402 <one>
	two();
     b76:	bc dc       	rcall	.-1672   	; 0x4f0 <two>
	three();
     b78:	32 dd       	rcall	.-1436   	; 0x5de <three>
	four();
     b7a:	a8 dd       	rcall	.-1200   	; 0x6cc <four>
	five();
     b7c:	1e de       	rcall	.-964    	; 0x7ba <five>
	six();
     b7e:	94 de       	rcall	.-728    	; 0x8a8 <six>
	seven();
     b80:	0a cf       	rjmp	.-492    	; 0x996 <seven>
     b82:	08 95       	ret

00000b84 <backward>:
}

//Funktion för gång bakåt
void backward(void)
{
	seven();
     b84:	08 df       	rcall	.-496    	; 0x996 <seven>
	six();
     b86:	90 de       	rcall	.-736    	; 0x8a8 <six>
	five();
     b88:	18 de       	rcall	.-976    	; 0x7ba <five>
	four();
     b8a:	a0 dd       	rcall	.-1216   	; 0x6cc <four>
	three();
     b8c:	28 dd       	rcall	.-1456   	; 0x5de <three>
	two();
     b8e:	b0 dc       	rcall	.-1696   	; 0x4f0 <two>
	one();
     b90:	38 dc       	rcall	.-1936   	; 0x402 <one>
	eight();
     b92:	78 cf       	rjmp	.-272    	; 0xa84 <eight>
     b94:	08 95       	ret

00000b96 <one_rot>:
//Funktionerna som utgör gångstilarna rotera höger och rotera vänster
void one_rot(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 150);
     b96:	40 e0       	ldi	r20, 0x00	; 0
     b98:	50 e0       	ldi	r21, 0x00	; 0
     b9a:	66 e1       	ldi	r22, 0x16	; 22
     b9c:	73 e4       	ldi	r23, 0x43	; 67
     b9e:	86 e0       	ldi	r24, 0x06	; 6
     ba0:	56 db       	rcall	.-2388   	; 0x24e <reg_servo_angle>
	reg_servo_angle(7, 90);
     ba2:	40 e0       	ldi	r20, 0x00	; 0
     ba4:	50 e0       	ldi	r21, 0x00	; 0
     ba6:	64 eb       	ldi	r22, 0xB4	; 180
     ba8:	72 e4       	ldi	r23, 0x42	; 66
     baa:	87 e0       	ldi	r24, 0x07	; 7
     bac:	50 db       	rcall	.-2400   	; 0x24e <reg_servo_angle>
	reg_servo_angle(8, 220);
     bae:	40 e0       	ldi	r20, 0x00	; 0
     bb0:	50 e0       	ldi	r21, 0x00	; 0
     bb2:	6c e5       	ldi	r22, 0x5C	; 92
     bb4:	73 e4       	ldi	r23, 0x43	; 67
     bb6:	88 e0       	ldi	r24, 0x08	; 8
     bb8:	4a db       	rcall	.-2412   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(9, 165);
     bba:	40 e0       	ldi	r20, 0x00	; 0
     bbc:	50 e0       	ldi	r21, 0x00	; 0
     bbe:	65 e2       	ldi	r22, 0x25	; 37
     bc0:	73 e4       	ldi	r23, 0x43	; 67
     bc2:	89 e0       	ldi	r24, 0x09	; 9
     bc4:	44 db       	rcall	.-2424   	; 0x24e <reg_servo_angle>
	reg_servo_angle(10, 221);
     bc6:	40 e0       	ldi	r20, 0x00	; 0
     bc8:	50 e0       	ldi	r21, 0x00	; 0
     bca:	6d e5       	ldi	r22, 0x5D	; 93
     bcc:	73 e4       	ldi	r23, 0x43	; 67
     bce:	8a e0       	ldi	r24, 0x0A	; 10
     bd0:	3e db       	rcall	.-2436   	; 0x24e <reg_servo_angle>
	reg_servo_angle(11, 82);
     bd2:	40 e0       	ldi	r20, 0x00	; 0
     bd4:	50 e0       	ldi	r21, 0x00	; 0
     bd6:	64 ea       	ldi	r22, 0xA4	; 164
     bd8:	72 e4       	ldi	r23, 0x42	; 66
     bda:	8b e0       	ldi	r24, 0x0B	; 11
     bdc:	38 db       	rcall	.-2448   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(3, 164);
     bde:	40 e0       	ldi	r20, 0x00	; 0
     be0:	50 e0       	ldi	r21, 0x00	; 0
     be2:	64 e2       	ldi	r22, 0x24	; 36
     be4:	73 e4       	ldi	r23, 0x43	; 67
     be6:	83 e0       	ldi	r24, 0x03	; 3
     be8:	32 db       	rcall	.-2460   	; 0x24e <reg_servo_angle>
	reg_servo_angle(4, 73);
     bea:	40 e0       	ldi	r20, 0x00	; 0
     bec:	50 e0       	ldi	r21, 0x00	; 0
     bee:	62 e9       	ldi	r22, 0x92	; 146
     bf0:	72 e4       	ldi	r23, 0x42	; 66
     bf2:	84 e0       	ldi	r24, 0x04	; 4
     bf4:	2c db       	rcall	.-2472   	; 0x24e <reg_servo_angle>
	reg_servo_angle(5, 227);
     bf6:	40 e0       	ldi	r20, 0x00	; 0
     bf8:	50 e0       	ldi	r21, 0x00	; 0
     bfa:	63 e6       	ldi	r22, 0x63	; 99
     bfc:	73 e4       	ldi	r23, 0x43	; 67
     bfe:	85 e0       	ldi	r24, 0x05	; 5
     c00:	26 db       	rcall	.-2484   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(12, 150);
     c02:	40 e0       	ldi	r20, 0x00	; 0
     c04:	50 e0       	ldi	r21, 0x00	; 0
     c06:	66 e1       	ldi	r22, 0x16	; 22
     c08:	73 e4       	ldi	r23, 0x43	; 67
     c0a:	8c e0       	ldi	r24, 0x0C	; 12
     c0c:	20 db       	rcall	.-2496   	; 0x24e <reg_servo_angle>
	reg_servo_angle(13, 210);
     c0e:	40 e0       	ldi	r20, 0x00	; 0
     c10:	50 e0       	ldi	r21, 0x00	; 0
     c12:	62 e5       	ldi	r22, 0x52	; 82
     c14:	73 e4       	ldi	r23, 0x43	; 67
     c16:	8d e0       	ldi	r24, 0x0D	; 13
     c18:	1a db       	rcall	.-2508   	; 0x24e <reg_servo_angle>
	reg_servo_angle(14, 80);
     c1a:	40 e0       	ldi	r20, 0x00	; 0
     c1c:	50 e0       	ldi	r21, 0x00	; 0
     c1e:	60 ea       	ldi	r22, 0xA0	; 160
     c20:	72 e4       	ldi	r23, 0x42	; 66
     c22:	8e e0       	ldi	r24, 0x0E	; 14
     c24:	14 db       	rcall	.-2520   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(0, 150);
     c26:	40 e0       	ldi	r20, 0x00	; 0
     c28:	50 e0       	ldi	r21, 0x00	; 0
     c2a:	66 e1       	ldi	r22, 0x16	; 22
     c2c:	73 e4       	ldi	r23, 0x43	; 67
     c2e:	80 e0       	ldi	r24, 0x00	; 0
     c30:	0e db       	rcall	.-2532   	; 0x24e <reg_servo_angle>
	reg_servo_angle(1, 90);
     c32:	40 e0       	ldi	r20, 0x00	; 0
     c34:	50 e0       	ldi	r21, 0x00	; 0
     c36:	64 eb       	ldi	r22, 0xB4	; 180
     c38:	72 e4       	ldi	r23, 0x42	; 66
     c3a:	81 e0       	ldi	r24, 0x01	; 1
     c3c:	08 db       	rcall	.-2544   	; 0x24e <reg_servo_angle>
	reg_servo_angle(2, 220);
     c3e:	40 e0       	ldi	r20, 0x00	; 0
     c40:	50 e0       	ldi	r21, 0x00	; 0
     c42:	6c e5       	ldi	r22, 0x5C	; 92
     c44:	73 e4       	ldi	r23, 0x43	; 67
     c46:	82 e0       	ldi	r24, 0x02	; 2
     c48:	02 db       	rcall	.-2556   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(15, 165);
     c4a:	40 e0       	ldi	r20, 0x00	; 0
     c4c:	50 e0       	ldi	r21, 0x00	; 0
     c4e:	65 e2       	ldi	r22, 0x25	; 37
     c50:	73 e4       	ldi	r23, 0x43	; 67
     c52:	8f e0       	ldi	r24, 0x0F	; 15
     c54:	fc da       	rcall	.-2568   	; 0x24e <reg_servo_angle>
	reg_servo_angle(16, 221);
     c56:	40 e0       	ldi	r20, 0x00	; 0
     c58:	50 e0       	ldi	r21, 0x00	; 0
     c5a:	6d e5       	ldi	r22, 0x5D	; 93
     c5c:	73 e4       	ldi	r23, 0x43	; 67
     c5e:	80 e1       	ldi	r24, 0x10	; 16
     c60:	f6 da       	rcall	.-2580   	; 0x24e <reg_servo_angle>
	reg_servo_angle(17, 82);
     c62:	40 e0       	ldi	r20, 0x00	; 0
     c64:	50 e0       	ldi	r21, 0x00	; 0
     c66:	64 ea       	ldi	r22, 0xA4	; 164
     c68:	72 e4       	ldi	r23, 0x42	; 66
     c6a:	81 e1       	ldi	r24, 0x11	; 17
     c6c:	f0 da       	rcall	.-2592   	; 0x24e <reg_servo_angle>
     c6e:	2f ef       	ldi	r18, 0xFF	; 255
     c70:	82 e5       	ldi	r24, 0x52	; 82
     c72:	97 e0       	ldi	r25, 0x07	; 7
     c74:	21 50       	subi	r18, 0x01	; 1
     c76:	80 40       	sbci	r24, 0x00	; 0
     c78:	90 40       	sbci	r25, 0x00	; 0
     c7a:	e1 f7       	brne	.-8      	; 0xc74 <one_rot+0xde>
     c7c:	00 c0       	rjmp	.+0      	; 0xc7e <one_rot+0xe8>
     c7e:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     c80:	0a cb       	rjmp	.-2540   	; 0x296 <action>
     c82:	08 95       	ret

00000c84 <two_rot>:

void two_rot(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 150);
     c84:	40 e0       	ldi	r20, 0x00	; 0
     c86:	50 e0       	ldi	r21, 0x00	; 0
     c88:	66 e1       	ldi	r22, 0x16	; 22
     c8a:	73 e4       	ldi	r23, 0x43	; 67
     c8c:	86 e0       	ldi	r24, 0x06	; 6
     c8e:	df da       	rcall	.-2626   	; 0x24e <reg_servo_angle>
	reg_servo_angle(7, 90);
     c90:	40 e0       	ldi	r20, 0x00	; 0
     c92:	50 e0       	ldi	r21, 0x00	; 0
     c94:	64 eb       	ldi	r22, 0xB4	; 180
     c96:	72 e4       	ldi	r23, 0x42	; 66
     c98:	87 e0       	ldi	r24, 0x07	; 7
     c9a:	d9 da       	rcall	.-2638   	; 0x24e <reg_servo_angle>
	reg_servo_angle(8, 220);
     c9c:	40 e0       	ldi	r20, 0x00	; 0
     c9e:	50 e0       	ldi	r21, 0x00	; 0
     ca0:	6c e5       	ldi	r22, 0x5C	; 92
     ca2:	73 e4       	ldi	r23, 0x43	; 67
     ca4:	88 e0       	ldi	r24, 0x08	; 8
     ca6:	d3 da       	rcall	.-2650   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(9, 178);
     ca8:	40 e0       	ldi	r20, 0x00	; 0
     caa:	50 e0       	ldi	r21, 0x00	; 0
     cac:	62 e3       	ldi	r22, 0x32	; 50
     cae:	73 e4       	ldi	r23, 0x43	; 67
     cb0:	89 e0       	ldi	r24, 0x09	; 9
     cb2:	cd da       	rcall	.-2662   	; 0x24e <reg_servo_angle>
	reg_servo_angle(10, 211);
     cb4:	40 e0       	ldi	r20, 0x00	; 0
     cb6:	50 e0       	ldi	r21, 0x00	; 0
     cb8:	63 e5       	ldi	r22, 0x53	; 83
     cba:	73 e4       	ldi	r23, 0x43	; 67
     cbc:	8a e0       	ldi	r24, 0x0A	; 10
     cbe:	c7 da       	rcall	.-2674   	; 0x24e <reg_servo_angle>
	reg_servo_angle(11, 95);
     cc0:	40 e0       	ldi	r20, 0x00	; 0
     cc2:	50 e0       	ldi	r21, 0x00	; 0
     cc4:	6e eb       	ldi	r22, 0xBE	; 190
     cc6:	72 e4       	ldi	r23, 0x42	; 66
     cc8:	8b e0       	ldi	r24, 0x0B	; 11
     cca:	c1 da       	rcall	.-2686   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(3, 176);
     ccc:	40 e0       	ldi	r20, 0x00	; 0
     cce:	50 e0       	ldi	r21, 0x00	; 0
     cd0:	60 e3       	ldi	r22, 0x30	; 48
     cd2:	73 e4       	ldi	r23, 0x43	; 67
     cd4:	83 e0       	ldi	r24, 0x03	; 3
     cd6:	bb da       	rcall	.-2698   	; 0x24e <reg_servo_angle>
	reg_servo_angle(4, 75);
     cd8:	40 e0       	ldi	r20, 0x00	; 0
     cda:	50 e0       	ldi	r21, 0x00	; 0
     cdc:	66 e9       	ldi	r22, 0x96	; 150
     cde:	72 e4       	ldi	r23, 0x42	; 66
     ce0:	84 e0       	ldi	r24, 0x04	; 4
     ce2:	b5 da       	rcall	.-2710   	; 0x24e <reg_servo_angle>
	reg_servo_angle(5, 224);
     ce4:	40 e0       	ldi	r20, 0x00	; 0
     ce6:	50 e0       	ldi	r21, 0x00	; 0
     ce8:	60 e6       	ldi	r22, 0x60	; 96
     cea:	73 e4       	ldi	r23, 0x43	; 67
     cec:	85 e0       	ldi	r24, 0x05	; 5
     cee:	af da       	rcall	.-2722   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(12, 150);
     cf0:	40 e0       	ldi	r20, 0x00	; 0
     cf2:	50 e0       	ldi	r21, 0x00	; 0
     cf4:	66 e1       	ldi	r22, 0x16	; 22
     cf6:	73 e4       	ldi	r23, 0x43	; 67
     cf8:	8c e0       	ldi	r24, 0x0C	; 12
     cfa:	a9 da       	rcall	.-2734   	; 0x24e <reg_servo_angle>
	reg_servo_angle(13, 210);
     cfc:	40 e0       	ldi	r20, 0x00	; 0
     cfe:	50 e0       	ldi	r21, 0x00	; 0
     d00:	62 e5       	ldi	r22, 0x52	; 82
     d02:	73 e4       	ldi	r23, 0x43	; 67
     d04:	8d e0       	ldi	r24, 0x0D	; 13
     d06:	a3 da       	rcall	.-2746   	; 0x24e <reg_servo_angle>
	reg_servo_angle(14, 80);
     d08:	40 e0       	ldi	r20, 0x00	; 0
     d0a:	50 e0       	ldi	r21, 0x00	; 0
     d0c:	60 ea       	ldi	r22, 0xA0	; 160
     d0e:	72 e4       	ldi	r23, 0x42	; 66
     d10:	8e e0       	ldi	r24, 0x0E	; 14
     d12:	9d da       	rcall	.-2758   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(0, 150);
     d14:	40 e0       	ldi	r20, 0x00	; 0
     d16:	50 e0       	ldi	r21, 0x00	; 0
     d18:	66 e1       	ldi	r22, 0x16	; 22
     d1a:	73 e4       	ldi	r23, 0x43	; 67
     d1c:	80 e0       	ldi	r24, 0x00	; 0
     d1e:	97 da       	rcall	.-2770   	; 0x24e <reg_servo_angle>
	reg_servo_angle(1, 90);
     d20:	40 e0       	ldi	r20, 0x00	; 0
     d22:	50 e0       	ldi	r21, 0x00	; 0
     d24:	64 eb       	ldi	r22, 0xB4	; 180
     d26:	72 e4       	ldi	r23, 0x42	; 66
     d28:	81 e0       	ldi	r24, 0x01	; 1
     d2a:	91 da       	rcall	.-2782   	; 0x24e <reg_servo_angle>
	reg_servo_angle(2, 220);
     d2c:	40 e0       	ldi	r20, 0x00	; 0
     d2e:	50 e0       	ldi	r21, 0x00	; 0
     d30:	6c e5       	ldi	r22, 0x5C	; 92
     d32:	73 e4       	ldi	r23, 0x43	; 67
     d34:	82 e0       	ldi	r24, 0x02	; 2
     d36:	8b da       	rcall	.-2794   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(15, 178);
     d38:	40 e0       	ldi	r20, 0x00	; 0
     d3a:	50 e0       	ldi	r21, 0x00	; 0
     d3c:	62 e3       	ldi	r22, 0x32	; 50
     d3e:	73 e4       	ldi	r23, 0x43	; 67
     d40:	8f e0       	ldi	r24, 0x0F	; 15
     d42:	85 da       	rcall	.-2806   	; 0x24e <reg_servo_angle>
	reg_servo_angle(16, 211);
     d44:	40 e0       	ldi	r20, 0x00	; 0
     d46:	50 e0       	ldi	r21, 0x00	; 0
     d48:	63 e5       	ldi	r22, 0x53	; 83
     d4a:	73 e4       	ldi	r23, 0x43	; 67
     d4c:	80 e1       	ldi	r24, 0x10	; 16
     d4e:	7f da       	rcall	.-2818   	; 0x24e <reg_servo_angle>
	reg_servo_angle(17, 95);
     d50:	40 e0       	ldi	r20, 0x00	; 0
     d52:	50 e0       	ldi	r21, 0x00	; 0
     d54:	6e eb       	ldi	r22, 0xBE	; 190
     d56:	72 e4       	ldi	r23, 0x42	; 66
     d58:	81 e1       	ldi	r24, 0x11	; 17
     d5a:	79 da       	rcall	.-2830   	; 0x24e <reg_servo_angle>
     d5c:	2f ef       	ldi	r18, 0xFF	; 255
     d5e:	82 e5       	ldi	r24, 0x52	; 82
     d60:	97 e0       	ldi	r25, 0x07	; 7
     d62:	21 50       	subi	r18, 0x01	; 1
     d64:	80 40       	sbci	r24, 0x00	; 0
     d66:	90 40       	sbci	r25, 0x00	; 0
     d68:	e1 f7       	brne	.-8      	; 0xd62 <two_rot+0xde>
     d6a:	00 c0       	rjmp	.+0      	; 0xd6c <two_rot+0xe8>
     d6c:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     d6e:	93 ca       	rjmp	.-2778   	; 0x296 <action>
     d70:	08 95       	ret

00000d72 <three_rot>:

void three_rot(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 150);
     d72:	40 e0       	ldi	r20, 0x00	; 0
     d74:	50 e0       	ldi	r21, 0x00	; 0
     d76:	66 e1       	ldi	r22, 0x16	; 22
     d78:	73 e4       	ldi	r23, 0x43	; 67
     d7a:	86 e0       	ldi	r24, 0x06	; 6
     d7c:	68 da       	rcall	.-2864   	; 0x24e <reg_servo_angle>
	reg_servo_angle(7, 90);
     d7e:	40 e0       	ldi	r20, 0x00	; 0
     d80:	50 e0       	ldi	r21, 0x00	; 0
     d82:	64 eb       	ldi	r22, 0xB4	; 180
     d84:	72 e4       	ldi	r23, 0x42	; 66
     d86:	87 e0       	ldi	r24, 0x07	; 7
     d88:	62 da       	rcall	.-2876   	; 0x24e <reg_servo_angle>
	reg_servo_angle(8, 220);
     d8a:	40 e0       	ldi	r20, 0x00	; 0
     d8c:	50 e0       	ldi	r21, 0x00	; 0
     d8e:	6c e5       	ldi	r22, 0x5C	; 92
     d90:	73 e4       	ldi	r23, 0x43	; 67
     d92:	88 e0       	ldi	r24, 0x08	; 8
     d94:	5c da       	rcall	.-2888   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(9, 178);
     d96:	40 e0       	ldi	r20, 0x00	; 0
     d98:	50 e0       	ldi	r21, 0x00	; 0
     d9a:	62 e3       	ldi	r22, 0x32	; 50
     d9c:	73 e4       	ldi	r23, 0x43	; 67
     d9e:	89 e0       	ldi	r24, 0x09	; 9
     da0:	56 da       	rcall	.-2900   	; 0x24e <reg_servo_angle>
	reg_servo_angle(10, 199);
     da2:	40 e0       	ldi	r20, 0x00	; 0
     da4:	50 e0       	ldi	r21, 0x00	; 0
     da6:	67 e4       	ldi	r22, 0x47	; 71
     da8:	73 e4       	ldi	r23, 0x43	; 67
     daa:	8a e0       	ldi	r24, 0x0A	; 10
     dac:	50 da       	rcall	.-2912   	; 0x24e <reg_servo_angle>
	reg_servo_angle(11, 102);
     dae:	40 e0       	ldi	r20, 0x00	; 0
     db0:	50 e0       	ldi	r21, 0x00	; 0
     db2:	6c ec       	ldi	r22, 0xCC	; 204
     db4:	72 e4       	ldi	r23, 0x42	; 66
     db6:	8b e0       	ldi	r24, 0x0B	; 11
     db8:	4a da       	rcall	.-2924   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(3, 176);
     dba:	40 e0       	ldi	r20, 0x00	; 0
     dbc:	50 e0       	ldi	r21, 0x00	; 0
     dbe:	60 e3       	ldi	r22, 0x30	; 48
     dc0:	73 e4       	ldi	r23, 0x43	; 67
     dc2:	83 e0       	ldi	r24, 0x03	; 3
     dc4:	44 da       	rcall	.-2936   	; 0x24e <reg_servo_angle>
	reg_servo_angle(4, 89);
     dc6:	40 e0       	ldi	r20, 0x00	; 0
     dc8:	50 e0       	ldi	r21, 0x00	; 0
     dca:	62 eb       	ldi	r22, 0xB2	; 178
     dcc:	72 e4       	ldi	r23, 0x42	; 66
     dce:	84 e0       	ldi	r24, 0x04	; 4
     dd0:	3e da       	rcall	.-2948   	; 0x24e <reg_servo_angle>
	reg_servo_angle(5, 217);
     dd2:	40 e0       	ldi	r20, 0x00	; 0
     dd4:	50 e0       	ldi	r21, 0x00	; 0
     dd6:	69 e5       	ldi	r22, 0x59	; 89
     dd8:	73 e4       	ldi	r23, 0x43	; 67
     dda:	85 e0       	ldi	r24, 0x05	; 5
     ddc:	38 da       	rcall	.-2960   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(12, 150);
     dde:	40 e0       	ldi	r20, 0x00	; 0
     de0:	50 e0       	ldi	r21, 0x00	; 0
     de2:	66 e1       	ldi	r22, 0x16	; 22
     de4:	73 e4       	ldi	r23, 0x43	; 67
     de6:	8c e0       	ldi	r24, 0x0C	; 12
     de8:	32 da       	rcall	.-2972   	; 0x24e <reg_servo_angle>
	reg_servo_angle(13, 210);
     dea:	40 e0       	ldi	r20, 0x00	; 0
     dec:	50 e0       	ldi	r21, 0x00	; 0
     dee:	62 e5       	ldi	r22, 0x52	; 82
     df0:	73 e4       	ldi	r23, 0x43	; 67
     df2:	8d e0       	ldi	r24, 0x0D	; 13
     df4:	2c da       	rcall	.-2984   	; 0x24e <reg_servo_angle>
	reg_servo_angle(14, 80);
     df6:	40 e0       	ldi	r20, 0x00	; 0
     df8:	50 e0       	ldi	r21, 0x00	; 0
     dfa:	60 ea       	ldi	r22, 0xA0	; 160
     dfc:	72 e4       	ldi	r23, 0x42	; 66
     dfe:	8e e0       	ldi	r24, 0x0E	; 14
     e00:	26 da       	rcall	.-2996   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(0, 150);
     e02:	40 e0       	ldi	r20, 0x00	; 0
     e04:	50 e0       	ldi	r21, 0x00	; 0
     e06:	66 e1       	ldi	r22, 0x16	; 22
     e08:	73 e4       	ldi	r23, 0x43	; 67
     e0a:	80 e0       	ldi	r24, 0x00	; 0
     e0c:	20 da       	rcall	.-3008   	; 0x24e <reg_servo_angle>
	reg_servo_angle(1, 90);
     e0e:	40 e0       	ldi	r20, 0x00	; 0
     e10:	50 e0       	ldi	r21, 0x00	; 0
     e12:	64 eb       	ldi	r22, 0xB4	; 180
     e14:	72 e4       	ldi	r23, 0x42	; 66
     e16:	81 e0       	ldi	r24, 0x01	; 1
     e18:	1a da       	rcall	.-3020   	; 0x24e <reg_servo_angle>
	reg_servo_angle(2, 220);
     e1a:	40 e0       	ldi	r20, 0x00	; 0
     e1c:	50 e0       	ldi	r21, 0x00	; 0
     e1e:	6c e5       	ldi	r22, 0x5C	; 92
     e20:	73 e4       	ldi	r23, 0x43	; 67
     e22:	82 e0       	ldi	r24, 0x02	; 2
     e24:	14 da       	rcall	.-3032   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(15, 178);
     e26:	40 e0       	ldi	r20, 0x00	; 0
     e28:	50 e0       	ldi	r21, 0x00	; 0
     e2a:	62 e3       	ldi	r22, 0x32	; 50
     e2c:	73 e4       	ldi	r23, 0x43	; 67
     e2e:	8f e0       	ldi	r24, 0x0F	; 15
     e30:	0e da       	rcall	.-3044   	; 0x24e <reg_servo_angle>
	reg_servo_angle(16, 199);
     e32:	40 e0       	ldi	r20, 0x00	; 0
     e34:	50 e0       	ldi	r21, 0x00	; 0
     e36:	67 e4       	ldi	r22, 0x47	; 71
     e38:	73 e4       	ldi	r23, 0x43	; 67
     e3a:	80 e1       	ldi	r24, 0x10	; 16
     e3c:	08 da       	rcall	.-3056   	; 0x24e <reg_servo_angle>
	reg_servo_angle(17, 102);
     e3e:	40 e0       	ldi	r20, 0x00	; 0
     e40:	50 e0       	ldi	r21, 0x00	; 0
     e42:	6c ec       	ldi	r22, 0xCC	; 204
     e44:	72 e4       	ldi	r23, 0x42	; 66
     e46:	81 e1       	ldi	r24, 0x11	; 17
     e48:	02 da       	rcall	.-3068   	; 0x24e <reg_servo_angle>
     e4a:	2f ef       	ldi	r18, 0xFF	; 255
     e4c:	82 e5       	ldi	r24, 0x52	; 82
     e4e:	97 e0       	ldi	r25, 0x07	; 7
     e50:	21 50       	subi	r18, 0x01	; 1
     e52:	80 40       	sbci	r24, 0x00	; 0
     e54:	90 40       	sbci	r25, 0x00	; 0
     e56:	e1 f7       	brne	.-8      	; 0xe50 <three_rot+0xde>
     e58:	00 c0       	rjmp	.+0      	; 0xe5a <three_rot+0xe8>
     e5a:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     e5c:	1c ca       	rjmp	.-3016   	; 0x296 <action>
     e5e:	08 95       	ret

00000e60 <four_rot>:

void four_rot(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 150);
     e60:	40 e0       	ldi	r20, 0x00	; 0
     e62:	50 e0       	ldi	r21, 0x00	; 0
     e64:	66 e1       	ldi	r22, 0x16	; 22
     e66:	73 e4       	ldi	r23, 0x43	; 67
     e68:	86 e0       	ldi	r24, 0x06	; 6
     e6a:	f1 d9       	rcall	.-3102   	; 0x24e <reg_servo_angle>
	reg_servo_angle(7, 70);
     e6c:	40 e0       	ldi	r20, 0x00	; 0
     e6e:	50 e0       	ldi	r21, 0x00	; 0
     e70:	6c e8       	ldi	r22, 0x8C	; 140
     e72:	72 e4       	ldi	r23, 0x42	; 66
     e74:	87 e0       	ldi	r24, 0x07	; 7
     e76:	eb d9       	rcall	.-3114   	; 0x24e <reg_servo_angle>
	reg_servo_angle(8, 220);
     e78:	40 e0       	ldi	r20, 0x00	; 0
     e7a:	50 e0       	ldi	r21, 0x00	; 0
     e7c:	6c e5       	ldi	r22, 0x5C	; 92
     e7e:	73 e4       	ldi	r23, 0x43	; 67
     e80:	88 e0       	ldi	r24, 0x08	; 8
     e82:	e5 d9       	rcall	.-3126   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(9, 178);
     e84:	40 e0       	ldi	r20, 0x00	; 0
     e86:	50 e0       	ldi	r21, 0x00	; 0
     e88:	62 e3       	ldi	r22, 0x32	; 50
     e8a:	73 e4       	ldi	r23, 0x43	; 67
     e8c:	89 e0       	ldi	r24, 0x09	; 9
     e8e:	df d9       	rcall	.-3138   	; 0x24e <reg_servo_angle>
	reg_servo_angle(10, 199);
     e90:	40 e0       	ldi	r20, 0x00	; 0
     e92:	50 e0       	ldi	r21, 0x00	; 0
     e94:	67 e4       	ldi	r22, 0x47	; 71
     e96:	73 e4       	ldi	r23, 0x43	; 67
     e98:	8a e0       	ldi	r24, 0x0A	; 10
     e9a:	d9 d9       	rcall	.-3150   	; 0x24e <reg_servo_angle>
	reg_servo_angle(11, 102);
     e9c:	40 e0       	ldi	r20, 0x00	; 0
     e9e:	50 e0       	ldi	r21, 0x00	; 0
     ea0:	6c ec       	ldi	r22, 0xCC	; 204
     ea2:	72 e4       	ldi	r23, 0x42	; 66
     ea4:	8b e0       	ldi	r24, 0x0B	; 11
     ea6:	d3 d9       	rcall	.-3162   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(3, 176);
     ea8:	40 e0       	ldi	r20, 0x00	; 0
     eaa:	50 e0       	ldi	r21, 0x00	; 0
     eac:	60 e3       	ldi	r22, 0x30	; 48
     eae:	73 e4       	ldi	r23, 0x43	; 67
     eb0:	83 e0       	ldi	r24, 0x03	; 3
     eb2:	cd d9       	rcall	.-3174   	; 0x24e <reg_servo_angle>
	reg_servo_angle(4, 89);
     eb4:	40 e0       	ldi	r20, 0x00	; 0
     eb6:	50 e0       	ldi	r21, 0x00	; 0
     eb8:	62 eb       	ldi	r22, 0xB2	; 178
     eba:	72 e4       	ldi	r23, 0x42	; 66
     ebc:	84 e0       	ldi	r24, 0x04	; 4
     ebe:	c7 d9       	rcall	.-3186   	; 0x24e <reg_servo_angle>
	reg_servo_angle(5, 217);
     ec0:	40 e0       	ldi	r20, 0x00	; 0
     ec2:	50 e0       	ldi	r21, 0x00	; 0
     ec4:	69 e5       	ldi	r22, 0x59	; 89
     ec6:	73 e4       	ldi	r23, 0x43	; 67
     ec8:	85 e0       	ldi	r24, 0x05	; 5
     eca:	c1 d9       	rcall	.-3198   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(12, 150);
     ecc:	40 e0       	ldi	r20, 0x00	; 0
     ece:	50 e0       	ldi	r21, 0x00	; 0
     ed0:	66 e1       	ldi	r22, 0x16	; 22
     ed2:	73 e4       	ldi	r23, 0x43	; 67
     ed4:	8c e0       	ldi	r24, 0x0C	; 12
     ed6:	bb d9       	rcall	.-3210   	; 0x24e <reg_servo_angle>
	reg_servo_angle(13, 230);
     ed8:	40 e0       	ldi	r20, 0x00	; 0
     eda:	50 e0       	ldi	r21, 0x00	; 0
     edc:	66 e6       	ldi	r22, 0x66	; 102
     ede:	73 e4       	ldi	r23, 0x43	; 67
     ee0:	8d e0       	ldi	r24, 0x0D	; 13
     ee2:	b5 d9       	rcall	.-3222   	; 0x24e <reg_servo_angle>
	reg_servo_angle(14, 80);
     ee4:	40 e0       	ldi	r20, 0x00	; 0
     ee6:	50 e0       	ldi	r21, 0x00	; 0
     ee8:	60 ea       	ldi	r22, 0xA0	; 160
     eea:	72 e4       	ldi	r23, 0x42	; 66
     eec:	8e e0       	ldi	r24, 0x0E	; 14
     eee:	af d9       	rcall	.-3234   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(0, 150);
     ef0:	40 e0       	ldi	r20, 0x00	; 0
     ef2:	50 e0       	ldi	r21, 0x00	; 0
     ef4:	66 e1       	ldi	r22, 0x16	; 22
     ef6:	73 e4       	ldi	r23, 0x43	; 67
     ef8:	80 e0       	ldi	r24, 0x00	; 0
     efa:	a9 d9       	rcall	.-3246   	; 0x24e <reg_servo_angle>
	reg_servo_angle(1, 70);
     efc:	40 e0       	ldi	r20, 0x00	; 0
     efe:	50 e0       	ldi	r21, 0x00	; 0
     f00:	6c e8       	ldi	r22, 0x8C	; 140
     f02:	72 e4       	ldi	r23, 0x42	; 66
     f04:	81 e0       	ldi	r24, 0x01	; 1
     f06:	a3 d9       	rcall	.-3258   	; 0x24e <reg_servo_angle>
	reg_servo_angle(2, 220);
     f08:	40 e0       	ldi	r20, 0x00	; 0
     f0a:	50 e0       	ldi	r21, 0x00	; 0
     f0c:	6c e5       	ldi	r22, 0x5C	; 92
     f0e:	73 e4       	ldi	r23, 0x43	; 67
     f10:	82 e0       	ldi	r24, 0x02	; 2
     f12:	9d d9       	rcall	.-3270   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(15, 178);
     f14:	40 e0       	ldi	r20, 0x00	; 0
     f16:	50 e0       	ldi	r21, 0x00	; 0
     f18:	62 e3       	ldi	r22, 0x32	; 50
     f1a:	73 e4       	ldi	r23, 0x43	; 67
     f1c:	8f e0       	ldi	r24, 0x0F	; 15
     f1e:	97 d9       	rcall	.-3282   	; 0x24e <reg_servo_angle>
	reg_servo_angle(16, 199);
     f20:	40 e0       	ldi	r20, 0x00	; 0
     f22:	50 e0       	ldi	r21, 0x00	; 0
     f24:	67 e4       	ldi	r22, 0x47	; 71
     f26:	73 e4       	ldi	r23, 0x43	; 67
     f28:	80 e1       	ldi	r24, 0x10	; 16
     f2a:	91 d9       	rcall	.-3294   	; 0x24e <reg_servo_angle>
	reg_servo_angle(17, 102);
     f2c:	40 e0       	ldi	r20, 0x00	; 0
     f2e:	50 e0       	ldi	r21, 0x00	; 0
     f30:	6c ec       	ldi	r22, 0xCC	; 204
     f32:	72 e4       	ldi	r23, 0x42	; 66
     f34:	81 e1       	ldi	r24, 0x11	; 17
     f36:	8b d9       	rcall	.-3306   	; 0x24e <reg_servo_angle>
     f38:	2f ef       	ldi	r18, 0xFF	; 255
     f3a:	82 e5       	ldi	r24, 0x52	; 82
     f3c:	97 e0       	ldi	r25, 0x07	; 7
     f3e:	21 50       	subi	r18, 0x01	; 1
     f40:	80 40       	sbci	r24, 0x00	; 0
     f42:	90 40       	sbci	r25, 0x00	; 0
     f44:	e1 f7       	brne	.-8      	; 0xf3e <four_rot+0xde>
     f46:	00 c0       	rjmp	.+0      	; 0xf48 <four_rot+0xe8>
     f48:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
     f4a:	a5 c9       	rjmp	.-3254   	; 0x296 <action>
     f4c:	08 95       	ret

00000f4e <five_rot>:

void five_rot(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 150);
     f4e:	40 e0       	ldi	r20, 0x00	; 0
     f50:	50 e0       	ldi	r21, 0x00	; 0
     f52:	66 e1       	ldi	r22, 0x16	; 22
     f54:	73 e4       	ldi	r23, 0x43	; 67
     f56:	86 e0       	ldi	r24, 0x06	; 6
     f58:	7a d9       	rcall	.-3340   	; 0x24e <reg_servo_angle>
	reg_servo_angle(7, 70);
     f5a:	40 e0       	ldi	r20, 0x00	; 0
     f5c:	50 e0       	ldi	r21, 0x00	; 0
     f5e:	6c e8       	ldi	r22, 0x8C	; 140
     f60:	72 e4       	ldi	r23, 0x42	; 66
     f62:	87 e0       	ldi	r24, 0x07	; 7
     f64:	74 d9       	rcall	.-3352   	; 0x24e <reg_servo_angle>
	reg_servo_angle(8, 220);
     f66:	40 e0       	ldi	r20, 0x00	; 0
     f68:	50 e0       	ldi	r21, 0x00	; 0
     f6a:	6c e5       	ldi	r22, 0x5C	; 92
     f6c:	73 e4       	ldi	r23, 0x43	; 67
     f6e:	88 e0       	ldi	r24, 0x08	; 8
     f70:	6e d9       	rcall	.-3364   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(9, 165);
     f72:	40 e0       	ldi	r20, 0x00	; 0
     f74:	50 e0       	ldi	r21, 0x00	; 0
     f76:	65 e2       	ldi	r22, 0x25	; 37
     f78:	73 e4       	ldi	r23, 0x43	; 67
     f7a:	89 e0       	ldi	r24, 0x09	; 9
     f7c:	68 d9       	rcall	.-3376   	; 0x24e <reg_servo_angle>
	reg_servo_angle(10, 210);
     f7e:	40 e0       	ldi	r20, 0x00	; 0
     f80:	50 e0       	ldi	r21, 0x00	; 0
     f82:	62 e5       	ldi	r22, 0x52	; 82
     f84:	73 e4       	ldi	r23, 0x43	; 67
     f86:	8a e0       	ldi	r24, 0x0A	; 10
     f88:	62 d9       	rcall	.-3388   	; 0x24e <reg_servo_angle>
	reg_servo_angle(11, 85);
     f8a:	40 e0       	ldi	r20, 0x00	; 0
     f8c:	50 e0       	ldi	r21, 0x00	; 0
     f8e:	6a ea       	ldi	r22, 0xAA	; 170
     f90:	72 e4       	ldi	r23, 0x42	; 66
     f92:	8b e0       	ldi	r24, 0x0B	; 11
     f94:	5c d9       	rcall	.-3400   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(3, 161);
     f96:	40 e0       	ldi	r20, 0x00	; 0
     f98:	50 e0       	ldi	r21, 0x00	; 0
     f9a:	61 e2       	ldi	r22, 0x21	; 33
     f9c:	73 e4       	ldi	r23, 0x43	; 67
     f9e:	83 e0       	ldi	r24, 0x03	; 3
     fa0:	56 d9       	rcall	.-3412   	; 0x24e <reg_servo_angle>
	reg_servo_angle(4, 86);
     fa2:	40 e0       	ldi	r20, 0x00	; 0
     fa4:	50 e0       	ldi	r21, 0x00	; 0
     fa6:	6c ea       	ldi	r22, 0xAC	; 172
     fa8:	72 e4       	ldi	r23, 0x42	; 66
     faa:	84 e0       	ldi	r24, 0x04	; 4
     fac:	50 d9       	rcall	.-3424   	; 0x24e <reg_servo_angle>
	reg_servo_angle(5, 222);
     fae:	40 e0       	ldi	r20, 0x00	; 0
     fb0:	50 e0       	ldi	r21, 0x00	; 0
     fb2:	6e e5       	ldi	r22, 0x5E	; 94
     fb4:	73 e4       	ldi	r23, 0x43	; 67
     fb6:	85 e0       	ldi	r24, 0x05	; 5
     fb8:	4a d9       	rcall	.-3436   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(12, 150);
     fba:	40 e0       	ldi	r20, 0x00	; 0
     fbc:	50 e0       	ldi	r21, 0x00	; 0
     fbe:	66 e1       	ldi	r22, 0x16	; 22
     fc0:	73 e4       	ldi	r23, 0x43	; 67
     fc2:	8c e0       	ldi	r24, 0x0C	; 12
     fc4:	44 d9       	rcall	.-3448   	; 0x24e <reg_servo_angle>
	reg_servo_angle(13, 230);
     fc6:	40 e0       	ldi	r20, 0x00	; 0
     fc8:	50 e0       	ldi	r21, 0x00	; 0
     fca:	66 e6       	ldi	r22, 0x66	; 102
     fcc:	73 e4       	ldi	r23, 0x43	; 67
     fce:	8d e0       	ldi	r24, 0x0D	; 13
     fd0:	3e d9       	rcall	.-3460   	; 0x24e <reg_servo_angle>
	reg_servo_angle(14, 80);
     fd2:	40 e0       	ldi	r20, 0x00	; 0
     fd4:	50 e0       	ldi	r21, 0x00	; 0
     fd6:	60 ea       	ldi	r22, 0xA0	; 160
     fd8:	72 e4       	ldi	r23, 0x42	; 66
     fda:	8e e0       	ldi	r24, 0x0E	; 14
     fdc:	38 d9       	rcall	.-3472   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(0, 150);
     fde:	40 e0       	ldi	r20, 0x00	; 0
     fe0:	50 e0       	ldi	r21, 0x00	; 0
     fe2:	66 e1       	ldi	r22, 0x16	; 22
     fe4:	73 e4       	ldi	r23, 0x43	; 67
     fe6:	80 e0       	ldi	r24, 0x00	; 0
     fe8:	32 d9       	rcall	.-3484   	; 0x24e <reg_servo_angle>
	reg_servo_angle(1, 70);
     fea:	40 e0       	ldi	r20, 0x00	; 0
     fec:	50 e0       	ldi	r21, 0x00	; 0
     fee:	6c e8       	ldi	r22, 0x8C	; 140
     ff0:	72 e4       	ldi	r23, 0x42	; 66
     ff2:	81 e0       	ldi	r24, 0x01	; 1
     ff4:	2c d9       	rcall	.-3496   	; 0x24e <reg_servo_angle>
	reg_servo_angle(2, 220);
     ff6:	40 e0       	ldi	r20, 0x00	; 0
     ff8:	50 e0       	ldi	r21, 0x00	; 0
     ffa:	6c e5       	ldi	r22, 0x5C	; 92
     ffc:	73 e4       	ldi	r23, 0x43	; 67
     ffe:	82 e0       	ldi	r24, 0x02	; 2
    1000:	26 d9       	rcall	.-3508   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(15, 165);
    1002:	40 e0       	ldi	r20, 0x00	; 0
    1004:	50 e0       	ldi	r21, 0x00	; 0
    1006:	65 e2       	ldi	r22, 0x25	; 37
    1008:	73 e4       	ldi	r23, 0x43	; 67
    100a:	8f e0       	ldi	r24, 0x0F	; 15
    100c:	20 d9       	rcall	.-3520   	; 0x24e <reg_servo_angle>
	reg_servo_angle(16, 210);
    100e:	40 e0       	ldi	r20, 0x00	; 0
    1010:	50 e0       	ldi	r21, 0x00	; 0
    1012:	62 e5       	ldi	r22, 0x52	; 82
    1014:	73 e4       	ldi	r23, 0x43	; 67
    1016:	80 e1       	ldi	r24, 0x10	; 16
    1018:	1a d9       	rcall	.-3532   	; 0x24e <reg_servo_angle>
	reg_servo_angle(17, 85);
    101a:	40 e0       	ldi	r20, 0x00	; 0
    101c:	50 e0       	ldi	r21, 0x00	; 0
    101e:	6a ea       	ldi	r22, 0xAA	; 170
    1020:	72 e4       	ldi	r23, 0x42	; 66
    1022:	81 e1       	ldi	r24, 0x11	; 17
    1024:	14 d9       	rcall	.-3544   	; 0x24e <reg_servo_angle>
    1026:	2f ef       	ldi	r18, 0xFF	; 255
    1028:	82 e5       	ldi	r24, 0x52	; 82
    102a:	97 e0       	ldi	r25, 0x07	; 7
    102c:	21 50       	subi	r18, 0x01	; 1
    102e:	80 40       	sbci	r24, 0x00	; 0
    1030:	90 40       	sbci	r25, 0x00	; 0
    1032:	e1 f7       	brne	.-8      	; 0x102c <five_rot+0xde>
    1034:	00 c0       	rjmp	.+0      	; 0x1036 <five_rot+0xe8>
    1036:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
    1038:	2e c9       	rjmp	.-3492   	; 0x296 <action>
    103a:	08 95       	ret

0000103c <six_rot>:

void six_rot(void)
{
	int scale = 3;

	reg_servo_angle(6, 150);
    103c:	40 e0       	ldi	r20, 0x00	; 0
    103e:	50 e0       	ldi	r21, 0x00	; 0
    1040:	66 e1       	ldi	r22, 0x16	; 22
    1042:	73 e4       	ldi	r23, 0x43	; 67
    1044:	86 e0       	ldi	r24, 0x06	; 6
    1046:	03 d9       	rcall	.-3578   	; 0x24e <reg_servo_angle>
	reg_servo_angle(7, 70);
    1048:	40 e0       	ldi	r20, 0x00	; 0
    104a:	50 e0       	ldi	r21, 0x00	; 0
    104c:	6c e8       	ldi	r22, 0x8C	; 140
    104e:	72 e4       	ldi	r23, 0x42	; 66
    1050:	87 e0       	ldi	r24, 0x07	; 7
    1052:	fd d8       	rcall	.-3590   	; 0x24e <reg_servo_angle>
	reg_servo_angle(8, 220);
    1054:	40 e0       	ldi	r20, 0x00	; 0
    1056:	50 e0       	ldi	r21, 0x00	; 0
    1058:	6c e5       	ldi	r22, 0x5C	; 92
    105a:	73 e4       	ldi	r23, 0x43	; 67
    105c:	88 e0       	ldi	r24, 0x08	; 8
    105e:	f7 d8       	rcall	.-3602   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(9, 150);
    1060:	40 e0       	ldi	r20, 0x00	; 0
    1062:	50 e0       	ldi	r21, 0x00	; 0
    1064:	66 e1       	ldi	r22, 0x16	; 22
    1066:	73 e4       	ldi	r23, 0x43	; 67
    1068:	89 e0       	ldi	r24, 0x09	; 9
    106a:	f1 d8       	rcall	.-3614   	; 0x24e <reg_servo_angle>
	reg_servo_angle(10, 211);
    106c:	40 e0       	ldi	r20, 0x00	; 0
    106e:	50 e0       	ldi	r21, 0x00	; 0
    1070:	63 e5       	ldi	r22, 0x53	; 83
    1072:	73 e4       	ldi	r23, 0x43	; 67
    1074:	8a e0       	ldi	r24, 0x0A	; 10
    1076:	eb d8       	rcall	.-3626   	; 0x24e <reg_servo_angle>
	reg_servo_angle(11, 82);
    1078:	40 e0       	ldi	r20, 0x00	; 0
    107a:	50 e0       	ldi	r21, 0x00	; 0
    107c:	64 ea       	ldi	r22, 0xA4	; 164
    107e:	72 e4       	ldi	r23, 0x42	; 66
    1080:	8b e0       	ldi	r24, 0x0B	; 11
    1082:	e5 d8       	rcall	.-3638   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(3, 150);
    1084:	40 e0       	ldi	r20, 0x00	; 0
    1086:	50 e0       	ldi	r21, 0x00	; 0
    1088:	66 e1       	ldi	r22, 0x16	; 22
    108a:	73 e4       	ldi	r23, 0x43	; 67
    108c:	83 e0       	ldi	r24, 0x03	; 3
    108e:	df d8       	rcall	.-3650   	; 0x24e <reg_servo_angle>
	reg_servo_angle(4, 89);
    1090:	40 e0       	ldi	r20, 0x00	; 0
    1092:	50 e0       	ldi	r21, 0x00	; 0
    1094:	62 eb       	ldi	r22, 0xB2	; 178
    1096:	72 e4       	ldi	r23, 0x42	; 66
    1098:	84 e0       	ldi	r24, 0x04	; 4
    109a:	d9 d8       	rcall	.-3662   	; 0x24e <reg_servo_angle>
	reg_servo_angle(5, 218);
    109c:	40 e0       	ldi	r20, 0x00	; 0
    109e:	50 e0       	ldi	r21, 0x00	; 0
    10a0:	6a e5       	ldi	r22, 0x5A	; 90
    10a2:	73 e4       	ldi	r23, 0x43	; 67
    10a4:	85 e0       	ldi	r24, 0x05	; 5
    10a6:	d3 d8       	rcall	.-3674   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(12, 150);
    10a8:	40 e0       	ldi	r20, 0x00	; 0
    10aa:	50 e0       	ldi	r21, 0x00	; 0
    10ac:	66 e1       	ldi	r22, 0x16	; 22
    10ae:	73 e4       	ldi	r23, 0x43	; 67
    10b0:	8c e0       	ldi	r24, 0x0C	; 12
    10b2:	cd d8       	rcall	.-3686   	; 0x24e <reg_servo_angle>
	reg_servo_angle(13, 230);
    10b4:	40 e0       	ldi	r20, 0x00	; 0
    10b6:	50 e0       	ldi	r21, 0x00	; 0
    10b8:	66 e6       	ldi	r22, 0x66	; 102
    10ba:	73 e4       	ldi	r23, 0x43	; 67
    10bc:	8d e0       	ldi	r24, 0x0D	; 13
    10be:	c7 d8       	rcall	.-3698   	; 0x24e <reg_servo_angle>
	reg_servo_angle(14, 80);
    10c0:	40 e0       	ldi	r20, 0x00	; 0
    10c2:	50 e0       	ldi	r21, 0x00	; 0
    10c4:	60 ea       	ldi	r22, 0xA0	; 160
    10c6:	72 e4       	ldi	r23, 0x42	; 66
    10c8:	8e e0       	ldi	r24, 0x0E	; 14
    10ca:	c1 d8       	rcall	.-3710   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(0, 150);
    10cc:	40 e0       	ldi	r20, 0x00	; 0
    10ce:	50 e0       	ldi	r21, 0x00	; 0
    10d0:	66 e1       	ldi	r22, 0x16	; 22
    10d2:	73 e4       	ldi	r23, 0x43	; 67
    10d4:	80 e0       	ldi	r24, 0x00	; 0
    10d6:	bb d8       	rcall	.-3722   	; 0x24e <reg_servo_angle>
	reg_servo_angle(1, 70);
    10d8:	40 e0       	ldi	r20, 0x00	; 0
    10da:	50 e0       	ldi	r21, 0x00	; 0
    10dc:	6c e8       	ldi	r22, 0x8C	; 140
    10de:	72 e4       	ldi	r23, 0x42	; 66
    10e0:	81 e0       	ldi	r24, 0x01	; 1
    10e2:	b5 d8       	rcall	.-3734   	; 0x24e <reg_servo_angle>
	reg_servo_angle(2, 220);
    10e4:	40 e0       	ldi	r20, 0x00	; 0
    10e6:	50 e0       	ldi	r21, 0x00	; 0
    10e8:	6c e5       	ldi	r22, 0x5C	; 92
    10ea:	73 e4       	ldi	r23, 0x43	; 67
    10ec:	82 e0       	ldi	r24, 0x02	; 2
    10ee:	af d8       	rcall	.-3746   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(15, 150);
    10f0:	40 e0       	ldi	r20, 0x00	; 0
    10f2:	50 e0       	ldi	r21, 0x00	; 0
    10f4:	66 e1       	ldi	r22, 0x16	; 22
    10f6:	73 e4       	ldi	r23, 0x43	; 67
    10f8:	8f e0       	ldi	r24, 0x0F	; 15
    10fa:	a9 d8       	rcall	.-3758   	; 0x24e <reg_servo_angle>
	reg_servo_angle(16, 211);
    10fc:	40 e0       	ldi	r20, 0x00	; 0
    10fe:	50 e0       	ldi	r21, 0x00	; 0
    1100:	63 e5       	ldi	r22, 0x53	; 83
    1102:	73 e4       	ldi	r23, 0x43	; 67
    1104:	80 e1       	ldi	r24, 0x10	; 16
    1106:	a3 d8       	rcall	.-3770   	; 0x24e <reg_servo_angle>
	reg_servo_angle(17, 82);
    1108:	40 e0       	ldi	r20, 0x00	; 0
    110a:	50 e0       	ldi	r21, 0x00	; 0
    110c:	64 ea       	ldi	r22, 0xA4	; 164
    110e:	72 e4       	ldi	r23, 0x42	; 66
    1110:	81 e1       	ldi	r24, 0x11	; 17
    1112:	9d d8       	rcall	.-3782   	; 0x24e <reg_servo_angle>
    1114:	2f ef       	ldi	r18, 0xFF	; 255
    1116:	82 e5       	ldi	r24, 0x52	; 82
    1118:	97 e0       	ldi	r25, 0x07	; 7
    111a:	21 50       	subi	r18, 0x01	; 1
    111c:	80 40       	sbci	r24, 0x00	; 0
    111e:	90 40       	sbci	r25, 0x00	; 0
    1120:	e1 f7       	brne	.-8      	; 0x111a <six_rot+0xde>
    1122:	00 c0       	rjmp	.+0      	; 0x1124 <six_rot+0xe8>
    1124:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
    1126:	b7 c8       	rjmp	.-3730   	; 0x296 <action>
    1128:	08 95       	ret

0000112a <seven_rot>:

void seven_rot(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 150);
    112a:	40 e0       	ldi	r20, 0x00	; 0
    112c:	50 e0       	ldi	r21, 0x00	; 0
    112e:	66 e1       	ldi	r22, 0x16	; 22
    1130:	73 e4       	ldi	r23, 0x43	; 67
    1132:	86 e0       	ldi	r24, 0x06	; 6
    1134:	8c d8       	rcall	.-3816   	; 0x24e <reg_servo_angle>
	reg_servo_angle(7, 90);
    1136:	40 e0       	ldi	r20, 0x00	; 0
    1138:	50 e0       	ldi	r21, 0x00	; 0
    113a:	64 eb       	ldi	r22, 0xB4	; 180
    113c:	72 e4       	ldi	r23, 0x42	; 66
    113e:	87 e0       	ldi	r24, 0x07	; 7
    1140:	86 d8       	rcall	.-3828   	; 0x24e <reg_servo_angle>
	reg_servo_angle(8, 220);
    1142:	40 e0       	ldi	r20, 0x00	; 0
    1144:	50 e0       	ldi	r21, 0x00	; 0
    1146:	6c e5       	ldi	r22, 0x5C	; 92
    1148:	73 e4       	ldi	r23, 0x43	; 67
    114a:	88 e0       	ldi	r24, 0x08	; 8
    114c:	80 d8       	rcall	.-3840   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(9, 150);
    114e:	40 e0       	ldi	r20, 0x00	; 0
    1150:	50 e0       	ldi	r21, 0x00	; 0
    1152:	66 e1       	ldi	r22, 0x16	; 22
    1154:	73 e4       	ldi	r23, 0x43	; 67
    1156:	89 e0       	ldi	r24, 0x09	; 9
    1158:	7a d8       	rcall	.-3852   	; 0x24e <reg_servo_angle>
	reg_servo_angle(10, 211);
    115a:	40 e0       	ldi	r20, 0x00	; 0
    115c:	50 e0       	ldi	r21, 0x00	; 0
    115e:	63 e5       	ldi	r22, 0x53	; 83
    1160:	73 e4       	ldi	r23, 0x43	; 67
    1162:	8a e0       	ldi	r24, 0x0A	; 10
    1164:	74 d8       	rcall	.-3864   	; 0x24e <reg_servo_angle>
	reg_servo_angle(11, 82);
    1166:	40 e0       	ldi	r20, 0x00	; 0
    1168:	50 e0       	ldi	r21, 0x00	; 0
    116a:	64 ea       	ldi	r22, 0xA4	; 164
    116c:	72 e4       	ldi	r23, 0x42	; 66
    116e:	8b e0       	ldi	r24, 0x0B	; 11
    1170:	6e d8       	rcall	.-3876   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(3, 150);
    1172:	40 e0       	ldi	r20, 0x00	; 0
    1174:	50 e0       	ldi	r21, 0x00	; 0
    1176:	66 e1       	ldi	r22, 0x16	; 22
    1178:	73 e4       	ldi	r23, 0x43	; 67
    117a:	83 e0       	ldi	r24, 0x03	; 3
    117c:	68 d8       	rcall	.-3888   	; 0x24e <reg_servo_angle>
	reg_servo_angle(4, 89);
    117e:	40 e0       	ldi	r20, 0x00	; 0
    1180:	50 e0       	ldi	r21, 0x00	; 0
    1182:	62 eb       	ldi	r22, 0xB2	; 178
    1184:	72 e4       	ldi	r23, 0x42	; 66
    1186:	84 e0       	ldi	r24, 0x04	; 4
    1188:	62 d8       	rcall	.-3900   	; 0x24e <reg_servo_angle>
	reg_servo_angle(5, 218);
    118a:	40 e0       	ldi	r20, 0x00	; 0
    118c:	50 e0       	ldi	r21, 0x00	; 0
    118e:	6a e5       	ldi	r22, 0x5A	; 90
    1190:	73 e4       	ldi	r23, 0x43	; 67
    1192:	85 e0       	ldi	r24, 0x05	; 5
    1194:	5c d8       	rcall	.-3912   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(12, 150);
    1196:	40 e0       	ldi	r20, 0x00	; 0
    1198:	50 e0       	ldi	r21, 0x00	; 0
    119a:	66 e1       	ldi	r22, 0x16	; 22
    119c:	73 e4       	ldi	r23, 0x43	; 67
    119e:	8c e0       	ldi	r24, 0x0C	; 12
    11a0:	56 d8       	rcall	.-3924   	; 0x24e <reg_servo_angle>
	reg_servo_angle(13, 210);
    11a2:	40 e0       	ldi	r20, 0x00	; 0
    11a4:	50 e0       	ldi	r21, 0x00	; 0
    11a6:	62 e5       	ldi	r22, 0x52	; 82
    11a8:	73 e4       	ldi	r23, 0x43	; 67
    11aa:	8d e0       	ldi	r24, 0x0D	; 13
    11ac:	50 d8       	rcall	.-3936   	; 0x24e <reg_servo_angle>
	reg_servo_angle(14, 80);
    11ae:	40 e0       	ldi	r20, 0x00	; 0
    11b0:	50 e0       	ldi	r21, 0x00	; 0
    11b2:	60 ea       	ldi	r22, 0xA0	; 160
    11b4:	72 e4       	ldi	r23, 0x42	; 66
    11b6:	8e e0       	ldi	r24, 0x0E	; 14
    11b8:	4a d8       	rcall	.-3948   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(0, 150);
    11ba:	40 e0       	ldi	r20, 0x00	; 0
    11bc:	50 e0       	ldi	r21, 0x00	; 0
    11be:	66 e1       	ldi	r22, 0x16	; 22
    11c0:	73 e4       	ldi	r23, 0x43	; 67
    11c2:	80 e0       	ldi	r24, 0x00	; 0
    11c4:	44 d8       	rcall	.-3960   	; 0x24e <reg_servo_angle>
	reg_servo_angle(1, 90);
    11c6:	40 e0       	ldi	r20, 0x00	; 0
    11c8:	50 e0       	ldi	r21, 0x00	; 0
    11ca:	64 eb       	ldi	r22, 0xB4	; 180
    11cc:	72 e4       	ldi	r23, 0x42	; 66
    11ce:	81 e0       	ldi	r24, 0x01	; 1
    11d0:	3e d8       	rcall	.-3972   	; 0x24e <reg_servo_angle>
	reg_servo_angle(2, 220);
    11d2:	40 e0       	ldi	r20, 0x00	; 0
    11d4:	50 e0       	ldi	r21, 0x00	; 0
    11d6:	6c e5       	ldi	r22, 0x5C	; 92
    11d8:	73 e4       	ldi	r23, 0x43	; 67
    11da:	82 e0       	ldi	r24, 0x02	; 2
    11dc:	38 d8       	rcall	.-3984   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(15, 150);
    11de:	40 e0       	ldi	r20, 0x00	; 0
    11e0:	50 e0       	ldi	r21, 0x00	; 0
    11e2:	66 e1       	ldi	r22, 0x16	; 22
    11e4:	73 e4       	ldi	r23, 0x43	; 67
    11e6:	8f e0       	ldi	r24, 0x0F	; 15
    11e8:	32 d8       	rcall	.-3996   	; 0x24e <reg_servo_angle>
	reg_servo_angle(16, 211);
    11ea:	40 e0       	ldi	r20, 0x00	; 0
    11ec:	50 e0       	ldi	r21, 0x00	; 0
    11ee:	63 e5       	ldi	r22, 0x53	; 83
    11f0:	73 e4       	ldi	r23, 0x43	; 67
    11f2:	80 e1       	ldi	r24, 0x10	; 16
    11f4:	2c d8       	rcall	.-4008   	; 0x24e <reg_servo_angle>
	reg_servo_angle(17, 82);
    11f6:	40 e0       	ldi	r20, 0x00	; 0
    11f8:	50 e0       	ldi	r21, 0x00	; 0
    11fa:	64 ea       	ldi	r22, 0xA4	; 164
    11fc:	72 e4       	ldi	r23, 0x42	; 66
    11fe:	81 e1       	ldi	r24, 0x11	; 17
    1200:	26 d8       	rcall	.-4020   	; 0x24e <reg_servo_angle>
    1202:	2f ef       	ldi	r18, 0xFF	; 255
    1204:	82 e5       	ldi	r24, 0x52	; 82
    1206:	97 e0       	ldi	r25, 0x07	; 7
    1208:	21 50       	subi	r18, 0x01	; 1
    120a:	80 40       	sbci	r24, 0x00	; 0
    120c:	90 40       	sbci	r25, 0x00	; 0
    120e:	e1 f7       	brne	.-8      	; 0x1208 <seven_rot+0xde>
    1210:	00 c0       	rjmp	.+0      	; 0x1212 <seven_rot+0xe8>
    1212:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
    1214:	40 c8       	rjmp	.-3968   	; 0x296 <action>
    1216:	08 95       	ret

00001218 <eight_rot>:

void eight_rot(void)
{
	int scale = 3;
	
	reg_servo_angle(6, 150);
    1218:	40 e0       	ldi	r20, 0x00	; 0
    121a:	50 e0       	ldi	r21, 0x00	; 0
    121c:	66 e1       	ldi	r22, 0x16	; 22
    121e:	73 e4       	ldi	r23, 0x43	; 67
    1220:	86 e0       	ldi	r24, 0x06	; 6
    1222:	15 d8       	rcall	.-4054   	; 0x24e <reg_servo_angle>
	reg_servo_angle(7, 90);
    1224:	40 e0       	ldi	r20, 0x00	; 0
    1226:	50 e0       	ldi	r21, 0x00	; 0
    1228:	64 eb       	ldi	r22, 0xB4	; 180
    122a:	72 e4       	ldi	r23, 0x42	; 66
    122c:	87 e0       	ldi	r24, 0x07	; 7
    122e:	0f d8       	rcall	.-4066   	; 0x24e <reg_servo_angle>
	reg_servo_angle(8, 220);
    1230:	40 e0       	ldi	r20, 0x00	; 0
    1232:	50 e0       	ldi	r21, 0x00	; 0
    1234:	6c e5       	ldi	r22, 0x5C	; 92
    1236:	73 e4       	ldi	r23, 0x43	; 67
    1238:	88 e0       	ldi	r24, 0x08	; 8
    123a:	09 d8       	rcall	.-4078   	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(9, 150);
    123c:	40 e0       	ldi	r20, 0x00	; 0
    123e:	50 e0       	ldi	r21, 0x00	; 0
    1240:	66 e1       	ldi	r22, 0x16	; 22
    1242:	73 e4       	ldi	r23, 0x43	; 67
    1244:	89 e0       	ldi	r24, 0x09	; 9
    1246:	03 d8       	rcall	.-4090   	; 0x24e <reg_servo_angle>
	reg_servo_angle(10, 226);
    1248:	40 e0       	ldi	r20, 0x00	; 0
    124a:	50 e0       	ldi	r21, 0x00	; 0
    124c:	62 e6       	ldi	r22, 0x62	; 98
    124e:	73 e4       	ldi	r23, 0x43	; 67
    1250:	8a e0       	ldi	r24, 0x0A	; 10
    1252:	0e 94 27 01 	call	0x24e	; 0x24e <reg_servo_angle>
	reg_servo_angle(11, 75);
    1256:	40 e0       	ldi	r20, 0x00	; 0
    1258:	50 e0       	ldi	r21, 0x00	; 0
    125a:	66 e9       	ldi	r22, 0x96	; 150
    125c:	72 e4       	ldi	r23, 0x42	; 66
    125e:	8b e0       	ldi	r24, 0x0B	; 11
    1260:	0e 94 27 01 	call	0x24e	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(3, 150);
    1264:	40 e0       	ldi	r20, 0x00	; 0
    1266:	50 e0       	ldi	r21, 0x00	; 0
    1268:	66 e1       	ldi	r22, 0x16	; 22
    126a:	73 e4       	ldi	r23, 0x43	; 67
    126c:	83 e0       	ldi	r24, 0x03	; 3
    126e:	0e 94 27 01 	call	0x24e	; 0x24e <reg_servo_angle>
	reg_servo_angle(4, 74);
    1272:	40 e0       	ldi	r20, 0x00	; 0
    1274:	50 e0       	ldi	r21, 0x00	; 0
    1276:	64 e9       	ldi	r22, 0x94	; 148
    1278:	72 e4       	ldi	r23, 0x42	; 66
    127a:	84 e0       	ldi	r24, 0x04	; 4
    127c:	0e 94 27 01 	call	0x24e	; 0x24e <reg_servo_angle>
	reg_servo_angle(5, 225);
    1280:	40 e0       	ldi	r20, 0x00	; 0
    1282:	50 e0       	ldi	r21, 0x00	; 0
    1284:	61 e6       	ldi	r22, 0x61	; 97
    1286:	73 e4       	ldi	r23, 0x43	; 67
    1288:	85 e0       	ldi	r24, 0x05	; 5
    128a:	0e 94 27 01 	call	0x24e	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(12, 150);
    128e:	40 e0       	ldi	r20, 0x00	; 0
    1290:	50 e0       	ldi	r21, 0x00	; 0
    1292:	66 e1       	ldi	r22, 0x16	; 22
    1294:	73 e4       	ldi	r23, 0x43	; 67
    1296:	8c e0       	ldi	r24, 0x0C	; 12
    1298:	0e 94 27 01 	call	0x24e	; 0x24e <reg_servo_angle>
	reg_servo_angle(13, 210);
    129c:	40 e0       	ldi	r20, 0x00	; 0
    129e:	50 e0       	ldi	r21, 0x00	; 0
    12a0:	62 e5       	ldi	r22, 0x52	; 82
    12a2:	73 e4       	ldi	r23, 0x43	; 67
    12a4:	8d e0       	ldi	r24, 0x0D	; 13
    12a6:	0e 94 27 01 	call	0x24e	; 0x24e <reg_servo_angle>
	reg_servo_angle(14, 80);
    12aa:	40 e0       	ldi	r20, 0x00	; 0
    12ac:	50 e0       	ldi	r21, 0x00	; 0
    12ae:	60 ea       	ldi	r22, 0xA0	; 160
    12b0:	72 e4       	ldi	r23, 0x42	; 66
    12b2:	8e e0       	ldi	r24, 0x0E	; 14
    12b4:	0e 94 27 01 	call	0x24e	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(0, 150);
    12b8:	40 e0       	ldi	r20, 0x00	; 0
    12ba:	50 e0       	ldi	r21, 0x00	; 0
    12bc:	66 e1       	ldi	r22, 0x16	; 22
    12be:	73 e4       	ldi	r23, 0x43	; 67
    12c0:	80 e0       	ldi	r24, 0x00	; 0
    12c2:	0e 94 27 01 	call	0x24e	; 0x24e <reg_servo_angle>
	reg_servo_angle(1, 90);
    12c6:	40 e0       	ldi	r20, 0x00	; 0
    12c8:	50 e0       	ldi	r21, 0x00	; 0
    12ca:	64 eb       	ldi	r22, 0xB4	; 180
    12cc:	72 e4       	ldi	r23, 0x42	; 66
    12ce:	81 e0       	ldi	r24, 0x01	; 1
    12d0:	0e 94 27 01 	call	0x24e	; 0x24e <reg_servo_angle>
	reg_servo_angle(2, 220);
    12d4:	40 e0       	ldi	r20, 0x00	; 0
    12d6:	50 e0       	ldi	r21, 0x00	; 0
    12d8:	6c e5       	ldi	r22, 0x5C	; 92
    12da:	73 e4       	ldi	r23, 0x43	; 67
    12dc:	82 e0       	ldi	r24, 0x02	; 2
    12de:	0e 94 27 01 	call	0x24e	; 0x24e <reg_servo_angle>
	
	reg_servo_angle(15, 150);
    12e2:	40 e0       	ldi	r20, 0x00	; 0
    12e4:	50 e0       	ldi	r21, 0x00	; 0
    12e6:	66 e1       	ldi	r22, 0x16	; 22
    12e8:	73 e4       	ldi	r23, 0x43	; 67
    12ea:	8f e0       	ldi	r24, 0x0F	; 15
    12ec:	0e 94 27 01 	call	0x24e	; 0x24e <reg_servo_angle>
	reg_servo_angle(16, 226);
    12f0:	40 e0       	ldi	r20, 0x00	; 0
    12f2:	50 e0       	ldi	r21, 0x00	; 0
    12f4:	62 e6       	ldi	r22, 0x62	; 98
    12f6:	73 e4       	ldi	r23, 0x43	; 67
    12f8:	80 e1       	ldi	r24, 0x10	; 16
    12fa:	0e 94 27 01 	call	0x24e	; 0x24e <reg_servo_angle>
	reg_servo_angle(17, 75);
    12fe:	40 e0       	ldi	r20, 0x00	; 0
    1300:	50 e0       	ldi	r21, 0x00	; 0
    1302:	66 e9       	ldi	r22, 0x96	; 150
    1304:	72 e4       	ldi	r23, 0x42	; 66
    1306:	81 e1       	ldi	r24, 0x11	; 17
    1308:	0e 94 27 01 	call	0x24e	; 0x24e <reg_servo_angle>
    130c:	2f ef       	ldi	r18, 0xFF	; 255
    130e:	82 e5       	ldi	r24, 0x52	; 82
    1310:	97 e0       	ldi	r25, 0x07	; 7
    1312:	21 50       	subi	r18, 0x01	; 1
    1314:	80 40       	sbci	r24, 0x00	; 0
    1316:	90 40       	sbci	r25, 0x00	; 0
    1318:	e1 f7       	brne	.-8      	; 0x1312 <eight_rot+0xfa>
    131a:	00 c0       	rjmp	.+0      	; 0x131c <eight_rot+0x104>
    131c:	00 00       	nop
	
	_delay_ms(50*scale);
	action();
    131e:	0c 94 4b 01 	jmp	0x296	; 0x296 <action>
    1322:	08 95       	ret

00001324 <rot_right>:
}

//Funktion för att rotera åt höger (medurs)
void rot_right(void)
{
	seven_rot();
    1324:	02 df       	rcall	.-508    	; 0x112a <seven_rot>
	six_rot();
    1326:	8a de       	rcall	.-748    	; 0x103c <six_rot>
	five_rot();
    1328:	12 de       	rcall	.-988    	; 0xf4e <five_rot>
	four_rot();
    132a:	9a dd       	rcall	.-1228   	; 0xe60 <four_rot>
	three_rot();
    132c:	22 dd       	rcall	.-1468   	; 0xd72 <three_rot>
	two_rot();
    132e:	aa dc       	rcall	.-1708   	; 0xc84 <two_rot>
	one_rot();
    1330:	32 dc       	rcall	.-1948   	; 0xb96 <one_rot>
	eight_rot();
    1332:	72 cf       	rjmp	.-284    	; 0x1218 <eight_rot>
    1334:	08 95       	ret

00001336 <rot_left>:
}

//Funktion för at rotera åt vänster (moturs)
void rot_left(void)
{
	seven_rot();
    1336:	f9 de       	rcall	.-526    	; 0x112a <seven_rot>
	eight_rot();
    1338:	6f df       	rcall	.-290    	; 0x1218 <eight_rot>
	one_rot();
    133a:	2d dc       	rcall	.-1958   	; 0xb96 <one_rot>
	two_rot();
    133c:	a3 dc       	rcall	.-1722   	; 0xc84 <two_rot>
	three_rot();
    133e:	19 dd       	rcall	.-1486   	; 0xd72 <three_rot>
	four_rot();
    1340:	8f dd       	rcall	.-1250   	; 0xe60 <four_rot>
	five_rot();
    1342:	05 de       	rcall	.-1014   	; 0xf4e <five_rot>
	six_rot();
    1344:	7b ce       	rjmp	.-778    	; 0x103c <six_rot>
    1346:	08 95       	ret

00001348 <forward_left>:
//Funktion för att gå framåt-vänster
void forward_left(void)
{
	for(int i = 0; i < 4; i++)
	{
		forward();
    1348:	14 dc       	rcall	.-2008   	; 0xb72 <forward>
    134a:	13 dc       	rcall	.-2010   	; 0xb72 <forward>
    134c:	12 dc       	rcall	.-2012   	; 0xb72 <forward>
    134e:	11 dc       	rcall	.-2014   	; 0xb72 <forward>
	}
	rot_left();
    1350:	f2 cf       	rjmp	.-28     	; 0x1336 <rot_left>
    1352:	08 95       	ret

00001354 <forward_right>:
//Funktion för att gå framåt-höger
void forward_right(void)
{
	for(int i = 0; i < 4; i++)
	{
		forward();
    1354:	0e dc       	rcall	.-2020   	; 0xb72 <forward>
    1356:	0d dc       	rcall	.-2022   	; 0xb72 <forward>
    1358:	0c dc       	rcall	.-2024   	; 0xb72 <forward>
    135a:	0b dc       	rcall	.-2026   	; 0xb72 <forward>
	}
	rot_right();
    135c:	e3 cf       	rjmp	.-58     	; 0x1324 <rot_right>
    135e:	08 95       	ret

00001360 <execute_command>:
/************************************************************************************************************
*********************************************  AVBROTT  *****************************************************
************************************************************************************************************/

void execute_command(void)
{
    1360:	cf 93       	push	r28
	unsigned char data = 0;
	data = SPDR;
    1362:	ce b5       	in	r28, 0x2e	; 46
	if (is_moving)
    1364:	90 91 01 01 	lds	r25, 0x0101
    1368:	99 23       	and	r25, r25
    136a:	31 f0       	breq	.+12     	; 0x1378 <execute_command+0x18>
	{
		spi_tranceiver(NOT_READY);
    136c:	80 ed       	ldi	r24, 0xD0	; 208
    136e:	0e 94 6f 01 	call	0x2de	; 0x2de <spi_tranceiver>
		data_sending = false;
    1372:	10 92 00 01 	sts	0x0100, r1
		return;
    1376:	45 c0       	rjmp	.+138    	; 0x1402 <execute_command+0xa2>
	}
	spi_tranceiver(READY);
    1378:	8f ef       	ldi	r24, 0xFF	; 255
    137a:	0e 94 6f 01 	call	0x2de	; 0x2de <spi_tranceiver>
	switch(data)
    137e:	8c 2f       	mov	r24, r28
    1380:	90 e0       	ldi	r25, 0x00	; 0
    1382:	fc 01       	movw	r30, r24
    1384:	31 97       	sbiw	r30, 0x01	; 1
    1386:	e7 30       	cpi	r30, 0x07	; 7
    1388:	f1 05       	cpc	r31, r1
    138a:	08 f0       	brcs	.+2      	; 0x138e <execute_command+0x2e>
    138c:	38 c0       	rjmp	.+112    	; 0x13fe <execute_command+0x9e>
    138e:	ea 5b       	subi	r30, 0xBA	; 186
    1390:	ff 4f       	sbci	r31, 0xFF	; 255
    1392:	47 c1       	rjmp	.+654    	; 0x1622 <__tablejump2__>
	{
		case WALK_FORWARD :
			is_moving = true;
    1394:	81 e0       	ldi	r24, 0x01	; 1
    1396:	80 93 01 01 	sts	0x0101, r24
			forward();
    139a:	eb db       	rcall	.-2090   	; 0xb72 <forward>
			is_moving = false;
    139c:	10 92 01 01 	sts	0x0101, r1
			led_blink_red(1);
    13a0:	81 e0       	ldi	r24, 0x01	; 1
    13a2:	90 e0       	ldi	r25, 0x00	; 0
    13a4:	0e 94 5f 00 	call	0xbe	; 0xbe <led_blink_red>
			break;
    13a8:	2a c0       	rjmp	.+84     	; 0x13fe <execute_command+0x9e>
		
		case WALK_BACKWARD :
			is_moving = true;
    13aa:	81 e0       	ldi	r24, 0x01	; 1
    13ac:	80 93 01 01 	sts	0x0101, r24
			backward();
    13b0:	e9 db       	rcall	.-2094   	; 0xb84 <backward>
			is_moving = false;
    13b2:	10 92 01 01 	sts	0x0101, r1
			break;
    13b6:	23 c0       	rjmp	.+70     	; 0x13fe <execute_command+0x9e>
		
		case ROTATE_LEFT :
			is_moving = true;
    13b8:	81 e0       	ldi	r24, 0x01	; 1
    13ba:	80 93 01 01 	sts	0x0101, r24
			rot_left();
    13be:	bb df       	rcall	.-138    	; 0x1336 <rot_left>
			is_moving = false;
    13c0:	10 92 01 01 	sts	0x0101, r1
			break;
    13c4:	1c c0       	rjmp	.+56     	; 0x13fe <execute_command+0x9e>
		
		case ROTATE_RIGHT :
			is_moving = true;
    13c6:	81 e0       	ldi	r24, 0x01	; 1
    13c8:	80 93 01 01 	sts	0x0101, r24
			rot_right();
    13cc:	ab df       	rcall	.-170    	; 0x1324 <rot_right>
			is_moving = false;
    13ce:	10 92 01 01 	sts	0x0101, r1
			break;
    13d2:	15 c0       	rjmp	.+42     	; 0x13fe <execute_command+0x9e>
			
		case TURN_LEFT :
			is_moving = true;
    13d4:	81 e0       	ldi	r24, 0x01	; 1
    13d6:	80 93 01 01 	sts	0x0101, r24
			forward_left();
    13da:	b6 df       	rcall	.-148    	; 0x1348 <forward_left>
			is_moving = false;
    13dc:	10 92 01 01 	sts	0x0101, r1
			break;
    13e0:	0e c0       	rjmp	.+28     	; 0x13fe <execute_command+0x9e>
			
		case TURN_RIGHT :
			is_moving = true;
    13e2:	81 e0       	ldi	r24, 0x01	; 1
    13e4:	80 93 01 01 	sts	0x0101, r24
			forward_right();
    13e8:	b5 df       	rcall	.-150    	; 0x1354 <forward_right>
			is_moving = false;
    13ea:	10 92 01 01 	sts	0x0101, r1
			break;
    13ee:	07 c0       	rjmp	.+14     	; 0x13fe <execute_command+0x9e>
			
		case STAND_UP :
			is_moving = true;
    13f0:	81 e0       	ldi	r24, 0x01	; 1
    13f2:	80 93 01 01 	sts	0x0101, r24
			stand();
    13f6:	0e 94 93 01 	call	0x326	; 0x326 <stand>
			is_moving = false;
    13fa:	10 92 01 01 	sts	0x0101, r1
			break;
		
		default :
			break;
	}
	data_sending = false;
    13fe:	10 92 00 01 	sts	0x0100, r1
	return;
}
    1402:	cf 91       	pop	r28
    1404:	08 95       	ret

00001406 <__vector_19>:

ISR(SPI_STC_vect)  
{  
    1406:	1f 92       	push	r1
    1408:	0f 92       	push	r0
    140a:	0f b6       	in	r0, 0x3f	; 63
    140c:	0f 92       	push	r0
    140e:	11 24       	eor	r1, r1
    1410:	0b b6       	in	r0, 0x3b	; 59
    1412:	0f 92       	push	r0
    1414:	2f 93       	push	r18
    1416:	3f 93       	push	r19
    1418:	4f 93       	push	r20
    141a:	5f 93       	push	r21
    141c:	6f 93       	push	r22
    141e:	7f 93       	push	r23
    1420:	8f 93       	push	r24
    1422:	9f 93       	push	r25
    1424:	af 93       	push	r26
    1426:	bf 93       	push	r27
    1428:	ef 93       	push	r30
    142a:	ff 93       	push	r31
	//led_blink_green(1);
	if (!(data_sending))
    142c:	80 91 00 01 	lds	r24, 0x0100
    1430:	81 11       	cpse	r24, r1
    1432:	04 c0       	rjmp	.+8      	; 0x143c <__vector_19+0x36>
	{
		data_sending = true;
    1434:	81 e0       	ldi	r24, 0x01	; 1
    1436:	80 93 00 01 	sts	0x0100, r24
		execute_command();
    143a:	92 df       	rcall	.-220    	; 0x1360 <execute_command>
	}
}
    143c:	ff 91       	pop	r31
    143e:	ef 91       	pop	r30
    1440:	bf 91       	pop	r27
    1442:	af 91       	pop	r26
    1444:	9f 91       	pop	r25
    1446:	8f 91       	pop	r24
    1448:	7f 91       	pop	r23
    144a:	6f 91       	pop	r22
    144c:	5f 91       	pop	r21
    144e:	4f 91       	pop	r20
    1450:	3f 91       	pop	r19
    1452:	2f 91       	pop	r18
    1454:	0f 90       	pop	r0
    1456:	0b be       	out	0x3b, r0	; 59
    1458:	0f 90       	pop	r0
    145a:	0f be       	out	0x3f, r0	; 63
    145c:	0f 90       	pop	r0
    145e:	1f 90       	pop	r1
    1460:	18 95       	reti

00001462 <__fixunssfsi>:
    1462:	33 d0       	rcall	.+102    	; 0x14ca <__fp_splitA>
    1464:	88 f0       	brcs	.+34     	; 0x1488 <__fixunssfsi+0x26>
    1466:	9f 57       	subi	r25, 0x7F	; 127
    1468:	90 f0       	brcs	.+36     	; 0x148e <__fixunssfsi+0x2c>
    146a:	b9 2f       	mov	r27, r25
    146c:	99 27       	eor	r25, r25
    146e:	b7 51       	subi	r27, 0x17	; 23
    1470:	a0 f0       	brcs	.+40     	; 0x149a <__fixunssfsi+0x38>
    1472:	d1 f0       	breq	.+52     	; 0x14a8 <__fixunssfsi+0x46>
    1474:	66 0f       	add	r22, r22
    1476:	77 1f       	adc	r23, r23
    1478:	88 1f       	adc	r24, r24
    147a:	99 1f       	adc	r25, r25
    147c:	1a f0       	brmi	.+6      	; 0x1484 <__fixunssfsi+0x22>
    147e:	ba 95       	dec	r27
    1480:	c9 f7       	brne	.-14     	; 0x1474 <__fixunssfsi+0x12>
    1482:	12 c0       	rjmp	.+36     	; 0x14a8 <__fixunssfsi+0x46>
    1484:	b1 30       	cpi	r27, 0x01	; 1
    1486:	81 f0       	breq	.+32     	; 0x14a8 <__fixunssfsi+0x46>
    1488:	3a d0       	rcall	.+116    	; 0x14fe <__fp_zero>
    148a:	b1 e0       	ldi	r27, 0x01	; 1
    148c:	08 95       	ret
    148e:	37 c0       	rjmp	.+110    	; 0x14fe <__fp_zero>
    1490:	67 2f       	mov	r22, r23
    1492:	78 2f       	mov	r23, r24
    1494:	88 27       	eor	r24, r24
    1496:	b8 5f       	subi	r27, 0xF8	; 248
    1498:	39 f0       	breq	.+14     	; 0x14a8 <__fixunssfsi+0x46>
    149a:	b9 3f       	cpi	r27, 0xF9	; 249
    149c:	cc f3       	brlt	.-14     	; 0x1490 <__fixunssfsi+0x2e>
    149e:	86 95       	lsr	r24
    14a0:	77 95       	ror	r23
    14a2:	67 95       	ror	r22
    14a4:	b3 95       	inc	r27
    14a6:	d9 f7       	brne	.-10     	; 0x149e <__fixunssfsi+0x3c>
    14a8:	3e f4       	brtc	.+14     	; 0x14b8 <__fixunssfsi+0x56>
    14aa:	90 95       	com	r25
    14ac:	80 95       	com	r24
    14ae:	70 95       	com	r23
    14b0:	61 95       	neg	r22
    14b2:	7f 4f       	sbci	r23, 0xFF	; 255
    14b4:	8f 4f       	sbci	r24, 0xFF	; 255
    14b6:	9f 4f       	sbci	r25, 0xFF	; 255
    14b8:	08 95       	ret

000014ba <__fp_split3>:
    14ba:	57 fd       	sbrc	r21, 7
    14bc:	90 58       	subi	r25, 0x80	; 128
    14be:	44 0f       	add	r20, r20
    14c0:	55 1f       	adc	r21, r21
    14c2:	59 f0       	breq	.+22     	; 0x14da <__fp_splitA+0x10>
    14c4:	5f 3f       	cpi	r21, 0xFF	; 255
    14c6:	71 f0       	breq	.+28     	; 0x14e4 <__fp_splitA+0x1a>
    14c8:	47 95       	ror	r20

000014ca <__fp_splitA>:
    14ca:	88 0f       	add	r24, r24
    14cc:	97 fb       	bst	r25, 7
    14ce:	99 1f       	adc	r25, r25
    14d0:	61 f0       	breq	.+24     	; 0x14ea <__fp_splitA+0x20>
    14d2:	9f 3f       	cpi	r25, 0xFF	; 255
    14d4:	79 f0       	breq	.+30     	; 0x14f4 <__fp_splitA+0x2a>
    14d6:	87 95       	ror	r24
    14d8:	08 95       	ret
    14da:	12 16       	cp	r1, r18
    14dc:	13 06       	cpc	r1, r19
    14de:	14 06       	cpc	r1, r20
    14e0:	55 1f       	adc	r21, r21
    14e2:	f2 cf       	rjmp	.-28     	; 0x14c8 <__fp_split3+0xe>
    14e4:	46 95       	lsr	r20
    14e6:	f1 df       	rcall	.-30     	; 0x14ca <__fp_splitA>
    14e8:	08 c0       	rjmp	.+16     	; 0x14fa <__fp_splitA+0x30>
    14ea:	16 16       	cp	r1, r22
    14ec:	17 06       	cpc	r1, r23
    14ee:	18 06       	cpc	r1, r24
    14f0:	99 1f       	adc	r25, r25
    14f2:	f1 cf       	rjmp	.-30     	; 0x14d6 <__fp_splitA+0xc>
    14f4:	86 95       	lsr	r24
    14f6:	71 05       	cpc	r23, r1
    14f8:	61 05       	cpc	r22, r1
    14fa:	08 94       	sec
    14fc:	08 95       	ret

000014fe <__fp_zero>:
    14fe:	e8 94       	clt

00001500 <__fp_szero>:
    1500:	bb 27       	eor	r27, r27
    1502:	66 27       	eor	r22, r22
    1504:	77 27       	eor	r23, r23
    1506:	cb 01       	movw	r24, r22
    1508:	97 f9       	bld	r25, 7
    150a:	08 95       	ret

0000150c <__mulsf3>:
    150c:	0b d0       	rcall	.+22     	; 0x1524 <__mulsf3x>
    150e:	78 c0       	rjmp	.+240    	; 0x1600 <__fp_round>
    1510:	69 d0       	rcall	.+210    	; 0x15e4 <__fp_pscA>
    1512:	28 f0       	brcs	.+10     	; 0x151e <__mulsf3+0x12>
    1514:	6e d0       	rcall	.+220    	; 0x15f2 <__fp_pscB>
    1516:	18 f0       	brcs	.+6      	; 0x151e <__mulsf3+0x12>
    1518:	95 23       	and	r25, r21
    151a:	09 f0       	breq	.+2      	; 0x151e <__mulsf3+0x12>
    151c:	5a c0       	rjmp	.+180    	; 0x15d2 <__fp_inf>
    151e:	5f c0       	rjmp	.+190    	; 0x15de <__fp_nan>
    1520:	11 24       	eor	r1, r1
    1522:	ee cf       	rjmp	.-36     	; 0x1500 <__fp_szero>

00001524 <__mulsf3x>:
    1524:	ca df       	rcall	.-108    	; 0x14ba <__fp_split3>
    1526:	a0 f3       	brcs	.-24     	; 0x1510 <__mulsf3+0x4>

00001528 <__mulsf3_pse>:
    1528:	95 9f       	mul	r25, r21
    152a:	d1 f3       	breq	.-12     	; 0x1520 <__mulsf3+0x14>
    152c:	95 0f       	add	r25, r21
    152e:	50 e0       	ldi	r21, 0x00	; 0
    1530:	55 1f       	adc	r21, r21
    1532:	62 9f       	mul	r22, r18
    1534:	f0 01       	movw	r30, r0
    1536:	72 9f       	mul	r23, r18
    1538:	bb 27       	eor	r27, r27
    153a:	f0 0d       	add	r31, r0
    153c:	b1 1d       	adc	r27, r1
    153e:	63 9f       	mul	r22, r19
    1540:	aa 27       	eor	r26, r26
    1542:	f0 0d       	add	r31, r0
    1544:	b1 1d       	adc	r27, r1
    1546:	aa 1f       	adc	r26, r26
    1548:	64 9f       	mul	r22, r20
    154a:	66 27       	eor	r22, r22
    154c:	b0 0d       	add	r27, r0
    154e:	a1 1d       	adc	r26, r1
    1550:	66 1f       	adc	r22, r22
    1552:	82 9f       	mul	r24, r18
    1554:	22 27       	eor	r18, r18
    1556:	b0 0d       	add	r27, r0
    1558:	a1 1d       	adc	r26, r1
    155a:	62 1f       	adc	r22, r18
    155c:	73 9f       	mul	r23, r19
    155e:	b0 0d       	add	r27, r0
    1560:	a1 1d       	adc	r26, r1
    1562:	62 1f       	adc	r22, r18
    1564:	83 9f       	mul	r24, r19
    1566:	a0 0d       	add	r26, r0
    1568:	61 1d       	adc	r22, r1
    156a:	22 1f       	adc	r18, r18
    156c:	74 9f       	mul	r23, r20
    156e:	33 27       	eor	r19, r19
    1570:	a0 0d       	add	r26, r0
    1572:	61 1d       	adc	r22, r1
    1574:	23 1f       	adc	r18, r19
    1576:	84 9f       	mul	r24, r20
    1578:	60 0d       	add	r22, r0
    157a:	21 1d       	adc	r18, r1
    157c:	82 2f       	mov	r24, r18
    157e:	76 2f       	mov	r23, r22
    1580:	6a 2f       	mov	r22, r26
    1582:	11 24       	eor	r1, r1
    1584:	9f 57       	subi	r25, 0x7F	; 127
    1586:	50 40       	sbci	r21, 0x00	; 0
    1588:	8a f0       	brmi	.+34     	; 0x15ac <__mulsf3_pse+0x84>
    158a:	e1 f0       	breq	.+56     	; 0x15c4 <__mulsf3_pse+0x9c>
    158c:	88 23       	and	r24, r24
    158e:	4a f0       	brmi	.+18     	; 0x15a2 <__mulsf3_pse+0x7a>
    1590:	ee 0f       	add	r30, r30
    1592:	ff 1f       	adc	r31, r31
    1594:	bb 1f       	adc	r27, r27
    1596:	66 1f       	adc	r22, r22
    1598:	77 1f       	adc	r23, r23
    159a:	88 1f       	adc	r24, r24
    159c:	91 50       	subi	r25, 0x01	; 1
    159e:	50 40       	sbci	r21, 0x00	; 0
    15a0:	a9 f7       	brne	.-22     	; 0x158c <__mulsf3_pse+0x64>
    15a2:	9e 3f       	cpi	r25, 0xFE	; 254
    15a4:	51 05       	cpc	r21, r1
    15a6:	70 f0       	brcs	.+28     	; 0x15c4 <__mulsf3_pse+0x9c>
    15a8:	14 c0       	rjmp	.+40     	; 0x15d2 <__fp_inf>
    15aa:	aa cf       	rjmp	.-172    	; 0x1500 <__fp_szero>
    15ac:	5f 3f       	cpi	r21, 0xFF	; 255
    15ae:	ec f3       	brlt	.-6      	; 0x15aa <__mulsf3_pse+0x82>
    15b0:	98 3e       	cpi	r25, 0xE8	; 232
    15b2:	dc f3       	brlt	.-10     	; 0x15aa <__mulsf3_pse+0x82>
    15b4:	86 95       	lsr	r24
    15b6:	77 95       	ror	r23
    15b8:	67 95       	ror	r22
    15ba:	b7 95       	ror	r27
    15bc:	f7 95       	ror	r31
    15be:	e7 95       	ror	r30
    15c0:	9f 5f       	subi	r25, 0xFF	; 255
    15c2:	c1 f7       	brne	.-16     	; 0x15b4 <__mulsf3_pse+0x8c>
    15c4:	fe 2b       	or	r31, r30
    15c6:	88 0f       	add	r24, r24
    15c8:	91 1d       	adc	r25, r1
    15ca:	96 95       	lsr	r25
    15cc:	87 95       	ror	r24
    15ce:	97 f9       	bld	r25, 7
    15d0:	08 95       	ret

000015d2 <__fp_inf>:
    15d2:	97 f9       	bld	r25, 7
    15d4:	9f 67       	ori	r25, 0x7F	; 127
    15d6:	80 e8       	ldi	r24, 0x80	; 128
    15d8:	70 e0       	ldi	r23, 0x00	; 0
    15da:	60 e0       	ldi	r22, 0x00	; 0
    15dc:	08 95       	ret

000015de <__fp_nan>:
    15de:	9f ef       	ldi	r25, 0xFF	; 255
    15e0:	80 ec       	ldi	r24, 0xC0	; 192
    15e2:	08 95       	ret

000015e4 <__fp_pscA>:
    15e4:	00 24       	eor	r0, r0
    15e6:	0a 94       	dec	r0
    15e8:	16 16       	cp	r1, r22
    15ea:	17 06       	cpc	r1, r23
    15ec:	18 06       	cpc	r1, r24
    15ee:	09 06       	cpc	r0, r25
    15f0:	08 95       	ret

000015f2 <__fp_pscB>:
    15f2:	00 24       	eor	r0, r0
    15f4:	0a 94       	dec	r0
    15f6:	12 16       	cp	r1, r18
    15f8:	13 06       	cpc	r1, r19
    15fa:	14 06       	cpc	r1, r20
    15fc:	05 06       	cpc	r0, r21
    15fe:	08 95       	ret

00001600 <__fp_round>:
    1600:	09 2e       	mov	r0, r25
    1602:	03 94       	inc	r0
    1604:	00 0c       	add	r0, r0
    1606:	11 f4       	brne	.+4      	; 0x160c <__fp_round+0xc>
    1608:	88 23       	and	r24, r24
    160a:	52 f0       	brmi	.+20     	; 0x1620 <__fp_round+0x20>
    160c:	bb 0f       	add	r27, r27
    160e:	40 f4       	brcc	.+16     	; 0x1620 <__fp_round+0x20>
    1610:	bf 2b       	or	r27, r31
    1612:	11 f4       	brne	.+4      	; 0x1618 <__fp_round+0x18>
    1614:	60 ff       	sbrs	r22, 0
    1616:	04 c0       	rjmp	.+8      	; 0x1620 <__fp_round+0x20>
    1618:	6f 5f       	subi	r22, 0xFF	; 255
    161a:	7f 4f       	sbci	r23, 0xFF	; 255
    161c:	8f 4f       	sbci	r24, 0xFF	; 255
    161e:	9f 4f       	sbci	r25, 0xFF	; 255
    1620:	08 95       	ret

00001622 <__tablejump2__>:
    1622:	ee 0f       	add	r30, r30
    1624:	ff 1f       	adc	r31, r31

00001626 <__tablejump__>:
    1626:	05 90       	lpm	r0, Z+
    1628:	f4 91       	lpm	r31, Z
    162a:	e0 2d       	mov	r30, r0
    162c:	09 94       	ijmp

0000162e <_exit>:
    162e:	f8 94       	cli

00001630 <__stop_program>:
    1630:	ff cf       	rjmp	.-2      	; 0x1630 <__stop_program>
